{"ast":null,"code":"import _classCallCheck from \"/home/daniel/reatnet.net/react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/daniel/reatnet.net/react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/daniel/reatnet.net/react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/daniel/reatnet.net/react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/daniel/reatnet.net/react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/daniel/reatnet.net/react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/daniel/reatnet.net/react-app/src/App.js\";\nimport React, { Component } from 'react';\nimport kiwi from './images/kiwi.png';\nimport trex from './images/komodo.png';\nimport komodo from './images/trex.png';\nimport gitlab from './images/gitlab.png';\nimport './App.css';\nvar imgs = [kiwi, trex, komodo];\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      imgIdx: 0\n    };\n    _this.imgTick = _this.imgTick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      setInterval(this.imgTick, 1000 * 3);\n    }\n  }, {\n    key: \"imgTick\",\n    value: function imgTick() {\n      if (this.state == null) return;\n      var newIdx = this.state.imgIdx + 1;\n\n      if (newIdx === imgs.length) {\n        newIdx = 0;\n      }\n\n      this.setState({\n        imgIdx: newIdx\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var logo = imgs[this.state.imgIdx];\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"reatret.net\"), React.createElement(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"I'll update this one day, I swear. \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), \"For now, watch these guys \", React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"spin\"), \".\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \" Here's  \"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: gitlab,\n        alt: \"logo\",\n        className: \"gitlab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), \" \"))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/daniel/reatnet.net/react-app/src/App.js"],"names":["React","Component","kiwi","trex","komodo","gitlab","imgs","App","props","state","imgIdx","imgTick","bind","setInterval","newIdx","length","setState","logo"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,WAAP;AAEA,IAAMC,IAAI,GAAG,CAACJ,IAAD,EAAOC,IAAP,EAAaC,MAAb,CAAb;;IAEMG,G;;;;;AAEJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAb;AACA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,uDAAf;AAHiB;AAIlB;;;;wCAEmB;AAClBC,MAAAA,WAAW,CAAC,KAAKF,OAAN,EAAe,OAAO,CAAtB,CAAX;AACD;;;8BAES;AACR,UAAI,KAAKF,KAAL,IAAc,IAAlB,EAAwB;AACxB,UAAIK,MAAM,GAAG,KAAKL,KAAL,CAAWC,MAAX,GAAoB,CAAjC;;AACA,UAAII,MAAM,KAAKR,IAAI,CAACS,MAApB,EAA4B;AAC1BD,QAAAA,MAAM,GAAG,CAAT;AACD;;AACD,WAAKE,QAAL,CAAc;AAACN,QAAAA,MAAM,EAAEI;AAAT,OAAd;AACD;;;6BAEQ;AACP,UAAMG,IAAI,GAAGX,IAAI,CAAC,KAAKG,KAAL,CAAWC,MAAZ,CAAjB;AACA,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,EAEE;AAAK,QAAA,GAAG,EAAEO,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDACqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADrC,gCAE4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAF5B,MAHF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM;AAAK,QAAA,GAAG,EAAEZ,MAAV;AAAkB,QAAA,GAAG,EAAC,MAAtB;AAA6B,QAAA,SAAS,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN,MAFF,CAPF,CADF,CADF;AAgBD;;;;EAvCeJ,S;;AA0ClB,eAAeM,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport kiwi from './images/kiwi.png';\nimport trex from './images/komodo.png';\nimport komodo from './images/trex.png';\nimport gitlab from './images/gitlab.png';\nimport './App.css';\n\nconst imgs = [kiwi, trex, komodo]\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {imgIdx: 0}\n    this.imgTick = this.imgTick.bind(this)\n  }\n\n  componentDidMount() {\n    setInterval(this.imgTick, 1000 * 3)\n  }\n\n  imgTick() {\n    if (this.state == null) return\n    let newIdx = this.state.imgIdx + 1\n    if (newIdx === imgs.length) {\n      newIdx = 0\n    }\n    this.setState({imgIdx: newIdx})\n  }\n\n  render() {\n    const logo = imgs[this.state.imgIdx]\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        <h2>reatret.net</h2>\n          <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n          <p>\n            I'll update this one day, I swear. <br></br>\n            For now, watch these guys <i>spin</i>.\n          </p>\n          <div>\n            <span> Here's  </span>\n            <span><img src={gitlab} alt=\"logo\" className=\"gitlab\"/> </span>\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}