{"map":"{\"version\":3,\"sources\":[\"/home/daniel/reatnet.net/react-app/node_modules/url-loader/dist/cjs.js??ref--6-oneOf-0!/home/daniel/reatnet.net/react-app/src/images/kiwi.png\",\"/home/daniel/reatnet.net/react-app/node_modules/url-loader/dist/cjs.js??ref--6-oneOf-0!/home/daniel/reatnet.net/react-app/src/images/komodo.png\",\"/home/daniel/reatnet.net/react-app/node_modules/url-loader/dist/cjs.js??ref--6-oneOf-0!/home/daniel/reatnet.net/react-app/src/images/trex.png\",\"/home/daniel/reatnet.net/react-app/node_modules/url-loader/dist/cjs.js??ref--6-oneOf-0!/home/daniel/reatnet.net/react-app/src/images/gitlab.png\",\"/home/daniel/reatnet.net/react-app/src/App.js\",\"/home/daniel/reatnet.net/react-app/src/serviceWorker.js\",\"/home/daniel/reatnet.net/react-app/src/index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"imgs\",\"kiwi\",\"trex\",\"komodo\",\"App\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"imgIdx\",\"imgTick\",\"bind\",\"assertThisInitialized\",\"setInterval\",\"newIdx\",\"length\",\"setState\",\"logo\",\"react_default\",\"a\",\"createElement\",\"className\",\"src\",\"alt\",\"href\",\"gitlab\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"gFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6SCOlCC,SAAO,CAACC,EAAAA,EAAMC,EAAAA,EAAMC,EAAAA,IA4CXC,cAxCb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CAACC,OAAQ,GACtBR,EAAKS,QAAUT,EAAKS,QAAQC,KAAbT,OAAAU,EAAA,EAAAV,CAAAA,OAAAU,EAAA,EAAAV,CAAAD,KAHEA,mFAOjBY,YAAYT,KAAKM,QAAS,uCAI1B,GAAkB,MAAdN,KAAKI,MAAT,CACA,IAAIM,EAASV,KAAKI,MAAMC,OAAS,EAC7BK,IAAWnB,EAAKoB,SAClBD,EAAS,GAEXV,KAAKY,SAAS,CAACP,OAAQK,sCAIvB,IAAMG,EAAOtB,EAAKS,KAAKI,MAAMC,QAC7B,OACES,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,SAAA,CAAQC,UAAU,cAClBH,EAAAC,EAAAC,cAAA,KAAA,KAAA,eACAF,EAAAC,EAAAC,cAAA,KAAA,KAAA,qBACEF,EAAAC,EAAAC,cAAA,MAAA,CAAKE,IAAKL,EAAMI,UAAU,WAAWE,IAAI,SACzCL,EAAAC,EAAAC,cAAA,IAAA,KAAA,sCACqCF,EAAAC,EAAAC,cAAA,KAAA,MADrC,6BAE4BF,EAAAC,EAAAC,cAAA,IAAA,KAAA,QAF5B,KAIAF,EAAAC,EAAAC,cAAA,IAAA,CAAGI,KAAK,kCACNN,EAAAC,EAAAC,cAAA,OAAA,KAAMF,EAAAC,EAAAC,cAAA,MAAA,CAAKE,IAAKG,EAAAA,EAAQF,IAAI,OAAOF,UAAU,WAA7C,eAlCMK,EAAAA,WCGEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAOf,EAAAC,EAAAC,cAACc,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/kiwi.a0352b91.png\\\";\",\"module.exports = __webpack_public_path__ + \\\"static/media/komodo.93a84db4.png\\\";\",\"module.exports = __webpack_public_path__ + \\\"static/media/trex.6e57b2ee.png\\\";\",\"module.exports = __webpack_public_path__ + \\\"static/media/gitlab.54b1ba40.png\\\";\",\"import React, { Component } from 'react';\\nimport kiwi from './images/kiwi.png';\\nimport trex from './images/komodo.png';\\nimport komodo from './images/trex.png';\\nimport gitlab from './images/gitlab.png';\\nimport './App.css';\\n\\nconst imgs = [kiwi, trex, komodo]\\n\\nclass App extends Component {\\n\\n  constructor(props) {\\n    super(props)\\n    this.state = {imgIdx: 0}\\n    this.imgTick = this.imgTick.bind(this)\\n  }\\n\\n  componentDidMount() {\\n    setInterval(this.imgTick, 1000 * 3)\\n  }\\n\\n  imgTick() {\\n    if (this.state == null) return\\n    let newIdx = this.state.imgIdx + 1\\n    if (newIdx === imgs.length) {\\n      newIdx = 0\\n    }\\n    this.setState({imgIdx: newIdx})\\n  }\\n\\n  render() {\\n    const logo = imgs[this.state.imgIdx]\\n    return (\\n      <div className=\\\"App\\\">\\n        <header className=\\\"App-header\\\">\\n        <h2>reatret.net</h2>\\n        <h5> by Daniel Loera </h5>\\n          <img src={logo} className=\\\"App-logo\\\" alt=\\\"logo\\\"/>\\n          <p>\\n            I'll update this one day, I swear. <br></br>\\n            For now, watch these guys <i>spin</i>.\\n          </p>\\n          <a href=\\\"https://gitlab.com/danielloera\\\">\\n            <span><img src={gitlab} alt=\\\"logo\\\" className=\\\"gitlab\\\"/> </span>\\n          </a>\\n        </header>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,,,,,function(e,t,a){e.exports=a.p+\"static/media/kiwi.a0352b91.png\"},function(e,t,a){e.exports=a.p+\"static/media/komodo.93a84db4.png\"},function(e,t,a){e.exports=a.p+\"static/media/trex.6e57b2ee.png\"},function(e,t,a){e.exports=a.p+\"static/media/gitlab.54b1ba40.png\"},,,function(e,t,a){e.exports=a(21)},,,,,,function(e,t,a){},function(e,t,a){},function(e,t,a){\"use strict\";a.r(t);var n=a(0),i=a.n(n),o=a(3),c=a.n(o),l=(a(19),a(4)),r=a(5),s=a(11),m=a(6),u=a(12),p=a(1),d=a(7),g=a.n(d),h=a(8),b=a.n(h),f=a(9),w=a.n(f),k=a(10),v=a.n(k),E=(a(20),[g.a,b.a,w.a]),x=function(e){function t(e){var a;return Object(l.a)(this,t),(a=Object(s.a)(this,Object(m.a)(t).call(this,e))).state={imgIdx:0},a.imgTick=a.imgTick.bind(Object(p.a)(Object(p.a)(a))),a}return Object(u.a)(t,e),Object(r.a)(t,[{key:\"componentDidMount\",value:function(){setInterval(this.imgTick,3e3)}},{key:\"imgTick\",value:function(){if(null!=this.state){var e=this.state.imgIdx+1;e===E.length&&(e=0),this.setState({imgIdx:e})}}},{key:\"render\",value:function(){var e=E[this.state.imgIdx];return i.a.createElement(\"div\",{className:\"App\"},i.a.createElement(\"header\",{className:\"App-header\"},i.a.createElement(\"h2\",null,\"reatret.net\"),i.a.createElement(\"h5\",null,\" by Daniel Loera \"),i.a.createElement(\"img\",{src:e,className:\"App-logo\",alt:\"logo\"}),i.a.createElement(\"p\",null,\"I'll update this one day, I swear. \",i.a.createElement(\"br\",null),\"For now, watch these guys \",i.a.createElement(\"i\",null,\"spin\"),\".\"),i.a.createElement(\"a\",{href:\"https://gitlab.com/danielloera\"},i.a.createElement(\"span\",null,i.a.createElement(\"img\",{src:v.a,alt:\"logo\",className:\"gitlab\"}),\" \"))))}}]),t}(n.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(i.a.createElement(x,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}],[[13,1,2]]]);","extractedComments":[]}