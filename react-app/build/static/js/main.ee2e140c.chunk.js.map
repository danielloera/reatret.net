{"version":3,"sources":["images/kiwi.png","images/komodo.png","images/trex.png","components/App/404.js","components/App/TempDrawer.js","components/App/NavBar.js","utils.js","components/Home/Home.js","components/PrimeUlam/PrimeUlam.js","components/UTTower/UTTower.js","components/CodeSwitching/LabeledWord.js","components/CodeSwitching/CodeSwitching.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NotFound","props","react_default","a","createElement","style","padding","Typography","variant","DRAWER_LIST","text","icon","Home_default","link","divider","Language_default","ScatterPlot_default","RecordVoiceOver_default","withStyles","list","minWidth","maxWidth","classes","Drawer","open","opened","onClose","toggle","tabIndex","role","onClick","onKeyDown","className","List","map","dItem","Divider","react_router_dom","to","key","textDecoration","color","ListItem","button","ListItemIcon","ListItemText","primary","HideOnScroll","children","trigger","useScrollTrigger","Slide","appear","direction","in","theme","menuButton","marginRight","spacing","_useState","useState","_useState2","Object","slicedToArray","openDrawer","setOpenDrawer","AppBar","position","Toolbar","IconButton","aria-label","Menu_default","App_TempDrawer","state","createLinks","links","item","name","display","textAlign","margin","href","LINKS","Code_default","fontSize","Description_default","Email_default","imgs","kiwi","trex","komodo","FASTER","SLOWER","Links","createSnackBar","v","h","message","handleClose","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","id","createControl","fn","concat","FastRewind_default","FastForward_default","defaultSpin","defaultSwap","root","marginTop","spinningImage","animation","height","marginBottom","card","centerHolder","justifyContent","count","Math","trunc","random","length","imgIdx","setImgIdx","_useState3","_useState4","spinSpeed","setSpinSpeed","_useState5","_useState6","swapSpeed","setSwapSpeed","_useState7","_useState8","spinSnack","setSpinSnack","_useState9","_useState10","swapSnack","setSwapSnack","_useState11","_useState12","spinMsg","setSpinMsg","_useState13","_useState14","swapMsg","setSwapMsg","_useState15","_useState16","loading","setLoading","_useState17","_useState18","countMsg","setCountMsg","imgTick","newIdx","spin","type","newSpeed","swap","useEffect","setInterval","clearInterval","collection","db","Promise","resolve","reject","get","then","snap","size","catch","err","console","log","logo","spinStyle","useMemo","visitorCount","CircularProgress","spinSnackBar","e","r","swapSnackBar","spinControl","swapControl","Container","Grid","container","justify","alignItems","xs","src","alt","sm","md","cardHolder","Card","elevation","CardContent","component","CardActions","Button","TSlider","Slider","createSliderWithTooltip","RENDER","CIRCLE","getSpiralIdx","n","k","ceil","sqrt","t","m","pow","x","y","SLIDER_FIELDS","min","max","PrimeUlam","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","board","prevPrimes","backgroundRect","maxPrimeSize","maxStart","spiral","bgColor","shape","shapeSize","start","stageSize","primeSize","primes","notify","msg","layer","handleSlider","bind","assertThisInitialized","makeSpiral","updateDimensions","setState","window","innerWidth","innerHeight","_this$state","updatePrimes","addEventListener","prevProps","prevState","_this2","_this$state2","limit","newLimit","ns","_this3","primeThread","threads","spawn","input","done","ps","prevData","prevLen","diff","i","push","Array","fill","ans","Set","add","send","on","response","data","newBoard","_spiral","newStart","arguments","undefined","_this$state3","primeJump","tempArr","num","len","rawHalf","half","floor","idx","spiralize","circles","squares","triangs","has","jx","jy","ReactKonva","radius","listening","perfectDrawEnabled","width","sides","defineProperty","_this4","val","_this5","_this$state4","numberVars","shapes","batchDraw","title","align","stage","shadowBlur","ref","controlsLabel","controls","noValidate","autoComplete","fields","values","doms","field","value","sliderField","slideLabel","handleStyle","backgroundColor","secondaryColor","borderColor","trackStyle","slider","step","defaultValue","onAfterChange","createSliders","cPickers","colorPicker","material_ui_color_picker_lib_default","onChange","c","FormControl","shapePicker","InputLabel","htmlFor","Select","event","target","inputProps","MenuItem","endingText","Component","flexWrap","marginLeft","botHolder","setWidth","setHeight","ratio","opRatio","defaultWidth","defaultHeight","removeEventListener","Paper","allow","COLOR","es","en","other","getMargin","w1","w2","labelText","label","word","labelWidth","labelMarginLeft","wordMarginLeft","toUpperCase","Assignment_default","DEFAULT_INPUT","API_URL","labeledWords","overflowX","overflowY","border","borderRadius","buttonHolder","summary","inputText","setInputText","labeledData","setLabeledData","lastLabeled","setLastLabeled","axios","post","LinearProgress","words","CodeSwitching_LabeledWord","labels","getLabeledWords","TextField","fullWidth","onKeyPress","ev","preventDefault","lg","firebase","apiKey","authDomain","databaseURL","projectId","appID","createMuiTheme","typography","palette","main","secondary","flexGrow","localStorage","getItem","doc","uuidv1","setItem","set","Fragment","MuiThemeProvider","CssBaseline","App_NavBar","react_router","exact","path","render","components_Home_Home","assign","UTTower","CodeSwitching","Boolean","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ee2e140c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kiwi.a0352b91.png\";","module.exports = __webpack_public_path__ + \"static/media/komodo.93a84db4.png\";","module.exports = __webpack_public_path__ + \"static/media/trex.6e57b2ee.png\";","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nfunction NotFound(props) {\n  return (\n    <div style={{padding: '10vw'}}>\n      <Typography variant=\"h1\">404 :(</Typography><br/><br/>\n      <Typography variant=\"h2\">nothing to see here</Typography>\n    </div>)\n}\n\nexport default NotFound\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport SpiralIcon from '@material-ui/icons/ScatterPlot'\nimport HomeIcon from '@material-ui/icons/Home'\nimport VoiceIcon from '@material-ui/icons/RecordVoiceOver'\nimport CodeSwitchIcon from '@material-ui/icons/Language'\n\n// List of all Drawer Items\nconst DRAWER_LIST = [\n  {\n    text: \"Home\",\n    icon: (<HomeIcon/>),\n    link: \"/\",\n    divider: true\n  },\n  {\n    text: \"Code-Switching RNN\",\n    icon: (<CodeSwitchIcon/>),\n    link: \"/codeswitching\"\n  },\n  {\n    text: \"Ulam Spirals\",\n    icon: (<SpiralIcon/>),\n    link: \"/primeulam\"\n  },\n  {\n    text: \"UT Tower Bot\",\n    icon: <VoiceIcon/>,\n    link: \"/uttower\",\n  },\n]\n\nconst styles = {\n  list: {\n    minWidth: 'calc(10ch + 10vw)',\n    maxWidth: 'calc(20ch + 10vw)',\n  }\n}\n\nfunction createList(dList) {\n  return (\n    <List>\n      {DRAWER_LIST.map((dItem) => {\n        const divider = dItem.divider ? <Divider/> : null\n        return (\n          <Link to={dItem.link} key={dItem.text}\n                style={{textDecoration: 'none', color: 'white'}}>\n            <ListItem button>\n              <ListItemIcon>{dItem.icon}</ListItemIcon>\n              <ListItemText primary={dItem.text}/>\n            </ListItem>\n            {divider}\n          </Link>)\n      })}\n    </List>\n  )\n}\n\nfunction TempDrawer(props) {\n  const { classes } = props\n  return (\n    <div>\n      <Drawer open={props.opened} onClose={props.toggle(false)}>\n        <div\n          tabIndex={0}\n          role=\"button\"\n          onClick={props.toggle(false)}\n          onKeyDown={props.toggle(false)}>\n          <div className={classes.list}>\n            {createList(DRAWER_LIST)}\n          </div>\n        </div>\n      </Drawer>\n    </div>\n  )\n}\n\nTempDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(TempDrawer)\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger'\nimport Slide from '@material-ui/core/Slide'\nimport TempDrawer from './TempDrawer'\n\nconst styles = (theme) => ({\n  menuButton: {\n    marginRight: theme.spacing(2),\n  }\n})\n\nfunction HideOnScroll(props) {\n  const { children } = props;\n  const trigger = useScrollTrigger();\n  return (\n      <Slide appear={true} direction=\"down\" in={!trigger}>\n        {children}\n      </Slide>\n    );\n}\n\nHideOnScroll.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nfunction NavBar(props) {\n  const { classes } = props\n  const [openDrawer, setOpenDrawer] = useState(false)\n\n  function toggle(state) {\n    return () => setOpenDrawer(state)\n  }\n\n  return (\n    <HideOnScroll {...props}>\n      <AppBar position=\"sticky\">\n         <Toolbar>\n            <IconButton\n              className={classes.menuButton}\n              aria-label=\"Open drawer\"\n              onClick={() => setOpenDrawer(true)}>\n              <MenuIcon/>\n            </IconButton>\n            <Link to='/' style={{textDecoration: 'none', color: 'white'}}>\n              <Typography variant=\"h5\">\n              reatret.net\n              </Typography>\n            </Link>\n         </Toolbar>\n         <TempDrawer opened={openDrawer} toggle={toggle}/>\n      </AppBar>\n    </HideOnScroll>)\n}\n\nNavBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(NavBar)\n","import React from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\n\nfunction createLinks(links) {\n  return links.map((item) => (\n    <span key={item.name}\n          style={{\n            display: \"inline-block\",\n            textAlign: \"center\",\n            margin: '1vw'\n          }}>\n      <a href={item.link}>\n      <IconButton aria-label={item.name}>\n      {item.icon}\n      </IconButton>\n      <div>\n        <Typography variant=\"body2\"\n          style={{textDecoration: 'none', color: 'white'}}>\n        {item.name}\n        </Typography>\n      </div>\n      </a>\n    </span>)\n  )\n}\n\nexport { createLinks }","import React, { useState, useEffect, useMemo } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport Container from '@material-ui/core/Container'\nimport kiwi from '../../images/kiwi.png'\nimport trex from '../../images/komodo.png'\nimport komodo from '../../images/trex.png'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Grid from '@material-ui/core/Grid'\nimport IconButton from '@material-ui/core/IconButton'\nimport Button from '@material-ui/core/Button'\nimport RWIcon from '@material-ui/icons/FastRewind'\nimport FFIcon from '@material-ui/icons/FastForward'\nimport CodeIcon from '@material-ui/icons/Code'\nimport ResumeIcon from '@material-ui/icons/Description'\nimport ContactIcon from '@material-ui/icons/Email'\nimport Typography from '@material-ui/core/Typography'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { createLinks } from '../../utils'\nimport './Home.css'\n\nconst styles = (theme) => ({\n  root: {\n    marginTop: theme.spacing(16),\n    textAlign: \"center\"\n  },\n  spinningImage: {\n    animation: \"logo-spin infinite 3s linear\",\n    height: \"25vh\",\n    maxWidth: \"90vw\",\n    display: \"flex\",\n    marginBottom: theme.spacing(12),\n  },\n  card: {\n    padding: theme.spacing(1),\n  },\n  centerHolder: {\n    justifyContent: \"center\",\n    display: \"flex\"\n  },\n  count: {\n    marginBottom: theme.spacing(2)\n  }\n})\n\nconst LINKS = [\n  {\n    name: \"Gitlab\",\n    link: \"https://gitlab.com/danielloera\",\n    icon: (<CodeIcon fontSize=\"large\"/>)\n  },\n  {\n    name: \"Resume\",\n    link: \"https://docs.google.com/document/d/18sWdFkdfeEGWD7KpvNJ7I25CUm_n0n1hrINJsOv3VzA\",\n    icon: (<ResumeIcon fontSize=\"large\"/>)\n  },\n  {\n    name: \"Contact\",\n    link: \"mailto:daniel@reatret.net\",\n    icon: (<ContactIcon fontSize=\"large\"/>)\n  },\n]\n\nconst imgs = [kiwi, trex, komodo]\n\nconst FASTER = 0\nconst SLOWER = 1\nconst Links = createLinks(LINKS)\n\nfunction spinImgAt(secs) {\n  return {\n    animation: `logo-spin infinite ${secs}s linear`\n  }\n}\n\nfunction createSnackBar(v, h, message, open, handleClose) {\n  return (\n    <Snackbar key={h}\n      anchorOrigin={{vertical: v, horizontal: h}}\n      open={open}\n      autoHideDuration={3000}\n      onClose={handleClose}\n      ContentProps={{'aria-describedby': 'message-id'}}\n      message={<span id=\"message-id\">{message}</span>}/>\n  )\n}\n\nfunction createControl(name, fn) {\n  return [\n    <IconButton key={`${name}1`}\n      aria-label={`${name} Slower`}\n      onClick={fn(SLOWER)}>\n      <RWIcon/>\n    </IconButton>,\n    <Typography key={`${name}2`}>{name}</Typography>,\n    <IconButton key={`${name}3`}\n      aria-label={`${name} Faster`}\n      onClick={fn(FASTER)}>\n      <FFIcon/>\n    </IconButton>\n  ]\n}\n\nfunction getUniqueCount(collection) {\n  return new Promise((resolve, reject) => {\n    return collection.get().then((snap) => {\n      resolve(snap.size)\n    }).catch((err) => {\n      console.log('could not read collection')\n      console.log(err)\n      resolve(null)\n    })\n  })\n}\n\nconst defaultSpin = 3\nconst defaultSwap = 3000\n\nfunction Home(props) {\n  const { classes } = props\n  const [imgIdx, setImgIdx] = useState(Math.trunc(Math.random() * imgs.length))\n  const [spinSpeed, setSpinSpeed] = useState(defaultSpin)\n  const [swapSpeed, setSwapSpeed] = useState(defaultSwap)\n  const [spinSnack, setSpinSnack] = useState(false)\n  const [swapSnack, setSwapSnack] = useState(false)\n  const [spinMsg, setSpinMsg] = useState('')\n  const [swapMsg, setSwapMsg] = useState('')\n  const [loading, setLoading] = useState(true)\n  const [countMsg, setCountMsg] = useState('')\n\n  function imgTick() {\n    let newIdx = imgIdx + 1\n    if (newIdx === imgs.length) {\n      newIdx = 0\n    }\n    setImgIdx(newIdx)\n  }\n\n  function reset() {\n    setSpinSpeed(defaultSpin)\n    setSwapSpeed(defaultSwap)\n    setSpinMsg(`Spinning and swapping every ${defaultSpin}s`)\n    setSpinSnack(true)\n  }\n\n  function spin(type) {\n    return () => {\n      let newSpeed = null\n      if (type === FASTER) {\n        newSpeed = spinSpeed / 2\n      } else {\n        newSpeed = spinSpeed * 2\n      }\n      setSpinSpeed(newSpeed)\n      setSpinMsg(`Spinning every ${newSpeed}s`)\n      setSpinSnack(true)\n    }\n  }\n\n  function swap(type) {\n    return () => {\n      let newSpeed = null\n      if (type === FASTER) {\n        newSpeed = swapSpeed / 2\n      } else {\n        newSpeed = swapSpeed * 2\n      }\n      setSwapSpeed(newSpeed)\n      setSwapMsg(`Swapping every ${newSpeed / 1000}s`)\n      setSwapSnack(true)\n    }\n  }\n\n  // Update swap interval on imageChange/speedChange\n  useEffect(() => {\n    const id = setInterval(imgTick, swapSpeed)\n    return () => clearInterval(id)\n  }, [swapSpeed, imgIdx])\n\n  // Get visitor count\n  useEffect(() => {\n    getUniqueCount(props.db.collection('uuids')).then((count) => {\n      if (count) {\n        setCountMsg(`${count} Unique Visitors`)\n      }\n      setLoading(false)\n    })\n  }, [props.db])\n\n  const logo = imgs[imgIdx]\n  const spinStyle = useMemo(() => spinImgAt(spinSpeed), [spinSpeed])\n  const visitorCount = useMemo(() => {\n    if (loading) return <CircularProgress/>\n    return <Typography variant=\"subtitle1\">{countMsg}</Typography>\n  }, [loading])\n  const spinSnackBar = useMemo(() => (\n    createSnackBar('bottom', 'left', spinMsg, spinSnack,\n                   (e, r) => {if(r === 'timeout') setSpinSnack(false)})),\n    [spinMsg, spinSnack])\n  const swapSnackBar = useMemo(() => (\n    createSnackBar('bottom', 'right', swapMsg, swapSnack,\n                   (e, r) => {if(r === 'timeout') setSwapSnack(false)})),\n    [swapMsg, swapSnack])\n  const spinControl = useMemo(() => createControl(\"Spin\", spin), [spinSpeed])\n  const swapControl = useMemo(() => createControl(\"Swap\", swap), [swapSpeed])\n  return (\n    <Container className={classes.root}>\n      {/* Snackbars */}\n      {[spinSnackBar, swapSnackBar]}\n      <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\n        <Grid item xs={12} className={classes.centerHolder}>\n        {/* Spinning Image */}\n        <img src={logo} className={classes.spinningImage} alt=\"logo\" style={spinStyle}/>\n        </Grid>\n        <Grid item xs={12} sm={10} md={6} className={classes.cardHolder}>\n          {/* Control Card */}\n          <Card className={classes.card} elevation={5}>\n            <CardContent>\n              <Typography component=\"p\" variant=\"body1\">\n                Hi, I'm Daniel. I love making things.\n                <br/>\n                You can see some of them on this site or linked below.\n                <br/>\n                Have fun <i>spinning</i>.\n              </Typography>\n            </CardContent>\n            <CardActions style={{justifyContent: 'center'}}>\n               {spinControl}\n               <Button size=\"small\" variant=\"contained\" color=\"secondary\"\n                       onClick={reset}>Reset</Button>\n               {swapControl}\n            </CardActions>\n          </Card>\n        </Grid>\n        <Grid item xs={12}>{Links}</Grid>\n        <Grid item xs={12} className={classes.count}>\n          {visitorCount}\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nHome.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(Home)\n","import React, { Component } from 'react'\nimport { secondaryColor } from '../App/App'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Stage, FastLayer, Rect, Circle, RegularPolygon } from 'react-konva'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Select from '@material-ui/core/Select'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport FormControl from '@material-ui/core/FormControl'\nimport Typography from '@material-ui/core/Typography'\nimport threads from 'threads'\nimport Slider from 'rc-slider'\nimport ColorPicker from 'material-ui-color-picker'\nimport 'rc-slider/assets/index.css'\nconst TSlider = Slider.createSliderWithTooltip(Slider)\n\nconst SCREEN_PERCENTAGE = 0.80\nconst CALC_PRIMES = \"Calculating Primes...\"\nconst RENDER = \"Rendering...\"\n\nconst CIRCLE = 0\nconst SQUARE = 1\nconst TRIANGLE = 2\n\nfunction getSpiralIdx(n) {\n  const k = Math.ceil((Math.sqrt(n) - 1) / 2)\n  let t = 2 * k + 1\n  let m = Math.pow(t, 2)\n  t -= 1\n  if (n >= m - t) {\n    return {x: k-(m-n), y: k}\n  } else {\n    m -= t\n  }\n  if (n >= m - t) {\n    return {x: -k, y: k - (m - n)}\n  } else {\n    m -= t\n  }\n  if (n >= m - t) {\n    return {x: -k + (m-n), y: -k}\n  }\n  return {x: k, y: -k+(m-n-t)}\n}\n\nfunction spiralize(board, num) {\n  const size = Math.pow(board.length, 2)\n  const len = board.length\n  const rawHalf = len / 2\n  const half = len % 2 === 0 ?\n              Math.ceil(rawHalf) - 1:\n              Math.floor(rawHalf)\n  for (let i = 1; i <= size; i++) {\n    const idx = getSpiralIdx(i)\n    board[idx.x + half][idx.y + half] = num\n    num += 1\n  }\n}\n\nconst SLIDER_FIELDS = [\n  {\n    name: \"Grid\\xa0Size\\xa0(NxN)\",\n    id: \"primeSize\",\n    min: 5,\n    max: 1001,\n  },\n  {\n    name: \"Shape\\xa0Size\",\n    id: \"shapeSize\",\n    min: 1,\n    max: 100,\n  },\n  {\n    name: \"Starting\\xa0Number\",\n    id: \"start\",\n    min: 1,\n    max: 500,\n  },\n]\n\nfunction createSliders(fields, values, classes, fn) {\n  const doms = []\n  for (let i = 0; i < fields.length; i++) {\n    const field = fields[i]\n    const value = values[i]\n    doms.push((\n      <div\n        className={classes.sliderField}\n        key={field.name}\n        id={field.name}>\n          <Typography align=\"left\" className={classes.slideLabel} color=\"textSecondary\">{`${field.name}:\\xa0${value}`}</Typography>\n          <TSlider\n            handleStyle={{backgroundColor: secondaryColor, borderColor: secondaryColor}}\n            trackStyle={{backgroundColor: secondaryColor, borderColor: secondaryColor}}\n            className={classes.slider}\n            min={field.min}\n            max={field.max}\n            step={1}\n            defaultValue={value}\n            onAfterChange={fn(field.id)}/>\n      </div>\n    ))\n  }\n  return doms\n}\n\nclass PrimeUlam extends Component {\n\n  constructor(props) {\n    super(props)\n    const start = 1\n    const primeSize = 101\n    this.board = null\n    this.prevPrimes = null\n    this.backgroundRect = null\n    this.maxPrimeSize = primeSize\n    this.maxStart = start\n    this.state = {\n      spiral: null,\n      bgColor: \"white\",\n      color: \"black\",\n      shape: CIRCLE,\n      shapeSize: 5,\n      start: start,\n      stageSize: 0,\n      primeSize: primeSize,\n      primes: null,\n      notify: false,\n      msg: '',\n    }\n    this.layer = null\n    this.handleSlider = this.handleSlider.bind(this)\n    this.makeSpiral = this.makeSpiral.bind(this)\n    this.updateDimensions = this.updateDimensions.bind(this)\n  }\n\n  notify(msg, then) {\n    this.setState({\n      msg: msg,\n      notify: true\n    }, then)\n  }\n\n  updateDimensions() {\n    this.setState({\n      stageSize: Math.trunc(Math.min(window.innerWidth, window.innerHeight) * SCREEN_PERCENTAGE)\n    }, this.makeSpiral)\n  }\n\n  componentDidMount() {\n    const {primeSize, start} = this.state\n    this.updatePrimes(Math.pow(primeSize + start, 2))\n    this.updateDimensions()\n    window.addEventListener(\"resize\", this.updateDimensions)\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {primeSize, start, shapeSize} = this.state\n    if (primeSize !== prevState.primeSize) {\n      if (this.maxPrimeSize < primeSize) {\n        this.maxPrimeSize = primeSize\n        const limit = Math.pow(primeSize + start, 2)\n        this.updatePrimes(limit)\n      } else {\n        this.notify(RENDER, this.makeSpiral)\n      }\n    }\n    if (start && start !== prevState.start) {\n      const newLimit = Math.pow(this.maxPrimeSize + start, 2)\n      const oldLimit = Math.pow(this.maxPrimeSize + this.maxStart, 2)\n      if (oldLimit < newLimit) {\n        this.maxStart = start\n        this.updatePrimes(newLimit)\n      } else {\n        this.notify(RENDER, (ns)=> {\n          this.makeSpiral(false, true)\n        })\n      }\n    }\n    if (shapeSize !== prevState.shapeSize) {\n      this.notify(RENDER, this.makeSpiral)\n    }\n  }\n\n  updatePrimes(limit) {\n    const primeThread = threads.spawn((input, done) => {\n      const ps = function primesSieve(limit, prevData) {\n        let a = null\n        let start = 0\n        if (prevData && prevData.length < limit) {\n          a = prevData\n          const prevLen = prevData.length\n          start = prevLen\n          // Limit MUST be greater then prev data len\n          const diff = limit - prevLen\n          for (let i = 0; i < diff; i++) {\n            a.push(true)\n          }\n        } else {\n          a = Array(limit)\n          a[0] = false\n          a[1] = false\n          a.fill(true, 2, limit)\n        }\n        const ans = new Set([])\n        for(let i = start; i < a.length; i++) {\n          const isPrime = a[i]\n          if (isPrime) {\n            ans.add(i)\n            for (let n = i*i; n < limit; n+=i) {\n              a[n] = false\n            }\n          }\n        }\n        return {primes: ans, prevData: a}\n      }\n      done({ps: ps(input.limit, input.prevPrimes)})\n    })\n    this.notify(CALC_PRIMES)\n    primeThread.send({limit: limit, prevPrimes: this.prevPrimes})\n    .on('message', (response) => {\n      this.prevPrimes = response.ps.data\n      this.setState({\n        primes: response.ps.primes\n      }, (ns)=>{ this.makeSpiral(true) })\n    })\n  }\n\n  makeSpiral(newBoard, newStart=false) {\n    const {start, primeSize, stageSize, shapeSize,\n           color, primes} = this.state\n    if (!stageSize || !primeSize || !start ||\n        !shapeSize || !primes) {\n      return null\n    }\n    const primeJump = Math.ceil(stageSize / primeSize)\n    if (newBoard) {\n      this.board = []\n      for (let i = 0; i < primeSize; i++) {\n        const tempArr = Array(primeSize)\n        this.board.push(tempArr)\n      }\n    }\n    if (newBoard || newStart) {\n      spiralize(this.board, start)\n    }\n    const circles = []\n    const squares = []\n    const triangs = []\n    for (let x = 0; x < primeSize; x++) {\n      for (let y = 0; y < primeSize; y++) {\n        if (primes.has(this.board[x][y])) {\n          const jx = x * primeJump\n          const jy = y * primeJump\n          const key = `${x} ${y}`\n          circles.push(<Circle\n                        key={key}\n                        x={jx} y={jy}\n                        radius={shapeSize}\n                        fill={color}\n                        listening={false}\n                        perfectDrawEnabled={false}/>)\n          squares.push(<Rect\n                        key={key}\n                        x={jx} y={jy}\n                        width={shapeSize} height={shapeSize}\n                        fill={color}\n                        listening={false}\n                        perfectDrawEnabled={false}/>)\n          triangs.push(<RegularPolygon\n                        key={key}\n                        x={jx} y={jy}\n                        sides={3} radius={shapeSize}\n                        fill={color}\n                        listening={false}\n                        perfectDrawEnabled={false}/>)\n        }\n      }\n    }\n    this.setState({\n        spiral: {\n          [CIRCLE]: circles,\n          [SQUARE]: squares,\n          [TRIANGLE]: triangs,\n        }\n      }\n    )\n  }\n\n  handleSlider(id){\n    return (val) => {\n      this.setState({[id]: val})\n    }\n  }\n\n  render() {\n    const {classes} = this.props\n    const {stageSize, primeSize, shapeSize,\n           start, notify, msg, spiral,\n           color, bgColor, shape} = this.state\n    const numberVars = [primeSize, shapeSize, start]\n    const shapes = spiral ? spiral[shape] : []\n    if (this.layer) this.layer.batchDraw()\n    return (\n      <div className={classes.title}>\n        <Typography align=\"center\" variant=\"h5\"> Ulam Spiral Generator</Typography>\n        <Snackbar\n          anchorOrigin={{vertical: \"bottom\", horizontal: \"left\"}}\n          open={notify}\n          autoHideDuration={2000}\n          onClose={()=> {this.setState({notify: false})}}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{msg}</span>}/>\n        <div className={classes.root}>\n          <Stage className={classes.stage}\n                 width={stageSize}\n                 height={stageSize}>\n            <FastLayer>\n              <Rect x={0} y={0}\n                    width={stageSize} height={stageSize}\n                    fill={bgColor} shadowBlur={5}/>\n            </FastLayer>\n            <FastLayer ref={(ref)=> this.layer = ref}>\n              <Rect x={0} y={0}\n                    width={stageSize} height={stageSize}\n                    fill={bgColor} shadowBlur={5}/>\n              {shapes}\n            </FastLayer>\n          </Stage>\n        </div>\n        {/* Controls */}\n        <div className={classes.cardHolder}>\n        <Card className={classes.card} elevation={4}>\n          <CardContent>\n            <Typography className={classes.controlsLabel} variant=\"h6\">Controls</Typography>\n            <form className={classes.controls} noValidate autoComplete=\"off\">\n              {createSliders(SLIDER_FIELDS, numberVars, classes, this.handleSlider)}\n              <div className={classes.cPickers}>\n                <span className={classes.colorPicker}>\n                  <Typography align=\"left\" color=\"textSecondary\">Background Color</Typography>\n                  <ColorPicker\n                    className={classes.colorPicker}\n                    name='bgColor'\n                    defaultValue={bgColor}\n                    onChange={(c) => {\n                      if (!c) return\n                      this.setState({bgColor: c})}\n                  }/>\n                </span>\n                <span className={classes.colorPicker}>\n                 <Typography align=\"left\" color=\"textSecondary\">Shape Color</Typography>\n                 <ColorPicker\n                    name='color'\n                    defaultValue={color}\n                    onChange={(c) => {\n                        if(!c) return\n                        this.setState({color: c}, this.makeSpiral)\n                  }}/>\n                </span>\n            </div>\n            <FormControl className={classes.shapePicker}>\n              <InputLabel htmlFor=\"select\">Shape</InputLabel>\n              <Select\n                value={this.state.shape}\n                onChange={(event)=> {\n                    this.setState({[event.target.name]: event.target.value})\n                  }}\n                inputProps={{\n                  name: 'shape',\n                  id: 'select',\n                }}>\n                <MenuItem value={0}>Circle</MenuItem>\n                <MenuItem value={1}>Square</MenuItem>\n                <MenuItem value={2}>Triangle</MenuItem>\n              </Select>\n            </FormControl>\n            </form>\n          </CardContent>\n        </Card>\n        </div>\n        {/* Bottom Text */}\n        <div className={classes.endingText}>\n          <Typography component=\"p\" >\n            <b>Warning</b>: higher grid sizes may cause some slow down.<br/>\n            This project was inspired by{\" \"}\n            <a href=\"https://www.youtube.com/watch?v=iFuR97YcSLM\">this</a>\n            {\" \"} awesome numberphile video.\n            You can read more about Prime Ulam Spirals{\" \"}\n            <a href=\"https://en.wikipedia.org/wiki/Ulam_spiral\">here.</a><br/>\n            You can also check out the{\" \"}\n            <a href=\"https://gitlab.com/danielloera/primeulam\">python version</a>\n            {\" \"}I made.\n          </Typography>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst styles = (theme) => ({\n  title: {\n    marginTop: '3vh',\n    textAlign: 'center',\n    padding: theme.spacing(2),\n  },\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n  },\n  stage: {\n    marginTop: '3vh',\n  },\n  card: {\n    marginTop: '2rem',\n    padding: '1rem',\n    minWidth: '30vw',\n    maxWidth: '90vw',\n  },\n  cardHolder: {\n    justifyContent: 'center',\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  controlsLabel: {\n  },\n  controls: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n  sliderField: {\n    width: '15ch',\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(1),\n  },\n  colorPicker: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    maxWidth: '15rem',\n  },\n  cPickers: {\n    display: 'flex',\n    marginTop: theme.spacing(3),\n  },\n  slideLabel: {\n    marginBottom: theme.spacing(3)\n  },\n  shapePicker: {\n    marginTop: theme.spacing(4)\n  },\n  endingText: {\n    marginTop: theme.spacing(3),\n    marginBottom: '25vh',\n    padding: theme.spacing(2)\n  }\n})\n\nPrimeUlam.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(PrimeUlam)\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\nconst styles = (theme) => ({\n  root: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n  },\n  botHolder: {\n    display: 'inline-block',\n    marginTop: theme.spacing(6),\n  },\n  endingText: {\n    marginTop: theme.spacing(5),\n    marginBottom: theme.spacing(10),\n  },\n})\n\nfunction UTTower(props) {\n  const [width, setWidth] = useState(0)\n  const [height, setHeight] = useState(0)\n\n  function updateDimensions() {\n    const ratio = window.innerWidth / window.innerHeight\n    const opRatio = window.innerHeight / window.innerWidth\n    const defaultWidth = window.innerWidth * 0.80\n    const defaultHeight = window.innerHeight * 0.80\n    const height = ratio > 1.5 ? window.innerHeight / ratio : window.innerHeight / opRatio\n    const width = ratio > 1.5 ? window.innerWidth / ratio : window.innerWidth / opRatio\n    setWidth(Math.min(width, defaultWidth))\n    setHeight(Math.max(height, defaultHeight))\n  }\n\n  useEffect(() => {\n    updateDimensions()\n    window.addEventListener(\"resize\", updateDimensions)\n    return () => window.removeEventListener(\"resize\", updateDimensions)\n  }, [])\n\n  const { classes } = props\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.botHolder} elevation={8}>\n        <iframe\n          title=\"UT Tower\"\n          allow=\"microphone;\"\n          width={width}\n          height={height}\n          src=\"https://console.dialogflow.com/api-client/demo/embedded/uttower\">\n        </iframe>\n      </Paper>\n\n      <div className={classes.endingText}>\n        <Typography component=\"p\" >\n          This bot was created on {\" \"}\n          <a href=\"https://dialogflow.com\">Dialogflow</a>\n          {\" \"}to get lighting updates from the{\" \"}\n          <a href=\"https://en.wikipedia.org/wiki/Main_Building_(University_of_Texas_at_Austin)\">Tower in UT Austin.</a>\n          <br/>UT Tower bot is available on{\" \"}\n          <a href=\"https://assistant.google.com/services/a/uid/0000001deeb5797c?hl=en\">Google Assistant</a>\n          {\" \"} and{\" \"}\n          <a href=\"https://www.facebook.com/utexastower\">Facebook Messenger.</a>\n        </Typography>\n      </div>\n    </div>\n  )\n}\n\nUTTower.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(UTTower)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\n\nconst COLOR = {\n  es: \"#7986cb\",\n  en: \"#f06292\",\n  other: \"#43a047\"\n}\n\nconst styles = (theme) => ({\n  root: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    justifyContent: \"center\",\n  },\n  labelText: {\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    textAlign: \"center\",\n  }\n})\n\nfunction getMargin(w1, w2) {\n  if (w1 >= w2) {\n      return Math.floor((w1 - w2) / 2)\n  }\n  return 0\n}\n\nfunction LabeledWord(props) {\n  const { label, word, classes } = props\n  const labelWidth = label.length + 2\n  const labelMarginLeft = getMargin(word.length, labelWidth)\n  const wordMarginLeft = getMargin(labelWidth + 1, word.length)\n  return (\n    <div className={classes.root}>\n      <Paper elevation={4}\n             style={{\n              backgroundColor: COLOR[label],\n              marginLeft: `${labelMarginLeft}rem`,\n              width: `${labelWidth}rem`\n            }}>\n        <Typography variant=\"h6\" className={classes.labelText}>\n          {label.toUpperCase()}\n        </Typography>\n      </Paper>\n      <Typography variant=\"h5\"\n                  style={{marginLeft: `${wordMarginLeft}rem`}}>\n        {word}\n      </Typography>\n    </div>\n  )\n}\n\nLabeledWord.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(LabeledWord)\n","import React, { useState, useEffect, useMemo } from 'react'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'\nimport axios from 'axios'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Paper from '@material-ui/core/Paper'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport LabeledWord from './LabeledWord'\nimport CodeIcon from '@material-ui/icons/Code'\nimport PaperIcon from '@material-ui/icons/Assignment'\nimport { createLinks } from '../../utils'\n\nconst LINKS = [\n  {\n    name: \"Source Code\",\n    link: \"https://gitlab.com/danielloera/nlp-final\",\n    icon: (<CodeIcon fontSize=\"large\"/>)\n  },\n  {\n    name: \"Project PDF\",\n    link: \"https://firebasestorage.googleapis.com/v0/b/reatret-net.appspot.com/o/codeswitching_Jorge_Hernandez_Daniel_Loera.pdf?alt=media&token=5505e0b1-e2d6-4f0a-870d-03891ca8f921\",\n    icon: (<PaperIcon fontSize=\"large\"/>)\n  },\n]\nconst Links = createLinks(LINKS)\n\nconst DEFAULT_INPUT = \"Hola! Me llamo Daniel. What is your name?\"\nconst API_URL = \"https://us-central1-reatret-net.cloudfunctions.net/codeswitch\"\n\nconst styles = (theme) => ({\n  root: {\n    marginTop: theme.spacing(4),\n  },\n  labeledWords: {\n    display: \"flex\",\n    alignItems: \"center\",\n    overflowX: \"auto\",\n    overflowY: \"hidden\",\n    border: \"1px solid dimgray\",\n    borderRadius: \"5px\",\n    padding: theme.spacing(2),\n  },\n  buttonHolder: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  summary: {\n    textAlign: \"center\",\n    padding: theme.spacing(3)\n  },\n  links: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n})\n\nfunction CodeSwitching(props) {\n  const [inputText, setInputText] = useState(DEFAULT_INPUT)\n  const [labeledData, setLabeledData] = useState(null)\n  const [lastLabeled, setLastLabeled] = useState(null)\n  const [loading, setLoading] = useState(true)\n\n  function labelText() {\n    if (!inputText || lastLabeled === inputText) return\n    setLastLabeled(inputText)\n    setLoading(true)\n    axios.post(API_URL, {text: inputText}).then((response) => {\n      setLabeledData(response.data)\n      setLoading(false)\n    })\n  }\n\n  function getLabeledWords() {\n    if (!labeledData || labeledData.length < 1) return null\n    const labeledWords = []\n    for (let i = 0; i < labeledData.words.length; i++) {\n      labeledWords.push(<LabeledWord key={i}\n                          word={labeledData.words[i]}\n                          label={labeledData.labels[i]}/>)\n    }\n    return labeledWords\n  }\n\n  useEffect(() => labelText(), [])\n\n  const { classes } = props\n  const labeledWords = useMemo(() => {\n    if (loading) return <LinearProgress/>\n    return <div className={classes.labeledWords}>{getLabeledWords()}</div>\n  }, [loading])\n  return (\n    <Container className={classes.root}>\n     <Snackbar\n      anchorOrigin={{vertical: 'bottom', horizontal: 'left',}}\n      open={loading}\n      ContentProps={{'aria-describedby': 'message-id'}}\n      message=\"Generating labels...\"/>\n      <Grid container spacing={4} justify=\"center\" alignItems=\"center\">\n        <Grid item xs={12}>\n          <Typography align=\"center\" variant=\"h5\">Spanish-English Code-Switching Labeler</Typography>\n          <Typography align=\"center\" variant=\"subtitle1\">by{\" \"}\n            <a href=\"https://gitlab.com/jmhern\">\n              Jorge Hernandez\n            </a> & Daniel Loera\n          </Typography>\n        </Grid>\n        <Grid item xs={10} md={11}>\n          <TextField\n            label=\"Input Text\" defaultValue={DEFAULT_INPUT} variant=\"outlined\"\n            margin=\"normal\" fullWidth\n            onChange={(e) => setInputText(e.target.value)}\n            onKeyPress={(ev) => {\n              if (ev.key === 'Enter') {\n                ev.preventDefault()\n                labelText()\n              }\n            }}\n            />\n        </Grid>\n        <Grid item xs={2} md={1} className={classes.buttonHolder}>\n          <Button variant=\"contained\" color=\"secondary\" onClick={labelText}>\n            Label\n          </Button>\n        </Grid>\n        <Grid item xs={12}>\n          {labeledWords}\n        </Grid>\n        <Grid item xs={12} md={10} lg={6}>\n          <Paper className={classes.summary} elevation={2}>\n            <Typography component=\"p\"variant=\"body1\">\n              This research project was developed for{\" \"}\n              <a href=\"https://www.cs.utexas.edu/~gdurrett/\">\n                Greg Durrett's\n              </a> Natural Language Processing class. It uses a bidirectional RNN,\n              trained embeddings, and much more to identify language in english-spanish code-switching\n              text. It certainly isn't perfect, but it does a great job with a vast\n              amount of sentence types. You can look at the source code or read more about the details\n              in the research project linked below. Have fun!\n            </Typography>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} className={classes.links}>\n          {Links}\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nCodeSwitching.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(CodeSwitching)\n","import React, { useEffect } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport { withStyles, MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport NotFound from './404'\nimport NavBar from './NavBar'\nimport Home from '../Home/Home'\nimport PrimeUlam from '../PrimeUlam/PrimeUlam'\nimport UTTower from '../UTTower/UTTower'\nimport CodeSwitching from '../CodeSwitching/CodeSwitching'\nimport uuidv1 from 'uuid/v1'\nimport * as firebase from 'firebase/app'\nimport 'firebase/firestore'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB0lviQhHULr0YBUU0OSZ6r1d-cX_YMJVY\",\n  authDomain: \"reatret-net.firebaseapp.com\",\n  databaseURL: \"https://reatret-net.firebaseio.com\",\n  projectId: \"reatret-net\",\n  appID: \"1:30853517185:web:e0fd6eae325a6e5a\",\n};\nfirebase.initializeApp(firebaseConfig);\n\n\n\nconst styles = (theme) => ({\n    root: {\n      flexGrow: 1,\n    }\n  }\n)\n\nconst primaryColor = '#43a047'\nconst secondaryColor = '#ff4081'\nconst theme = createMuiTheme(\n  {\n    typography: {\n      fontSize: 16,\n    },\n    palette: {\n      type: 'dark',\n      primary: {\n        main: primaryColor,\n      },\n      secondary: {\n        main: secondaryColor,\n      }\n    }\n  }\n)\n\nfunction App(props) {\n  const { classes } = props\n  const db = firebase.firestore()\n  // Set uuid in local storage and firebase\n  useEffect(() => {\n    const collection = db.collection('uuids')\n    let id = localStorage.getItem('uuid')\n    let currDoc = null\n    if (id) currDoc = collection.doc(id)\n    if (!id) {\n      id = uuidv1()\n      localStorage.setItem('uuid', id)\n      currDoc = collection.doc(id)\n      currDoc.set({})\n    }\n  }, [])\n  return (\n    <React.Fragment>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline/>\n        <NavBar/>\n        <Switch className={classes.root}>\n          <Route exact path='/' render={(p) => <Home {...p} db={db}/>}/>\n          <Route exact path='/primeulam' component={PrimeUlam}/>\n          <Route exact path='/uttower' component={UTTower}/>\n          <Route exact path='/codeswitching' component={CodeSwitching}/>\n          <Route component={NotFound}/>\n        </Switch>\n      </MuiThemeProvider>\n    </React.Fragment>\n  )\n}\n\nexport { secondaryColor, primaryColor }\nexport default withStyles(styles)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom'\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t(<BrowserRouter>\n\t \t<App/>\n\t </BrowserRouter>),\n\tdocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}