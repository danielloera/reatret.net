{"ast":null,"code":"import _slicedToArray from \"/home/daniel/reatret.net/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/daniel/reatret.net/react-app/src/components/App/NavBar.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Slide from '@material-ui/core/Slide';\nimport TempDrawer from './TempDrawer';\n\nconst styles = theme => ({\n  menuButton: {\n    marginRight: theme.spacing(2)\n  }\n});\n\nfunction HideOnScroll(props) {\n  _s();\n\n  const children = props.children;\n  const trigger = useScrollTrigger();\n  return /*#__PURE__*/React.createElement(Slide, {\n    appear: true,\n    direction: \"down\",\n    in: !trigger,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, children);\n}\n\n_s(HideOnScroll, \"EC2GbbZl9x3XKoXLVx1H89cOBi0=\", false, function () {\n  return [useScrollTrigger];\n});\n\n_c = HideOnScroll;\nHideOnScroll.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nfunction NavBar(props) {\n  _s2();\n\n  const classes = props.classes;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        openDrawer = _useState2[0],\n        setOpenDrawer = _useState2[1];\n\n  function toggle(state) {\n    return () => setOpenDrawer(state);\n  }\n\n  return /*#__PURE__*/React.createElement(HideOnScroll, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(AppBar, {\n    position: \"sticky\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    className: classes.menuButton,\n    \"aria-label\": \"Open drawer\",\n    onClick: () => setOpenDrawer(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    style: {\n      textDecoration: 'none',\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, \"reatret.net\"))), /*#__PURE__*/React.createElement(TempDrawer, {\n    opened: openDrawer,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 10\n    }\n  })));\n}\n\n_s2(NavBar, \"QiTCqN+cwUpWisdwFx0mtHBNUb0=\");\n\n_c2 = NavBar;\nNavBar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(NavBar);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"HideOnScroll\");\n$RefreshReg$(_c2, \"NavBar\");","map":{"version":3,"sources":["/home/daniel/reatret.net/react-app/src/components/App/NavBar.js"],"names":["React","useState","PropTypes","Link","withStyles","AppBar","Toolbar","MenuIcon","IconButton","Typography","useScrollTrigger","Slide","TempDrawer","styles","theme","menuButton","marginRight","spacing","HideOnScroll","props","children","trigger","propTypes","node","isRequired","NavBar","classes","openDrawer","setOpenDrawer","toggle","state","textDecoration","color","object"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger'\nimport Slide from '@material-ui/core/Slide'\nimport TempDrawer from './TempDrawer'\n\nconst styles = (theme) => ({\n  menuButton: {\n    marginRight: theme.spacing(2),\n  }\n})\n\nfunction HideOnScroll(props) {\n  const { children } = props;\n  const trigger = useScrollTrigger();\n  return (\n      <Slide appear={true} direction=\"down\" in={!trigger}>\n        {children}\n      </Slide>\n    );\n}\n\nHideOnScroll.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nfunction NavBar(props) {\n  const { classes } = props\n  const [openDrawer, setOpenDrawer] = useState(false)\n\n  function toggle(state) {\n    return () => setOpenDrawer(state)\n  }\n\n  return (\n    <HideOnScroll {...props}>\n      <AppBar position=\"sticky\">\n         <Toolbar>\n            <IconButton\n              className={classes.menuButton}\n              aria-label=\"Open drawer\"\n              onClick={() => setOpenDrawer(true)}>\n              <MenuIcon/>\n            </IconButton>\n            <Link to='/' style={{textDecoration: 'none', color: 'white'}}>\n              <Typography variant=\"h5\">\n              reatret.net\n              </Typography>\n            </Link>\n         </Toolbar>\n         <TempDrawer opened={openDrawer} toggle={toggle}/>\n      </AppBar>\n    </HideOnScroll>)\n}\n\nNavBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(NavBar)\n"]},"metadata":{},"sourceType":"module"}