{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import _slicedToArray from\"/home/daniel/reatret.net/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState,useEffect,useMemo,useCallback}from'react';import{withStyles}from'@material-ui/core/styles';import axios from'axios';import Container from'@material-ui/core/Container';import Typography from'@material-ui/core/Typography';import Grid from'@material-ui/core/Grid';import TextField from'@material-ui/core/TextField';import Button from'@material-ui/core/Button';import Snackbar from'@material-ui/core/Snackbar';import Paper from'@material-ui/core/Paper';import LinearProgress from'@material-ui/core/LinearProgress';import LabeledWord from'./LabeledWord';import CodeIcon from'@material-ui/icons/Code';import PaperIcon from'@material-ui/icons/Assignment';import{createLinks}from'../../utils';const LINKS=[{name:\"Source Code\",link:\"https://gitlab.com/danielloera/nlp-final\",icon:/*#__PURE__*/_jsx(CodeIcon,{fontSize:\"large\"})},{name:\"Project PDF\",link:\"https://drive.google.com/file/d/1PzI02kCVVIAnBfy1202F-1mGGD79N8et/view?usp=sharing\",icon:/*#__PURE__*/_jsx(PaperIcon,{fontSize:\"large\"})}];const Links=createLinks(LINKS);const DEFAULT_INPUT=\"Hola! Me llamo Daniel. What is your name?\";const API_URL=\"https://reatret.net/api/codeswitch/\";const styles=theme=>({root:{marginTop:theme.spacing(4)},labeledWords:{display:\"flex\",alignItems:\"center\",overflowX:\"auto\",overflowY:\"hidden\",border:\"1px solid dimgray\",borderRadius:\"5px\",padding:theme.spacing(2)},buttonHolder:{display:\"flex\",justifyContent:\"center\"},summary:{textAlign:\"center\",padding:theme.spacing(3)},links:{display:\"flex\",justifyContent:\"center\"}});function CodeSwitching(props){const _useState=useState(DEFAULT_INPUT),_useState2=_slicedToArray(_useState,2),inputText=_useState2[0],setInputText=_useState2[1];const _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),labeledData=_useState4[0],setLabeledData=_useState4[1];const _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),lastLabeled=_useState6[0],setLastLabeled=_useState6[1];const _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),loading=_useState8[0],setLoading=_useState8[1];const _useState9=useState(true),_useState10=_slicedToArray(_useState9,2),isFirstRender=_useState10[0],setIsFirstRender=_useState10[1];const labelText=useCallback(()=>{if(!inputText||lastLabeled===inputText)return;setLastLabeled(inputText);setLoading(true);axios.post(API_URL,{text:inputText}).then(response=>{setLabeledData(response.data);setLoading(false);});},[inputText,lastLabeled]);// Label text when the page first loads.\nuseEffect(()=>{if(isFirstRender){labelText();setIsFirstRender(false);}},[labelText,isFirstRender]);const classes=props.classes;const labeledWords=useMemo(()=>{function getLabeledWords(){if(!labeledData||labeledData.length<1)return null;const labeledWords=[];for(let i=0;i<labeledData.words.length;i++){labeledWords.push(/*#__PURE__*/_jsx(LabeledWord,{word:labeledData.words[i],label:labeledData.labels[i]},i));}return labeledWords;}if(loading)return/*#__PURE__*/_jsx(LinearProgress,{});return/*#__PURE__*/_jsx(\"div\",{className:classes.labeledWords,children:getLabeledWords()});},[loading,labeledData,classes.labeledWords]);return/*#__PURE__*/_jsxs(Container,{className:classes.root,children:[/*#__PURE__*/_jsx(Snackbar,{anchorOrigin:{vertical:'bottom',horizontal:'left'},open:loading,ContentProps:{'aria-describedby':'message-id'},message:\"Generating labels...\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:4,justify:\"center\",alignItems:\"center\",children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{align:\"center\",variant:\"h5\",children:\"Spanish-English Code-Switching Labeler\"}),/*#__PURE__*/_jsxs(Typography,{align:\"center\",variant:\"subtitle1\",children:[\"by\",\" \",/*#__PURE__*/_jsx(\"a\",{href:\"https://gitlab.com/jmhern\",children:\"Jorge Hernandez\"}),\" & Daniel Loera\"]})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:10,md:11,children:/*#__PURE__*/_jsx(TextField,{label:\"Input Text\",defaultValue:DEFAULT_INPUT,variant:\"outlined\",margin:\"normal\",fullWidth:true,onChange:e=>setInputText(e.target.value),onKeyPress:ev=>{if(ev.key==='Enter'){ev.preventDefault();labelText();}}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:2,md:1,className:classes.buttonHolder,children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"secondary\",onClick:labelText,children:\"Label\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:labeledWords}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:10,lg:6,children:/*#__PURE__*/_jsx(Paper,{className:classes.summary,elevation:2,children:/*#__PURE__*/_jsxs(Typography,{component:\"p\",variant:\"body1\",children:[\"This research project was developed for\",\" \",/*#__PURE__*/_jsx(\"a\",{href:\"https://www.cs.utexas.edu/~gdurrett/\",children:\"Greg Durrett's\"}),\" Natural Language Processing class. It uses a bidirectional RNN, trained embeddings, and much more to identify language in english-spanish code-switching text. It certainly isn't perfect, but it does a great job with a vast amount of sentence types. You can look at the source code or read more about the details in the research project linked below. Have fun!\"]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,className:classes.links,children:Links})]})]});}export default withStyles(styles)(CodeSwitching);","map":{"version":3,"sources":["/home/daniel/reatret.net/src/components/CodeSwitching/CodeSwitching.js"],"names":["React","useState","useEffect","useMemo","useCallback","withStyles","axios","Container","Typography","Grid","TextField","Button","Snackbar","Paper","LinearProgress","LabeledWord","CodeIcon","PaperIcon","createLinks","LINKS","name","link","icon","Links","DEFAULT_INPUT","API_URL","styles","theme","root","marginTop","spacing","labeledWords","display","alignItems","overflowX","overflowY","border","borderRadius","padding","buttonHolder","justifyContent","summary","textAlign","links","CodeSwitching","props","inputText","setInputText","labeledData","setLabeledData","lastLabeled","setLastLabeled","loading","setLoading","isFirstRender","setIsFirstRender","labelText","post","text","then","response","data","classes","getLabeledWords","length","i","words","push","labels","vertical","horizontal","e","target","value","ev","key","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from 'react'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'\nimport axios from 'axios'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Paper from '@material-ui/core/Paper'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport LabeledWord from './LabeledWord'\nimport CodeIcon from '@material-ui/icons/Code'\nimport PaperIcon from '@material-ui/icons/Assignment'\nimport { createLinks } from '../../utils'\n\nconst LINKS = [\n  {\n    name: \"Source Code\",\n    link: \"https://gitlab.com/danielloera/nlp-final\",\n    icon: (<CodeIcon fontSize=\"large\"/>)\n  },\n  {\n    name: \"Project PDF\",\n    link: \"https://drive.google.com/file/d/1PzI02kCVVIAnBfy1202F-1mGGD79N8et/view?usp=sharing\",\n    icon: (<PaperIcon fontSize=\"large\"/>)\n  },\n]\nconst Links = createLinks(LINKS)\n\nconst DEFAULT_INPUT = \"Hola! Me llamo Daniel. What is your name?\"\nconst API_URL = \"https://reatret.net/api/codeswitch/\"\n\nconst styles = (theme) => ({\n  root: {\n    marginTop: theme.spacing(4),\n  },\n  labeledWords: {\n    display: \"flex\",\n    alignItems: \"center\",\n    overflowX: \"auto\",\n    overflowY: \"hidden\",\n    border: \"1px solid dimgray\",\n    borderRadius: \"5px\",\n    padding: theme.spacing(2),\n  },\n  buttonHolder: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  summary: {\n    textAlign: \"center\",\n    padding: theme.spacing(3)\n  },\n  links: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n})\n\nfunction CodeSwitching(props) {\n  const [inputText, setInputText] = useState(DEFAULT_INPUT)\n  const [labeledData, setLabeledData] = useState(null)\n  const [lastLabeled, setLastLabeled] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const [isFirstRender, setIsFirstRender] = useState(true)\n\n  const labelText = useCallback(() => {\n    if (!inputText || lastLabeled === inputText) return\n    setLastLabeled(inputText)\n    setLoading(true)\n    axios.post(API_URL, {text: inputText}).then((response) => {\n      setLabeledData(response.data)\n      setLoading(false)\n    })\n  }, [inputText, lastLabeled]);\n\n  // Label text when the page first loads.\n  useEffect(() => {\n    if (isFirstRender) {\n      labelText()\n      setIsFirstRender(false)\n    }\n  }, [labelText, isFirstRender])\n\n  const { classes } = props\n  const labeledWords = useMemo(() => {\n    function getLabeledWords() {\n    if (!labeledData || labeledData.length < 1) return null\n      const labeledWords = []\n      for (let i = 0; i < labeledData.words.length; i++) {\n        labeledWords.push(\n          <LabeledWord key={i}\n                       word={labeledData.words[i]}\n                       label={labeledData.labels[i]}/>)\n      }\n      return labeledWords\n    }\n    if (loading) return <LinearProgress/>\n    return <div className={classes.labeledWords}>{getLabeledWords()}</div>\n  }, [loading, labeledData, classes.labeledWords])\n  return (\n    <Container className={classes.root}>\n     <Snackbar\n      anchorOrigin={{vertical: 'bottom', horizontal: 'left',}}\n      open={loading}\n      ContentProps={{'aria-describedby': 'message-id'}}\n      message=\"Generating labels...\"/>\n      <Grid container spacing={4} justify=\"center\" alignItems=\"center\">\n        <Grid item xs={12}>\n          <Typography align=\"center\" variant=\"h5\">Spanish-English Code-Switching Labeler</Typography>\n          <Typography align=\"center\" variant=\"subtitle1\">by{\" \"}\n            <a href=\"https://gitlab.com/jmhern\">\n              Jorge Hernandez\n            </a> & Daniel Loera\n          </Typography>\n        </Grid>\n        <Grid item xs={10} md={11}>\n          <TextField\n            label=\"Input Text\" defaultValue={DEFAULT_INPUT} variant=\"outlined\"\n            margin=\"normal\" fullWidth\n            onChange={(e) => setInputText(e.target.value)}\n            onKeyPress={(ev) => {\n              if (ev.key === 'Enter') {\n                ev.preventDefault()\n                labelText()\n              }\n            }}\n            />\n        </Grid>\n        <Grid item xs={2} md={1} className={classes.buttonHolder}>\n          <Button variant=\"contained\" color=\"secondary\" onClick={labelText}>\n            Label\n          </Button>\n        </Grid>\n        <Grid item xs={12}>\n          {labeledWords}\n        </Grid>\n        <Grid item xs={12} md={10} lg={6}>\n          <Paper className={classes.summary} elevation={2}>\n            <Typography component=\"p\"variant=\"body1\">\n              This research project was developed for{\" \"}\n              <a href=\"https://www.cs.utexas.edu/~gdurrett/\">\n                Greg Durrett's\n              </a> Natural Language Processing class. It uses a bidirectional RNN,\n              trained embeddings, and much more to identify language in english-spanish code-switching\n              text. It certainly isn't perfect, but it does a great job with a vast\n              amount of sentence types. You can look at the source code or read more about the details\n              in the research project linked below. Have fun!\n            </Typography>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} className={classes.links}>\n          {Links}\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nCodeSwitching.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(CodeSwitching)\n"]},"metadata":{},"sourceType":"module"}