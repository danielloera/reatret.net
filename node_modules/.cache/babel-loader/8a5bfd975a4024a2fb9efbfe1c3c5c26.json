{"ast":null,"code":"import _slicedToArray from \"/home/daniel/reatret.net/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/daniel/reatret.net/react-app/src/components/CodeSwitching/CodeSwitching.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Paper from '@material-ui/core/Paper';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport LabeledWord from './LabeledWord';\nimport CodeIcon from '@material-ui/icons/Code';\nimport PaperIcon from '@material-ui/icons/Assignment';\nimport { createLinks } from '../../utils';\nconst LINKS = [{\n  name: \"Source Code\",\n  link: \"https://gitlab.com/danielloera/nlp-final\",\n  icon: /*#__PURE__*/_jsxDEV(CodeIcon, {\n    fontSize: \"large\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 12\n  }, this)\n}, {\n  name: \"Project PDF\",\n  link: \"https://drive.google.com/file/d/1PzI02kCVVIAnBfy1202F-1mGGD79N8et/view?usp=sharing\",\n  icon: /*#__PURE__*/_jsxDEV(PaperIcon, {\n    fontSize: \"large\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, this)\n}];\nconst Links = createLinks(LINKS);\n_c = Links;\nconst DEFAULT_INPUT = \"Hola! Me llamo Daniel. What is your name?\";\nconst API_URL = \"https://reatret.net/api/codeswitch/\";\n\nconst styles = theme => ({\n  root: {\n    marginTop: theme.spacing(4)\n  },\n  labeledWords: {\n    display: \"flex\",\n    alignItems: \"center\",\n    overflowX: \"auto\",\n    overflowY: \"hidden\",\n    border: \"1px solid dimgray\",\n    borderRadius: \"5px\",\n    padding: theme.spacing(2)\n  },\n  buttonHolder: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  summary: {\n    textAlign: \"center\",\n    padding: theme.spacing(3)\n  },\n  links: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  }\n});\n\nfunction CodeSwitching(props) {\n  _s();\n\n  const _useState = useState(DEFAULT_INPUT),\n        _useState2 = _slicedToArray(_useState, 2),\n        inputText = _useState2[0],\n        setInputText = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        labeledData = _useState4[0],\n        setLabeledData = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        lastLabeled = _useState6[0],\n        setLastLabeled = _useState6[1];\n\n  const _useState7 = useState(true),\n        _useState8 = _slicedToArray(_useState7, 2),\n        loading = _useState8[0],\n        setLoading = _useState8[1];\n\n  function labelText() {\n    if (!inputText || lastLabeled === inputText) return;\n    setLastLabeled(inputText);\n    setLoading(true);\n    axios.post(API_URL, {\n      text: inputText\n    }).then(response => {\n      setLabeledData(response.data);\n      setLoading(false);\n    });\n  }\n\n  useEffect(() => labelText(), []);\n  const classes = props.classes;\n  const labeledWords = useMemo(() => {\n    if (loading) return /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.labeledWords,\n      children: getLabeledWords()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }, this);\n  }, [loading, classes.labeledWords]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      open: loading,\n      ContentProps: {\n        'aria-describedby': 'message-id'\n      },\n      message: \"Generating labels...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      justify: \"center\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          align: \"center\",\n          variant: \"h5\",\n          children: \"Spanish-English Code-Switching Labeler\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          align: \"center\",\n          variant: \"subtitle1\",\n          children: [\"by\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://gitlab.com/jmhern\",\n            children: \"Jorge Hernandez\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), \" & Daniel Loera\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 10,\n        md: 11,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Input Text\",\n          defaultValue: DEFAULT_INPUT,\n          variant: \"outlined\",\n          margin: \"normal\",\n          fullWidth: true,\n          onChange: e => setInputText(e.target.value),\n          onKeyPress: ev => {\n            if (ev.key === 'Enter') {\n              ev.preventDefault();\n              labelText();\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 2,\n        md: 1,\n        className: classes.buttonHolder,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: labelText,\n          children: \"Label\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: labeledWords\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 10,\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.summary,\n          elevation: 2,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"p\",\n            variant: \"body1\",\n            children: [\"This research project was developed for\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://www.cs.utexas.edu/~gdurrett/\",\n              children: \"Greg Durrett's\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), \" Natural Language Processing class. It uses a bidirectional RNN, trained embeddings, and much more to identify language in english-spanish code-switching text. It certainly isn't perfect, but it does a great job with a vast amount of sentence types. You can look at the source code or read more about the details in the research project linked below. Have fun!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.links,\n        children: Links\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CodeSwitching, \"QjfNHYsALCjELgMstXgzZCnzP94=\");\n\n_c2 = CodeSwitching;\nCodeSwitching.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(CodeSwitching);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Links\");\n$RefreshReg$(_c2, \"CodeSwitching\");","map":{"version":3,"sources":["/home/daniel/reatret.net/react-app/src/components/CodeSwitching/CodeSwitching.js"],"names":["React","useState","useEffect","useMemo","PropTypes","withStyles","axios","Container","Typography","Grid","TextField","Button","Snackbar","Paper","LinearProgress","LabeledWord","CodeIcon","PaperIcon","createLinks","LINKS","name","link","icon","Links","DEFAULT_INPUT","API_URL","styles","theme","root","marginTop","spacing","labeledWords","display","alignItems","overflowX","overflowY","border","borderRadius","padding","buttonHolder","justifyContent","summary","textAlign","links","CodeSwitching","props","inputText","setInputText","labeledData","setLabeledData","lastLabeled","setLastLabeled","loading","setLoading","labelText","post","text","then","response","data","classes","getLabeledWords","vertical","horizontal","e","target","value","ev","key","preventDefault","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'\nimport axios from 'axios'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Paper from '@material-ui/core/Paper'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport LabeledWord from './LabeledWord'\nimport CodeIcon from '@material-ui/icons/Code'\nimport PaperIcon from '@material-ui/icons/Assignment'\nimport { createLinks } from '../../utils'\n\nconst LINKS = [\n  {\n    name: \"Source Code\",\n    link: \"https://gitlab.com/danielloera/nlp-final\",\n    icon: (<CodeIcon fontSize=\"large\"/>)\n  },\n  {\n    name: \"Project PDF\",\n    link: \"https://drive.google.com/file/d/1PzI02kCVVIAnBfy1202F-1mGGD79N8et/view?usp=sharing\",\n    icon: (<PaperIcon fontSize=\"large\"/>)\n  },\n]\nconst Links = createLinks(LINKS)\n\nconst DEFAULT_INPUT = \"Hola! Me llamo Daniel. What is your name?\"\nconst API_URL = \"https://reatret.net/api/codeswitch/\"\n\nconst styles = (theme) => ({\n  root: {\n    marginTop: theme.spacing(4),\n  },\n  labeledWords: {\n    display: \"flex\",\n    alignItems: \"center\",\n    overflowX: \"auto\",\n    overflowY: \"hidden\",\n    border: \"1px solid dimgray\",\n    borderRadius: \"5px\",\n    padding: theme.spacing(2),\n  },\n  buttonHolder: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  summary: {\n    textAlign: \"center\",\n    padding: theme.spacing(3)\n  },\n  links: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n})\n\nfunction CodeSwitching(props) {\n  const [inputText, setInputText] = useState(DEFAULT_INPUT)\n  const [labeledData, setLabeledData] = useState(null)\n  const [lastLabeled, setLastLabeled] = useState(null)\n  const [loading, setLoading] = useState(true)\n\n  function labelText() {\n    if (!inputText || lastLabeled === inputText) return\n    setLastLabeled(inputText)\n    setLoading(true)\n    axios.post(API_URL, {text: inputText}).then((response) => {\n      setLabeledData(response.data)\n      setLoading(false)\n    })\n  }\n\n  useEffect(() => labelText(), [])\n\n  const { classes } = props\n  const labeledWords = useMemo(() => {\n    if (loading) return <LinearProgress/>\n    return <div className={classes.labeledWords}>{getLabeledWords()}</div>\n  }, [loading, classes.labeledWords])\n  return (\n    <Container className={classes.root}>\n     <Snackbar\n      anchorOrigin={{vertical: 'bottom', horizontal: 'left',}}\n      open={loading}\n      ContentProps={{'aria-describedby': 'message-id'}}\n      message=\"Generating labels...\"/>\n      <Grid container spacing={4} justify=\"center\" alignItems=\"center\">\n        <Grid item xs={12}>\n          <Typography align=\"center\" variant=\"h5\">Spanish-English Code-Switching Labeler</Typography>\n          <Typography align=\"center\" variant=\"subtitle1\">by{\" \"}\n            <a href=\"https://gitlab.com/jmhern\">\n              Jorge Hernandez\n            </a> & Daniel Loera\n          </Typography>\n        </Grid>\n        <Grid item xs={10} md={11}>\n          <TextField\n            label=\"Input Text\" defaultValue={DEFAULT_INPUT} variant=\"outlined\"\n            margin=\"normal\" fullWidth\n            onChange={(e) => setInputText(e.target.value)}\n            onKeyPress={(ev) => {\n              if (ev.key === 'Enter') {\n                ev.preventDefault()\n                labelText()\n              }\n            }}\n            />\n        </Grid>\n        <Grid item xs={2} md={1} className={classes.buttonHolder}>\n          <Button variant=\"contained\" color=\"secondary\" onClick={labelText}>\n            Label\n          </Button>\n        </Grid>\n        <Grid item xs={12}>\n          {labeledWords}\n        </Grid>\n        <Grid item xs={12} md={10} lg={6}>\n          <Paper className={classes.summary} elevation={2}>\n            <Typography component=\"p\"variant=\"body1\">\n              This research project was developed for{\" \"}\n              <a href=\"https://www.cs.utexas.edu/~gdurrett/\">\n                Greg Durrett's\n              </a> Natural Language Processing class. It uses a bidirectional RNN,\n              trained embeddings, and much more to identify language in english-spanish code-switching\n              text. It certainly isn't perfect, but it does a great job with a vast\n              amount of sentence types. You can look at the source code or read more about the details\n              in the research project linked below. Have fun!\n            </Typography>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} className={classes.links}>\n          {Links}\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nCodeSwitching.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(CodeSwitching)\n"]},"metadata":{},"sourceType":"module"}