{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nexports.getConfig = getConfig;\nexports.setConfig = setConfig;\nvar configuration = {\n  basepath: {\n    node: '',\n    web: ''\n  },\n  fallback: {\n    slaveScriptUrl: ''\n  }\n};\n\nfunction configDeepMerge(destObj, srcObj) {\n  var ancestorProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  Object.keys(srcObj).forEach(function (propKey) {\n    var srcValue = srcObj[propKey];\n    var ancestorPropsAndThis = ancestorProps.concat([propKey]);\n\n    if ((typeof srcValue === 'undefined' ? 'undefined' : _typeof(srcValue)) === 'object') {\n      if (typeof destObj[propKey] !== 'undefined' && _typeof(destObj[propKey]) !== 'object') {\n        throw new Error('Expected config property not to be an object: ' + ancestorPropsAndThis.join('.'));\n      }\n\n      configDeepMerge(destObj[propKey], srcValue, ancestorPropsAndThis);\n    } else {\n      if (_typeof(destObj[propKey]) === 'object') {\n        throw new Error('Expected config property to be an object: ' + ancestorPropsAndThis.join('.'));\n      }\n\n      destObj[propKey] = srcValue;\n    }\n  });\n}\n\nvar config = {\n  get: function get() {\n    return configuration;\n  },\n  set: function set(newConfig) {\n    if ((typeof newConfig === 'undefined' ? 'undefined' : _typeof(newConfig)) !== 'object') {\n      throw new Error('Expected config object.');\n    }\n\n    configDeepMerge(configuration, newConfig);\n  }\n};\nexports.default = config;\n\nfunction getConfig() {\n  return config.get();\n}\n\nfunction setConfig() {\n  return config.set.apply(config, arguments);\n}","map":{"version":3,"sources":["config.js"],"names":["configuration","basepath","node","web","fallback","slaveScriptUrl","ancestorProps","Object","srcValue","srcObj","ancestorPropsAndThis","destObj","configDeepMerge","config","get","set","getConfig","setConfig"],"mappings":";;;;;;;;;;QA2CgBgB,S,GAAAA,S;QAIAC,S,GAAAA,S;AA/ChB,IAAMjB,aAAAA,GAAgB;AACpBC,EAAAA,QAAAA,EAAW;AACTC,IAAAA,IAAAA,EADS,EAAA;AAETC,IAAAA,GAAAA,EAAO;AAFE,GADS;AAKpBC,EAAAA,QAAAA,EAAW;AACTC,IAAAA,cAAAA,EAAiB;AADR;AALS,CAAtB;;AAUA,SAAA,eAAA,CAAA,OAAA,EAAA,MAAA,EAA8D;AAAA,MAApBC,aAAoB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,EAAI;AAC5DC,EAAAA,MAAAA,CAAAA,IAAAA,CAAAA,MAAAA,EAAAA,OAAAA,CAA4B,UAAA,OAAA,EAAa;AACvC,QAAMC,QAAAA,GAAWC,MAAAA,CAAjB,OAAiBA,CAAjB;AACA,QAAMC,oBAAAA,GAAuBJ,aAAAA,CAAAA,MAAAA,CAAqB,CAAlD,OAAkD,CAArBA,CAA7B;;AAEA,QAAI,CAAA,OAAA,QAAA,KAAA,WAAA,GAAA,WAAA,GAAA,OAAA,CAAA,QAAA,CAAA,MAAJ,QAAA,EAAkC;AAChC,UAAI,OAAOK,OAAAA,CAAP,OAAOA,CAAP,KAAA,WAAA,IAA6C,OAAA,CAAOA,OAAAA,CAAP,OAAOA,CAAP,CAAA,KAAjD,QAAA,EAAyF;AACvF,cAAM,IAAA,KAAA,CAAU,mDAAmDD,oBAAAA,CAAAA,IAAAA,CAAnE,GAAmEA,CAA7D,CAAN;AACD;;AACDE,MAAAA,eAAAA,CAAgBD,OAAAA,CAAhBC,OAAgBD,CAAhBC,EAAAA,QAAAA,EAAAA,oBAAAA,CAAAA;AAJF,KAAA,MAKO;AACL,UAAI,OAAA,CAAOD,OAAAA,CAAP,OAAOA,CAAP,CAAA,KAAJ,QAAA,EAA4C;AAC1C,cAAM,IAAA,KAAA,CAAU,+CAA+CD,oBAAAA,CAAAA,IAAAA,CAA/D,GAA+DA,CAAzD,CAAN;AACD;;AACDC,MAAAA,OAAAA,CAAAA,OAAAA,CAAAA,GAAAA,QAAAA;AACD;AAdHJ,GAAAA;AAgBD;;AAED,IAAMM,MAAAA,GAAS;AACbC,EAAAA,GAAAA,EAAK,SAAA,GAAA,GAAA;AAAA,WAAA,aAAA;AADQ,GAAA;AAGbC,EAAAA,GAAAA,EAAK,SAAA,GAAA,CAAA,SAAA,EAAe;AAClB,QAAI,CAAA,OAAA,SAAA,KAAA,WAAA,GAAA,WAAA,GAAA,OAAA,CAAA,SAAA,CAAA,MAAJ,QAAA,EAAmC;AACjC,YAAM,IAAA,KAAA,CAAN,yBAAM,CAAN;AACD;;AAEDH,IAAAA,eAAAA,CAAAA,aAAAA,EAAAA,SAAAA,CAAAA;AACD;AATY,CAAf;kBAYeC,M;;AAER,SAAA,SAAA,GAAsB;AAC3B,SAAOA,MAAAA,CAAP,GAAOA,EAAP;AACD;;AAEM,SAAA,SAAA,GAA6B;AAClC,SAAOA,MAAAA,CAAAA,GAAAA,CAAAA,KAAAA,CAAAA,MAAAA,EAAP,SAAOA,CAAP;AACD","sourcesContent":["const configuration = {\n  basepath : {\n    node : '',\n    web  : ''\n  },\n  fallback : {\n    slaveScriptUrl : ''\n  }\n};\n\nfunction configDeepMerge(destObj, srcObj, ancestorProps = []) {\n  Object.keys(srcObj).forEach((propKey) => {\n    const srcValue = srcObj[ propKey ];\n    const ancestorPropsAndThis = ancestorProps.concat([ propKey ]);\n\n    if (typeof srcValue === 'object') {\n      if (typeof destObj[ propKey ] !== 'undefined' && typeof destObj[ propKey ] !== 'object') {\n        throw new Error('Expected config property not to be an object: ' + ancestorPropsAndThis.join('.'));\n      }\n      configDeepMerge(destObj[ propKey ], srcValue, ancestorPropsAndThis);\n    } else {\n      if (typeof destObj[ propKey ] === 'object') {\n        throw new Error('Expected config property to be an object: ' + ancestorPropsAndThis.join('.'));\n      }\n      destObj[ propKey ] = srcValue;\n    }\n  });\n}\n\nconst config = {\n  get: () => configuration,\n\n  set: (newConfig) => {\n    if (typeof newConfig !== 'object') {\n      throw new Error('Expected config object.');\n    }\n\n    configDeepMerge(configuration, newConfig);\n  }\n};\n\nexport default config;\n\nexport function getConfig () {\n  return config.get();\n}\n\nexport function setConfig (...args) {\n  return config.set(...args);\n}\n"]},"metadata":{},"sourceType":"script"}