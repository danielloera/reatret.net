{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/daniel/reatret.net/react-app/src/components/App/TempDrawer.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SpiralIcon from '@material-ui/icons/ScatterPlot';\nimport HomeIcon from '@material-ui/icons/Home';\nimport CodeSwitchIcon from '@material-ui/icons/Language'; // List of all Drawer Items\n\nconst DRAWER_LIST = [{\n  text: \"Home\",\n  icon: /*#__PURE__*/_jsxDEV(HomeIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 12\n  }, this),\n  link: \"/\",\n  divider: true\n}, {\n  text: \"Code-Switching RNN\",\n  icon: /*#__PURE__*/_jsxDEV(CodeSwitchIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 12\n  }, this),\n  link: \"/codeswitching\"\n}, {\n  text: \"Ulam Spirals\",\n  icon: /*#__PURE__*/_jsxDEV(SpiralIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 12\n  }, this),\n  link: \"/primeulam\"\n}];\nconst styles = {\n  list: {\n    minWidth: 'calc(10ch + 10vw)',\n    maxWidth: 'calc(20ch + 10vw)'\n  }\n};\n\nfunction createList(dList) {\n  return /*#__PURE__*/_jsxDEV(List, {\n    children: DRAWER_LIST.map(dItem => {\n      const divider = dItem.divider ? /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 41\n      }, this) : null;\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: dItem.link,\n        style: {\n          textDecoration: 'none',\n          color: 'white'\n        },\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: dItem.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: dItem.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), divider]\n      }, dItem.text, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\nfunction TempDrawer(props) {\n  const classes = props.classes;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Drawer, {\n      open: props.opened,\n      onClose: props.toggle(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        tabIndex: 0,\n        role: \"button\",\n        onClick: props.toggle(false),\n        onKeyDown: props.toggle(false),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.list,\n          children: createList(DRAWER_LIST)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TempDrawer;\nTempDrawer.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(TempDrawer);\n\nvar _c;\n\n$RefreshReg$(_c, \"TempDrawer\");","map":{"version":3,"sources":["/home/daniel/reatret.net/react-app/src/components/App/TempDrawer.js"],"names":["React","Link","PropTypes","withStyles","Drawer","List","Divider","ListItem","ListItemIcon","ListItemText","SpiralIcon","HomeIcon","CodeSwitchIcon","DRAWER_LIST","text","icon","link","divider","styles","list","minWidth","maxWidth","createList","dList","map","dItem","textDecoration","color","TempDrawer","props","classes","opened","toggle","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport SpiralIcon from '@material-ui/icons/ScatterPlot'\nimport HomeIcon from '@material-ui/icons/Home'\nimport CodeSwitchIcon from '@material-ui/icons/Language'\n\n// List of all Drawer Items\nconst DRAWER_LIST = [\n  {\n    text: \"Home\",\n    icon: (<HomeIcon/>),\n    link: \"/\",\n    divider: true\n  },\n  {\n    text: \"Code-Switching RNN\",\n    icon: (<CodeSwitchIcon/>),\n    link: \"/codeswitching\"\n  },\n  {\n    text: \"Ulam Spirals\",\n    icon: (<SpiralIcon/>),\n    link: \"/primeulam\"\n  },\n]\n\nconst styles = {\n  list: {\n    minWidth: 'calc(10ch + 10vw)',\n    maxWidth: 'calc(20ch + 10vw)',\n  }\n}\n\nfunction createList(dList) {\n  return (\n    <List>\n      {DRAWER_LIST.map((dItem) => {\n        const divider = dItem.divider ? <Divider/> : null\n        return (\n          <Link to={dItem.link} key={dItem.text}\n                style={{textDecoration: 'none', color: 'white'}}>\n            <ListItem button>\n              <ListItemIcon>{dItem.icon}</ListItemIcon>\n              <ListItemText primary={dItem.text}/>\n            </ListItem>\n            {divider}\n          </Link>)\n      })}\n    </List>\n  )\n}\n\nfunction TempDrawer(props) {\n  const { classes } = props\n  return (\n    <div>\n      <Drawer open={props.opened} onClose={props.toggle(false)}>\n        <div\n          tabIndex={0}\n          role=\"button\"\n          onClick={props.toggle(false)}\n          onKeyDown={props.toggle(false)}>\n          <div className={classes.list}>\n            {createList(DRAWER_LIST)}\n          </div>\n        </div>\n      </Drawer>\n    </div>\n  )\n}\n\nTempDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(TempDrawer)\n"]},"metadata":{},"sourceType":"module"}