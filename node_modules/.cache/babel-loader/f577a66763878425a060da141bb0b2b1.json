{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/daniel/reatret.net/react-app/src/components/PrimeUlam/PrimeUlam.js\";\nimport React, { Component } from 'react';\nimport { secondaryColor } from '../App/App';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Stage, FastLayer, Rect, Circle, RegularPolygon } from 'react-konva';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport FormControl from '@material-ui/core/FormControl';\nimport Typography from '@material-ui/core/Typography';\nimport threads from 'threads';\nimport Slider from 'rc-slider';\nimport ColorPicker from 'material-ui-color-picker';\nimport 'rc-slider/assets/index.css';\nconst TSlider = Slider.createSliderWithTooltip(Slider);\n_c = TSlider;\nconst SCREEN_PERCENTAGE = 0.80;\nconst CALC_PRIMES = \"Calculating Primes...\";\nconst RENDER = \"Rendering...\";\nconst CIRCLE = 0;\nconst SQUARE = 1;\nconst TRIANGLE = 2;\n\nfunction getSpiralIdx(n) {\n  const k = Math.ceil((Math.sqrt(n) - 1) / 2);\n  let t = 2 * k + 1;\n  let m = Math.pow(t, 2);\n  t -= 1;\n\n  if (n >= m - t) {\n    return {\n      x: k - (m - n),\n      y: k\n    };\n  } else {\n    m -= t;\n  }\n\n  if (n >= m - t) {\n    return {\n      x: -k,\n      y: k - (m - n)\n    };\n  } else {\n    m -= t;\n  }\n\n  if (n >= m - t) {\n    return {\n      x: -k + (m - n),\n      y: -k\n    };\n  }\n\n  return {\n    x: k,\n    y: -k + (m - n - t)\n  };\n}\n\nfunction spiralize(board, num) {\n  const size = Math.pow(board.length, 2);\n  const len = board.length;\n  const rawHalf = len / 2;\n  const half = len % 2 === 0 ? Math.ceil(rawHalf) - 1 : Math.floor(rawHalf);\n\n  for (let i = 1; i <= size; i++) {\n    const idx = getSpiralIdx(i);\n    board[idx.x + half][idx.y + half] = num;\n    num += 1;\n  }\n}\n\nconst SLIDER_FIELDS = [{\n  name: \"Grid\\xa0Size\\xa0(NxN)\",\n  id: \"primeSize\",\n  min: 5,\n  max: 1001\n}, {\n  name: \"Shape\\xa0Size\",\n  id: \"shapeSize\",\n  min: 1,\n  max: 100\n}, {\n  name: \"Starting\\xa0Number\",\n  id: \"start\",\n  min: 1,\n  max: 500\n}];\n\nfunction createSliders(fields, values, classes, fn) {\n  const doms = [];\n\n  for (let i = 0; i < fields.length; i++) {\n    const field = fields[i];\n    const value = values[i];\n    doms.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sliderField,\n      id: field.name,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        align: \"left\",\n        className: classes.slideLabel,\n        color: \"textSecondary\",\n        children: \"\".concat(field.name, \":\\xA0\").concat(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TSlider, {\n        handleStyle: {\n          backgroundColor: secondaryColor,\n          borderColor: secondaryColor\n        },\n        trackStyle: {\n          backgroundColor: secondaryColor,\n          borderColor: secondaryColor\n        },\n        className: classes.slider,\n        min: field.min,\n        max: field.max,\n        step: 1,\n        defaultValue: value,\n        onAfterChange: fn(field.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, field.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this));\n  }\n\n  return doms;\n}\n\nclass PrimeUlam extends Component {\n  constructor(props) {\n    super(props);\n    const start = 1;\n    const primeSize = 101;\n    this.board = null;\n    this.prevPrimes = null;\n    this.backgroundRect = null;\n    this.maxPrimeSize = primeSize;\n    this.maxStart = start;\n    this.state = {\n      spiral: null,\n      bgColor: \"white\",\n      color: \"black\",\n      shape: CIRCLE,\n      shapeSize: 5,\n      start: start,\n      stageSize: 0,\n      primeSize: primeSize,\n      primes: null,\n      notify: false,\n      msg: ''\n    };\n    this.layer = null;\n    this.handleSlider = this.handleSlider.bind(this);\n    this.makeSpiral = this.makeSpiral.bind(this);\n    this.updateDimensions = this.updateDimensions.bind(this);\n  }\n\n  notify(msg, then) {\n    this.setState({\n      msg: msg,\n      notify: true\n    }, then);\n  }\n\n  updateDimensions() {\n    this.setState({\n      stageSize: Math.trunc(Math.min(window.innerWidth, window.innerHeight) * SCREEN_PERCENTAGE)\n    }, this.makeSpiral);\n  }\n\n  componentDidMount() {\n    const _this$state = this.state,\n          primeSize = _this$state.primeSize,\n          start = _this$state.start;\n    this.updatePrimes(Math.pow(primeSize + start, 2));\n    this.updateDimensions();\n    window.addEventListener(\"resize\", this.updateDimensions);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const _this$state2 = this.state,\n          primeSize = _this$state2.primeSize,\n          start = _this$state2.start,\n          shapeSize = _this$state2.shapeSize;\n\n    if (primeSize !== prevState.primeSize) {\n      if (this.maxPrimeSize < primeSize) {\n        this.maxPrimeSize = primeSize;\n        const limit = Math.pow(primeSize + start, 2);\n        this.updatePrimes(limit);\n      } else {\n        this.notify(RENDER, this.makeSpiral);\n      }\n    }\n\n    if (start && start !== prevState.start) {\n      const newLimit = Math.pow(this.maxPrimeSize + start, 2);\n      const oldLimit = Math.pow(this.maxPrimeSize + this.maxStart, 2);\n\n      if (oldLimit < newLimit) {\n        this.maxStart = start;\n        this.updatePrimes(newLimit);\n      } else {\n        this.notify(RENDER, ns => {\n          this.makeSpiral(false, true);\n        });\n      }\n    }\n\n    if (shapeSize !== prevState.shapeSize) {\n      this.notify(RENDER, this.makeSpiral);\n    }\n  }\n\n  updatePrimes(limit) {\n    const primeThread = threads.spawn((input, done) => {\n      const ps = function primesSieve(limit, prevData) {\n        let a = null;\n        let start = 0;\n\n        if (prevData && prevData.length < limit) {\n          a = prevData;\n          const prevLen = prevData.length;\n          start = prevLen; // Limit MUST be greater then prev data len\n\n          const diff = limit - prevLen;\n\n          for (let i = 0; i < diff; i++) {\n            a.push(true);\n          }\n        } else {\n          a = Array(limit);\n          a[0] = false;\n          a[1] = false;\n          a.fill(true, 2, limit);\n        }\n\n        const ans = new Set([]);\n\n        for (let i = start; i < a.length; i++) {\n          const isPrime = a[i];\n\n          if (isPrime) {\n            ans.add(i);\n\n            for (let n = i * i; n < limit; n += i) {\n              a[n] = false;\n            }\n          }\n        }\n\n        return {\n          primes: ans,\n          prevData: a\n        };\n      };\n\n      done({\n        ps: ps(input.limit, input.prevPrimes)\n      });\n    });\n    this.notify(CALC_PRIMES);\n    primeThread.send({\n      limit: limit,\n      prevPrimes: this.prevPrimes\n    }).on('message', response => {\n      this.prevPrimes = response.ps.data;\n      this.setState({\n        primes: response.ps.primes\n      }, ns => {\n        this.makeSpiral(true);\n      });\n    });\n  }\n\n  makeSpiral(newBoard, newStart = false) {\n    const _this$state3 = this.state,\n          start = _this$state3.start,\n          primeSize = _this$state3.primeSize,\n          stageSize = _this$state3.stageSize,\n          shapeSize = _this$state3.shapeSize,\n          color = _this$state3.color,\n          primes = _this$state3.primes;\n\n    if (!stageSize || !primeSize || !start || !shapeSize || !primes) {\n      return null;\n    }\n\n    const primeJump = Math.ceil(stageSize / primeSize);\n\n    if (newBoard) {\n      this.board = [];\n\n      for (let i = 0; i < primeSize; i++) {\n        const tempArr = Array(primeSize);\n        this.board.push(tempArr);\n      }\n    }\n\n    if (newBoard || newStart) {\n      spiralize(this.board, start);\n    }\n\n    const circles = [];\n    const squares = [];\n    const triangs = [];\n\n    for (let x = 0; x < primeSize; x++) {\n      for (let y = 0; y < primeSize; y++) {\n        if (primes.has(this.board[x][y])) {\n          const jx = x * primeJump;\n          const jy = y * primeJump;\n          const key = \"\".concat(x, \" \").concat(y);\n          circles.push( /*#__PURE__*/_jsxDEV(Circle, {\n            x: jx,\n            y: jy,\n            radius: shapeSize,\n            fill: color,\n            listening: false,\n            perfectDrawEnabled: false\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 24\n          }, this));\n          squares.push( /*#__PURE__*/_jsxDEV(Rect, {\n            x: jx,\n            y: jy,\n            width: shapeSize,\n            height: shapeSize,\n            fill: color,\n            listening: false,\n            perfectDrawEnabled: false\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 24\n          }, this));\n          triangs.push( /*#__PURE__*/_jsxDEV(RegularPolygon, {\n            x: jx,\n            y: jy,\n            sides: 3,\n            radius: shapeSize,\n            fill: color,\n            listening: false,\n            perfectDrawEnabled: false\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 24\n          }, this));\n        }\n      }\n    }\n\n    this.setState({\n      spiral: {\n        [CIRCLE]: circles,\n        [SQUARE]: squares,\n        [TRIANGLE]: triangs\n      }\n    });\n  }\n\n  handleSlider(id) {\n    return val => {\n      this.setState({\n        [id]: val\n      });\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const _this$state4 = this.state,\n          stageSize = _this$state4.stageSize,\n          primeSize = _this$state4.primeSize,\n          shapeSize = _this$state4.shapeSize,\n          start = _this$state4.start,\n          notify = _this$state4.notify,\n          msg = _this$state4.msg,\n          spiral = _this$state4.spiral,\n          color = _this$state4.color,\n          bgColor = _this$state4.bgColor,\n          shape = _this$state4.shape;\n    const numberVars = [primeSize, shapeSize, start];\n    const shapes = spiral ? spiral[shape] : [];\n    if (this.layer) this.layer.batchDraw();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.title,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        align: \"center\",\n        variant: \"h5\",\n        children: \" Ulam Spiral Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        anchorOrigin: {\n          vertical: \"bottom\",\n          horizontal: \"left\"\n        },\n        open: notify,\n        autoHideDuration: 2000,\n        onClose: () => {\n          this.setState({\n            notify: false\n          });\n        },\n        ContentProps: {\n          'aria-describedby': 'message-id'\n        },\n        message: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"message-id\",\n          children: msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        children: /*#__PURE__*/_jsxDEV(Stage, {\n          className: classes.stage,\n          width: stageSize,\n          height: stageSize,\n          children: [/*#__PURE__*/_jsxDEV(FastLayer, {\n            children: /*#__PURE__*/_jsxDEV(Rect, {\n              x: 0,\n              y: 0,\n              width: stageSize,\n              height: stageSize,\n              fill: bgColor,\n              shadowBlur: 5\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FastLayer, {\n            ref: _ref => this.layer = _ref,\n            children: [/*#__PURE__*/_jsxDEV(Rect, {\n              x: 0,\n              y: 0,\n              width: stageSize,\n              height: stageSize,\n              fill: bgColor,\n              shadowBlur: 5\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this), shapes]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.card,\n        elevation: 4,\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.controlsLabel,\n            variant: \"h6\",\n            children: \"Controls\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: classes.controls,\n            noValidate: true,\n            autoComplete: \"off\",\n            children: [createSliders(SLIDER_FIELDS, numberVars, classes, this.handleSlider), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.cPickers,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: classes.colorPicker,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  align: \"left\",\n                  color: \"textSecondary\",\n                  children: \"Background Color\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ColorPicker, {\n                  className: classes.colorPicker,\n                  name: \"bgColor\",\n                  defaultValue: bgColor,\n                  onChange: c => {\n                    if (!c) return;\n                    this.setState({\n                      bgColor: c\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: classes.colorPicker,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  align: \"left\",\n                  color: \"textSecondary\",\n                  children: \"Shape Color\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 18\n                }, this), /*#__PURE__*/_jsxDEV(ColorPicker, {\n                  name: \"color\",\n                  defaultValue: color,\n                  onChange: c => {\n                    if (!c) return;\n                    this.setState({\n                      color: c\n                    }, this.makeSpiral);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 18\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              className: classes.shapePicker,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"select\",\n                children: \"Shape\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: this.state.shape,\n                onChange: event => {\n                  this.setState({\n                    [event.target.name]: event.target.value\n                  });\n                },\n                inputProps: {\n                  name: 'shape',\n                  id: 'select'\n                },\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 0,\n                  children: \"Circle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 1,\n                  children: \"Square\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 2,\n                  children: \"Triangle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.endingText,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"p\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Warning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this), \": higher grid sizes may cause some slow down.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 72\n          }, this), \"This project was inspired by\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://www.youtube.com/watch?v=iFuR97YcSLM\",\n            children: \"this\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this), \" \", \" awesome numberphile video. You can read more about Prime Ulam Spirals\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://en.wikipedia.org/wiki/Ulam_spiral\",\n            children: \"here.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 74\n          }, this), \"You can also check out the\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://gitlab.com/danielloera/primeulam\",\n            children: \"python version\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this), \" \", \"I made.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst styles = theme => ({\n  title: {\n    marginTop: '3vh',\n    textAlign: 'center',\n    padding: theme.spacing(2)\n  },\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center'\n  },\n  stage: {\n    marginTop: '3vh'\n  },\n  card: {\n    marginTop: '2rem',\n    padding: '1rem',\n    minWidth: '30vw',\n    maxWidth: '90vw'\n  },\n  cardHolder: {\n    justifyContent: 'center',\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  controlsLabel: {},\n  controls: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3)\n  },\n  sliderField: {\n    width: '15ch',\n    margin: theme.spacing(4)\n  },\n  colorPicker: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    maxWidth: '15rem'\n  },\n  cPickers: {\n    display: 'flex',\n    marginTop: theme.spacing(3)\n  },\n  slideLabel: {\n    marginBottom: theme.spacing(3)\n  },\n  shapePicker: {\n    marginTop: theme.spacing(4)\n  },\n  endingText: {\n    marginTop: theme.spacing(3),\n    marginBottom: '25vh',\n    padding: theme.spacing(2)\n  }\n});\n\nPrimeUlam.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(PrimeUlam);\n\nvar _c;\n\n$RefreshReg$(_c, \"TSlider\");","map":{"version":3,"sources":["/home/daniel/reatret.net/react-app/src/components/PrimeUlam/PrimeUlam.js"],"names":["React","Component","secondaryColor","PropTypes","withStyles","Stage","FastLayer","Rect","Circle","RegularPolygon","Snackbar","Select","InputLabel","MenuItem","Card","CardContent","FormControl","Typography","threads","Slider","ColorPicker","TSlider","createSliderWithTooltip","SCREEN_PERCENTAGE","CALC_PRIMES","RENDER","CIRCLE","SQUARE","TRIANGLE","getSpiralIdx","n","k","Math","ceil","sqrt","t","m","pow","x","y","spiralize","board","num","size","length","len","rawHalf","half","floor","i","idx","SLIDER_FIELDS","name","id","min","max","createSliders","fields","values","classes","fn","doms","field","value","push","sliderField","slideLabel","backgroundColor","borderColor","slider","PrimeUlam","constructor","props","start","primeSize","prevPrimes","backgroundRect","maxPrimeSize","maxStart","state","spiral","bgColor","color","shape","shapeSize","stageSize","primes","notify","msg","layer","handleSlider","bind","makeSpiral","updateDimensions","then","setState","trunc","window","innerWidth","innerHeight","componentDidMount","updatePrimes","addEventListener","componentDidUpdate","prevProps","prevState","limit","newLimit","oldLimit","ns","primeThread","spawn","input","done","ps","primesSieve","prevData","a","prevLen","diff","Array","fill","ans","Set","isPrime","add","send","on","response","data","newBoard","newStart","primeJump","tempArr","circles","squares","triangs","has","jx","jy","key","val","render","numberVars","shapes","batchDraw","title","vertical","horizontal","root","stage","ref","card","controlsLabel","controls","cPickers","colorPicker","c","shapePicker","event","target","endingText","styles","theme","marginTop","textAlign","padding","spacing","display","alignItems","justifyContent","minWidth","maxWidth","cardHolder","flexWrap","marginLeft","marginRight","width","margin","marginBottom","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { secondaryColor } from '../App/App'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Stage, FastLayer, Rect, Circle, RegularPolygon } from 'react-konva'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Select from '@material-ui/core/Select'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport FormControl from '@material-ui/core/FormControl'\nimport Typography from '@material-ui/core/Typography'\nimport threads from 'threads'\nimport Slider from 'rc-slider'\nimport ColorPicker from 'material-ui-color-picker'\nimport 'rc-slider/assets/index.css'\nconst TSlider = Slider.createSliderWithTooltip(Slider)\n\nconst SCREEN_PERCENTAGE = 0.80\nconst CALC_PRIMES = \"Calculating Primes...\"\nconst RENDER = \"Rendering...\"\n\nconst CIRCLE = 0\nconst SQUARE = 1\nconst TRIANGLE = 2\n\nfunction getSpiralIdx(n) {\n  const k = Math.ceil((Math.sqrt(n) - 1) / 2)\n  let t = 2 * k + 1\n  let m = Math.pow(t, 2)\n  t -= 1\n  if (n >= m - t) {\n    return {x: k-(m-n), y: k}\n  } else {\n    m -= t\n  }\n  if (n >= m - t) {\n    return {x: -k, y: k - (m - n)}\n  } else {\n    m -= t\n  }\n  if (n >= m - t) {\n    return {x: -k + (m-n), y: -k}\n  }\n  return {x: k, y: -k+(m-n-t)}\n}\n\nfunction spiralize(board, num) {\n  const size = Math.pow(board.length, 2)\n  const len = board.length\n  const rawHalf = len / 2\n  const half = len % 2 === 0 ?\n              Math.ceil(rawHalf) - 1:\n              Math.floor(rawHalf)\n  for (let i = 1; i <= size; i++) {\n    const idx = getSpiralIdx(i)\n    board[idx.x + half][idx.y + half] = num\n    num += 1\n  }\n}\n\nconst SLIDER_FIELDS = [\n  {\n    name: \"Grid\\xa0Size\\xa0(NxN)\",\n    id: \"primeSize\",\n    min: 5,\n    max: 1001,\n  },\n  {\n    name: \"Shape\\xa0Size\",\n    id: \"shapeSize\",\n    min: 1,\n    max: 100,\n  },\n  {\n    name: \"Starting\\xa0Number\",\n    id: \"start\",\n    min: 1,\n    max: 500,\n  },\n]\n\nfunction createSliders(fields, values, classes, fn) {\n  const doms = []\n  for (let i = 0; i < fields.length; i++) {\n    const field = fields[i]\n    const value = values[i]\n    doms.push((\n      <div\n        className={classes.sliderField}\n        key={field.name}\n        id={field.name}>\n          <Typography align=\"left\" className={classes.slideLabel} color=\"textSecondary\">{`${field.name}:\\xa0${value}`}</Typography>\n          <TSlider\n            handleStyle={{backgroundColor: secondaryColor, borderColor: secondaryColor}}\n            trackStyle={{backgroundColor: secondaryColor, borderColor: secondaryColor}}\n            className={classes.slider}\n            min={field.min}\n            max={field.max}\n            step={1}\n            defaultValue={value}\n            onAfterChange={fn(field.id)}/>\n      </div>\n    ))\n  }\n  return doms\n}\n\nclass PrimeUlam extends Component {\n\n  constructor(props) {\n    super(props)\n    const start = 1\n    const primeSize = 101\n    this.board = null\n    this.prevPrimes = null\n    this.backgroundRect = null\n    this.maxPrimeSize = primeSize\n    this.maxStart = start\n    this.state = {\n      spiral: null,\n      bgColor: \"white\",\n      color: \"black\",\n      shape: CIRCLE,\n      shapeSize: 5,\n      start: start,\n      stageSize: 0,\n      primeSize: primeSize,\n      primes: null,\n      notify: false,\n      msg: '',\n    }\n    this.layer = null\n    this.handleSlider = this.handleSlider.bind(this)\n    this.makeSpiral = this.makeSpiral.bind(this)\n    this.updateDimensions = this.updateDimensions.bind(this)\n  }\n\n  notify(msg, then) {\n    this.setState({\n      msg: msg,\n      notify: true\n    }, then)\n  }\n\n  updateDimensions() {\n    this.setState({\n      stageSize: Math.trunc(Math.min(window.innerWidth, window.innerHeight) * SCREEN_PERCENTAGE)\n    }, this.makeSpiral)\n  }\n\n  componentDidMount() {\n    const {primeSize, start} = this.state\n    this.updatePrimes(Math.pow(primeSize + start, 2))\n    this.updateDimensions()\n    window.addEventListener(\"resize\", this.updateDimensions)\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {primeSize, start, shapeSize} = this.state\n    if (primeSize !== prevState.primeSize) {\n      if (this.maxPrimeSize < primeSize) {\n        this.maxPrimeSize = primeSize\n        const limit = Math.pow(primeSize + start, 2)\n        this.updatePrimes(limit)\n      } else {\n        this.notify(RENDER, this.makeSpiral)\n      }\n    }\n    if (start && start !== prevState.start) {\n      const newLimit = Math.pow(this.maxPrimeSize + start, 2)\n      const oldLimit = Math.pow(this.maxPrimeSize + this.maxStart, 2)\n      if (oldLimit < newLimit) {\n        this.maxStart = start\n        this.updatePrimes(newLimit)\n      } else {\n        this.notify(RENDER, (ns)=> {\n          this.makeSpiral(false, true)\n        })\n      }\n    }\n    if (shapeSize !== prevState.shapeSize) {\n      this.notify(RENDER, this.makeSpiral)\n    }\n  }\n\n  updatePrimes(limit) {\n    const primeThread = threads.spawn((input, done) => {\n      const ps = function primesSieve(limit, prevData) {\n        let a = null\n        let start = 0\n        if (prevData && prevData.length < limit) {\n          a = prevData\n          const prevLen = prevData.length\n          start = prevLen\n          // Limit MUST be greater then prev data len\n          const diff = limit - prevLen\n          for (let i = 0; i < diff; i++) {\n            a.push(true)\n          }\n        } else {\n          a = Array(limit)\n          a[0] = false\n          a[1] = false\n          a.fill(true, 2, limit)\n        }\n        const ans = new Set([])\n        for(let i = start; i < a.length; i++) {\n          const isPrime = a[i]\n          if (isPrime) {\n            ans.add(i)\n            for (let n = i*i; n < limit; n+=i) {\n              a[n] = false\n            }\n          }\n        }\n        return {primes: ans, prevData: a}\n      }\n      done({ps: ps(input.limit, input.prevPrimes)})\n    })\n    this.notify(CALC_PRIMES)\n    primeThread.send({limit: limit, prevPrimes: this.prevPrimes})\n    .on('message', (response) => {\n      this.prevPrimes = response.ps.data\n      this.setState({\n        primes: response.ps.primes\n      }, (ns)=>{ this.makeSpiral(true) })\n    })\n  }\n\n  makeSpiral(newBoard, newStart=false) {\n    const {start, primeSize, stageSize, shapeSize,\n           color, primes} = this.state\n    if (!stageSize || !primeSize || !start ||\n        !shapeSize || !primes) {\n      return null\n    }\n    const primeJump = Math.ceil(stageSize / primeSize)\n    if (newBoard) {\n      this.board = []\n      for (let i = 0; i < primeSize; i++) {\n        const tempArr = Array(primeSize)\n        this.board.push(tempArr)\n      }\n    }\n    if (newBoard || newStart) {\n      spiralize(this.board, start)\n    }\n    const circles = []\n    const squares = []\n    const triangs = []\n    for (let x = 0; x < primeSize; x++) {\n      for (let y = 0; y < primeSize; y++) {\n        if (primes.has(this.board[x][y])) {\n          const jx = x * primeJump\n          const jy = y * primeJump\n          const key = `${x} ${y}`\n          circles.push(<Circle\n                        key={key}\n                        x={jx} y={jy}\n                        radius={shapeSize}\n                        fill={color}\n                        listening={false}\n                        perfectDrawEnabled={false}/>)\n          squares.push(<Rect\n                        key={key}\n                        x={jx} y={jy}\n                        width={shapeSize} height={shapeSize}\n                        fill={color}\n                        listening={false}\n                        perfectDrawEnabled={false}/>)\n          triangs.push(<RegularPolygon\n                        key={key}\n                        x={jx} y={jy}\n                        sides={3} radius={shapeSize}\n                        fill={color}\n                        listening={false}\n                        perfectDrawEnabled={false}/>)\n        }\n      }\n    }\n    this.setState({\n        spiral: {\n          [CIRCLE]: circles,\n          [SQUARE]: squares,\n          [TRIANGLE]: triangs,\n        }\n      }\n    )\n  }\n\n  handleSlider(id){\n    return (val) => {\n      this.setState({[id]: val})\n    }\n  }\n\n  render() {\n    const {classes} = this.props\n    const {stageSize, primeSize, shapeSize,\n           start, notify, msg, spiral,\n           color, bgColor, shape} = this.state\n    const numberVars = [primeSize, shapeSize, start]\n    const shapes = spiral ? spiral[shape] : []\n    if (this.layer) this.layer.batchDraw()\n    return (\n      <div className={classes.title}>\n        <Typography align=\"center\" variant=\"h5\"> Ulam Spiral Generator</Typography>\n        <Snackbar\n          anchorOrigin={{vertical: \"bottom\", horizontal: \"left\"}}\n          open={notify}\n          autoHideDuration={2000}\n          onClose={()=> {this.setState({notify: false})}}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{msg}</span>}/>\n        <div className={classes.root}>\n          <Stage className={classes.stage}\n                 width={stageSize}\n                 height={stageSize}>\n            <FastLayer>\n              <Rect x={0} y={0}\n                    width={stageSize} height={stageSize}\n                    fill={bgColor} shadowBlur={5}/>\n            </FastLayer>\n            <FastLayer ref={(ref)=> this.layer = ref}>\n              <Rect x={0} y={0}\n                    width={stageSize} height={stageSize}\n                    fill={bgColor} shadowBlur={5}/>\n              {shapes}\n            </FastLayer>\n          </Stage>\n        </div>\n        {/* Controls */}\n        <Card className={classes.card} elevation={4}>\n          <CardContent>\n            <Typography className={classes.controlsLabel} variant=\"h6\">Controls</Typography>\n            <form className={classes.controls} noValidate autoComplete=\"off\">\n              {createSliders(SLIDER_FIELDS, numberVars, classes, this.handleSlider)}\n              <div className={classes.cPickers}>\n                <span className={classes.colorPicker}>\n                  <Typography align=\"left\" color=\"textSecondary\">Background Color</Typography>\n                  <ColorPicker\n                    className={classes.colorPicker}\n                    name='bgColor'\n                    defaultValue={bgColor}\n                    onChange={(c) => {\n                      if (!c) return\n                      this.setState({bgColor: c})}\n                  }/>\n                </span>\n                <span className={classes.colorPicker}>\n                 <Typography align=\"left\" color=\"textSecondary\">Shape Color</Typography>\n                 <ColorPicker\n                    name='color'\n                    defaultValue={color}\n                    onChange={(c) => {\n                        if(!c) return\n                        this.setState({color: c}, this.makeSpiral)\n                  }}/>\n                </span>\n            </div>\n            <FormControl className={classes.shapePicker}>\n              <InputLabel htmlFor=\"select\">Shape</InputLabel>\n              <Select\n                value={this.state.shape}\n                onChange={(event)=> {\n                    this.setState({[event.target.name]: event.target.value})\n                  }}\n                inputProps={{\n                  name: 'shape',\n                  id: 'select',\n                }}>\n                <MenuItem value={0}>Circle</MenuItem>\n                <MenuItem value={1}>Square</MenuItem>\n                <MenuItem value={2}>Triangle</MenuItem>\n              </Select>\n            </FormControl>\n            </form>\n          </CardContent>\n        </Card>\n        {/* Bottom Text */}\n        <div className={classes.endingText}>\n          <Typography component=\"p\" >\n            <b>Warning</b>: higher grid sizes may cause some slow down.<br/>\n            This project was inspired by{\" \"}\n            <a href=\"https://www.youtube.com/watch?v=iFuR97YcSLM\">this</a>\n            {\" \"} awesome numberphile video.\n            You can read more about Prime Ulam Spirals{\" \"}\n            <a href=\"https://en.wikipedia.org/wiki/Ulam_spiral\">here.</a><br/>\n            You can also check out the{\" \"}\n            <a href=\"https://gitlab.com/danielloera/primeulam\">python version</a>\n            {\" \"}I made.\n          </Typography>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst styles = (theme) => ({\n  title: {\n    marginTop: '3vh',\n    textAlign: 'center',\n    padding: theme.spacing(2),\n  },\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n  },\n  stage: {\n    marginTop: '3vh',\n  },\n  card: {\n    marginTop: '2rem',\n    padding: '1rem',\n    minWidth: '30vw',\n    maxWidth: '90vw',\n  },\n  cardHolder: {\n    justifyContent: 'center',\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  controlsLabel: {\n  },\n  controls: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n  sliderField: {\n    width: '15ch',\n    margin: theme.spacing(4),\n  },\n  colorPicker: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    maxWidth: '15rem',\n  },\n  cPickers: {\n    display: 'flex',\n    marginTop: theme.spacing(3),\n  },\n  slideLabel: {\n    marginBottom: theme.spacing(3)\n  },\n  shapePicker: {\n    marginTop: theme.spacing(4)\n  },\n  endingText: {\n    marginTop: theme.spacing(3),\n    marginBottom: '25vh',\n    padding: theme.spacing(2)\n  }\n})\n\nPrimeUlam.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(PrimeUlam)\n"]},"metadata":{},"sourceType":"module"}