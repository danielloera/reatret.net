{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import{Link}from'react-router-dom';import{withStyles}from'@material-ui/core/styles';import Drawer from'@material-ui/core/Drawer';import List from'@material-ui/core/List';import Divider from'@material-ui/core/Divider';import ListItem from'@material-ui/core/ListItem';import ListItemIcon from'@material-ui/core/ListItemIcon';import ListItemText from'@material-ui/core/ListItemText';import SpiralIcon from'@material-ui/icons/ScatterPlot';import HomeIcon from'@material-ui/icons/Home';import CodeSwitchIcon from'@material-ui/icons/Language';// List of all Drawer Items\nconst DRAWER_LIST=[{text:\"Home\",icon:/*#__PURE__*/_jsx(HomeIcon,{}),link:\"/\",divider:true},{text:\"Code-Switching RNN\",icon:/*#__PURE__*/_jsx(CodeSwitchIcon,{}),link:\"/codeswitching\"},{text:\"Ulam Spirals\",icon:/*#__PURE__*/_jsx(SpiralIcon,{}),link:\"/primeulam\"}];const styles={list:{minWidth:'calc(10ch + 10vw)',maxWidth:'calc(20ch + 10vw)'}};function createList(dList){return/*#__PURE__*/_jsx(List,{children:DRAWER_LIST.map(dItem=>{const divider=dItem.divider?/*#__PURE__*/_jsx(Divider,{}):null;return/*#__PURE__*/_jsxs(Link,{to:dItem.link,style:{textDecoration:'none',color:'white'},children:[/*#__PURE__*/_jsxs(ListItem,{button:true,children:[/*#__PURE__*/_jsx(ListItemIcon,{children:dItem.icon}),/*#__PURE__*/_jsx(ListItemText,{primary:dItem.text})]}),divider]},dItem.text);})});}function TempDrawer(props){const classes=props.classes;return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Drawer,{open:props.opened,onClose:props.toggle(false),children:/*#__PURE__*/_jsx(\"div\",{tabIndex:0,role:\"button\",onClick:props.toggle(false),onKeyDown:props.toggle(false),children:/*#__PURE__*/_jsx(\"div\",{className:classes.list,children:createList(DRAWER_LIST)})})})});}export default withStyles(styles)(TempDrawer);","map":{"version":3,"sources":["/home/daniel/reatret.net/react-app/src/components/App/TempDrawer.js"],"names":["React","Link","withStyles","Drawer","List","Divider","ListItem","ListItemIcon","ListItemText","SpiralIcon","HomeIcon","CodeSwitchIcon","DRAWER_LIST","text","icon","link","divider","styles","list","minWidth","maxWidth","createList","dList","map","dItem","textDecoration","color","TempDrawer","props","classes","opened","toggle"],"mappings":"wFAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,kBAArB,CAEA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gCAAzB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gCAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,gCAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,CACA,MAAOC,CAAAA,cAAP,KAA2B,6BAA3B,CAEA;AACA,KAAMC,CAAAA,WAAW,CAAG,CAClB,CACEC,IAAI,CAAE,MADR,CAEEC,IAAI,cAAG,KAAC,QAAD,IAFT,CAGEC,IAAI,CAAE,GAHR,CAIEC,OAAO,CAAE,IAJX,CADkB,CAOlB,CACEH,IAAI,CAAE,oBADR,CAEEC,IAAI,cAAG,KAAC,cAAD,IAFT,CAGEC,IAAI,CAAE,gBAHR,CAPkB,CAYlB,CACEF,IAAI,CAAE,cADR,CAEEC,IAAI,cAAG,KAAC,UAAD,IAFT,CAGEC,IAAI,CAAE,YAHR,CAZkB,CAApB,CAmBA,KAAME,CAAAA,MAAM,CAAG,CACbC,IAAI,CAAE,CACJC,QAAQ,CAAE,mBADN,CAEJC,QAAQ,CAAE,mBAFN,CADO,CAAf,CAOA,QAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,CACzB,mBACE,KAAC,IAAD,WACGV,WAAW,CAACW,GAAZ,CAAiBC,KAAD,EAAW,CAC1B,KAAMR,CAAAA,OAAO,CAAGQ,KAAK,CAACR,OAAN,cAAgB,KAAC,OAAD,IAAhB,CAA6B,IAA7C,CACA,mBACE,MAAC,IAAD,EAAM,EAAE,CAAEQ,KAAK,CAACT,IAAhB,CACM,KAAK,CAAE,CAACU,cAAc,CAAE,MAAjB,CAAyBC,KAAK,CAAE,OAAhC,CADb,wBAEE,MAAC,QAAD,EAAU,MAAM,KAAhB,wBACE,KAAC,YAAD,WAAeF,KAAK,CAACV,IAArB,EADF,cAEE,KAAC,YAAD,EAAc,OAAO,CAAEU,KAAK,CAACX,IAA7B,EAFF,GAFF,CAMGG,OANH,GAA2BQ,KAAK,CAACX,IAAjC,CADF,CASD,CAXA,CADH,EADF,CAgBD,CAED,QAASc,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,MACjBC,CAAAA,OADiB,CACLD,KADK,CACjBC,OADiB,CAEzB,mBACE,kCACE,KAAC,MAAD,EAAQ,IAAI,CAAED,KAAK,CAACE,MAApB,CAA4B,OAAO,CAAEF,KAAK,CAACG,MAAN,CAAa,KAAb,CAArC,uBACE,YACE,QAAQ,CAAE,CADZ,CAEE,IAAI,CAAC,QAFP,CAGE,OAAO,CAAEH,KAAK,CAACG,MAAN,CAAa,KAAb,CAHX,CAIE,SAAS,CAAEH,KAAK,CAACG,MAAN,CAAa,KAAb,CAJb,uBAKE,YAAK,SAAS,CAAEF,OAAO,CAACX,IAAxB,UACGG,UAAU,CAACT,WAAD,CADb,EALF,EADF,EADF,EADF,CAeD,CAMD,cAAeV,CAAAA,UAAU,CAACe,MAAD,CAAV,CAAmBU,UAAnB,CAAf","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport SpiralIcon from '@material-ui/icons/ScatterPlot'\nimport HomeIcon from '@material-ui/icons/Home'\nimport CodeSwitchIcon from '@material-ui/icons/Language'\n\n// List of all Drawer Items\nconst DRAWER_LIST = [\n  {\n    text: \"Home\",\n    icon: (<HomeIcon/>),\n    link: \"/\",\n    divider: true\n  },\n  {\n    text: \"Code-Switching RNN\",\n    icon: (<CodeSwitchIcon/>),\n    link: \"/codeswitching\"\n  },\n  {\n    text: \"Ulam Spirals\",\n    icon: (<SpiralIcon/>),\n    link: \"/primeulam\"\n  },\n]\n\nconst styles = {\n  list: {\n    minWidth: 'calc(10ch + 10vw)',\n    maxWidth: 'calc(20ch + 10vw)',\n  }\n}\n\nfunction createList(dList) {\n  return (\n    <List>\n      {DRAWER_LIST.map((dItem) => {\n        const divider = dItem.divider ? <Divider/> : null\n        return (\n          <Link to={dItem.link} key={dItem.text}\n                style={{textDecoration: 'none', color: 'white'}}>\n            <ListItem button>\n              <ListItemIcon>{dItem.icon}</ListItemIcon>\n              <ListItemText primary={dItem.text}/>\n            </ListItem>\n            {divider}\n          </Link>)\n      })}\n    </List>\n  )\n}\n\nfunction TempDrawer(props) {\n  const { classes } = props\n  return (\n    <div>\n      <Drawer open={props.opened} onClose={props.toggle(false)}>\n        <div\n          tabIndex={0}\n          role=\"button\"\n          onClick={props.toggle(false)}\n          onKeyDown={props.toggle(false)}>\n          <div className={classes.list}>\n            {createList(DRAWER_LIST)}\n          </div>\n        </div>\n      </Drawer>\n    </div>\n  )\n}\n\nTempDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(TempDrawer)\n"]},"metadata":{},"sourceType":"module"}