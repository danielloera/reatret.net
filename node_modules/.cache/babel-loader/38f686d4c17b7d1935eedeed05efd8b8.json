{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Util_1 = require(\"../Util\");\n\nvar Factory_1 = require(\"../Factory\");\n\nvar Shape_1 = require(\"../Shape\");\n\nvar Validators_1 = require(\"../Validators\");\n\nvar Global_1 = require(\"../Global\");\n\nvar Line = function (_super) {\n  __extends(Line, _super);\n\n  function Line(config) {\n    var _this = _super.call(this, config) || this;\n\n    _this.on('pointsChange.konva tensionChange.konva closedChange.konva bezierChange.konva', function () {\n      this._clearCache('tensionPoints');\n    });\n\n    return _this;\n  }\n\n  Line.prototype._sceneFunc = function (context) {\n    var points = this.points(),\n        length = points.length,\n        tension = this.tension(),\n        closed = this.closed(),\n        bezier = this.bezier(),\n        tp,\n        len,\n        n;\n\n    if (!length) {\n      return;\n    }\n\n    context.beginPath();\n    context.moveTo(points[0], points[1]);\n\n    if (tension !== 0 && length > 4) {\n      tp = this.getTensionPoints();\n      len = tp.length;\n      n = closed ? 0 : 4;\n\n      if (!closed) {\n        context.quadraticCurveTo(tp[0], tp[1], tp[2], tp[3]);\n      }\n\n      while (n < len - 2) {\n        context.bezierCurveTo(tp[n++], tp[n++], tp[n++], tp[n++], tp[n++], tp[n++]);\n      }\n\n      if (!closed) {\n        context.quadraticCurveTo(tp[len - 2], tp[len - 1], points[length - 2], points[length - 1]);\n      }\n    } else if (bezier) {\n      n = 2;\n\n      while (n < length) {\n        context.bezierCurveTo(points[n++], points[n++], points[n++], points[n++], points[n++], points[n++]);\n      }\n    } else {\n      for (n = 2; n < length; n += 2) {\n        context.lineTo(points[n], points[n + 1]);\n      }\n    }\n\n    if (closed) {\n      context.closePath();\n      context.fillStrokeShape(this);\n    } else {\n      context.strokeShape(this);\n    }\n  };\n\n  Line.prototype.getTensionPoints = function () {\n    return this._getCache('tensionPoints', this._getTensionPoints);\n  };\n\n  Line.prototype._getTensionPoints = function () {\n    if (this.closed()) {\n      return this._getTensionPointsClosed();\n    } else {\n      return Util_1.Util._expandPoints(this.points(), this.tension());\n    }\n  };\n\n  Line.prototype._getTensionPointsClosed = function () {\n    var p = this.points(),\n        len = p.length,\n        tension = this.tension(),\n        firstControlPoints = Util_1.Util._getControlPoints(p[len - 2], p[len - 1], p[0], p[1], p[2], p[3], tension),\n        lastControlPoints = Util_1.Util._getControlPoints(p[len - 4], p[len - 3], p[len - 2], p[len - 1], p[0], p[1], tension),\n        middle = Util_1.Util._expandPoints(p, tension),\n        tp = [firstControlPoints[2], firstControlPoints[3]].concat(middle).concat([lastControlPoints[0], lastControlPoints[1], p[len - 2], p[len - 1], lastControlPoints[2], lastControlPoints[3], firstControlPoints[0], firstControlPoints[1], p[0], p[1]]);\n\n    return tp;\n  };\n\n  Line.prototype.getWidth = function () {\n    return this.getSelfRect().width;\n  };\n\n  Line.prototype.getHeight = function () {\n    return this.getSelfRect().height;\n  };\n\n  Line.prototype.getSelfRect = function () {\n    var points;\n\n    if (this.tension() !== 0) {\n      points = this._getTensionPoints();\n    } else {\n      points = this.points();\n    }\n\n    var minX = points[0];\n    var maxX = points[0];\n    var minY = points[1];\n    var maxY = points[1];\n    var x, y;\n\n    for (var i = 0; i < points.length / 2; i++) {\n      x = points[i * 2];\n      y = points[i * 2 + 1];\n      minX = Math.min(minX, x);\n      maxX = Math.max(maxX, x);\n      minY = Math.min(minY, y);\n      maxY = Math.max(maxY, y);\n    }\n\n    return {\n      x: Math.round(minX),\n      y: Math.round(minY),\n      width: Math.round(maxX - minX),\n      height: Math.round(maxY - minY)\n    };\n  };\n\n  return Line;\n}(Shape_1.Shape);\n\nexports.Line = Line;\nLine.prototype.className = 'Line';\nLine.prototype._attrsAffectingSize = ['points', 'bezier', 'tension'];\n\nGlobal_1._registerNode(Line);\n\nFactory_1.Factory.addGetterSetter(Line, 'closed', false);\nFactory_1.Factory.addGetterSetter(Line, 'bezier', false);\nFactory_1.Factory.addGetterSetter(Line, 'tension', 0, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Line, 'points', [], Validators_1.getNumberArrayValidator());\nUtil_1.Collection.mapMethods(Line);","map":{"version":3,"sources":["/home/daniel/reatret.net/react-app/node_modules/konva/lib/shapes/Line.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","exports","value","Util_1","require","Factory_1","Shape_1","Validators_1","Global_1","Line","_super","config","_this","call","on","_clearCache","_sceneFunc","context","points","length","tension","closed","bezier","tp","len","n","beginPath","moveTo","getTensionPoints","quadraticCurveTo","bezierCurveTo","lineTo","closePath","fillStrokeShape","strokeShape","_getCache","_getTensionPoints","_getTensionPointsClosed","Util","_expandPoints","firstControlPoints","_getControlPoints","lastControlPoints","middle","concat","getWidth","getSelfRect","width","getHeight","height","minX","maxX","minY","maxY","x","y","i","Math","min","max","round","Shape","className","_attrsAffectingSize","_registerNode","Factory","addGetterSetter","getNumberValidator","getNumberArrayValidator","Collection","mapMethods"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Util_1 = require(\"../Util\");\nvar Factory_1 = require(\"../Factory\");\nvar Shape_1 = require(\"../Shape\");\nvar Validators_1 = require(\"../Validators\");\nvar Global_1 = require(\"../Global\");\nvar Line = (function (_super) {\n    __extends(Line, _super);\n    function Line(config) {\n        var _this = _super.call(this, config) || this;\n        _this.on('pointsChange.konva tensionChange.konva closedChange.konva bezierChange.konva', function () {\n            this._clearCache('tensionPoints');\n        });\n        return _this;\n    }\n    Line.prototype._sceneFunc = function (context) {\n        var points = this.points(), length = points.length, tension = this.tension(), closed = this.closed(), bezier = this.bezier(), tp, len, n;\n        if (!length) {\n            return;\n        }\n        context.beginPath();\n        context.moveTo(points[0], points[1]);\n        if (tension !== 0 && length > 4) {\n            tp = this.getTensionPoints();\n            len = tp.length;\n            n = closed ? 0 : 4;\n            if (!closed) {\n                context.quadraticCurveTo(tp[0], tp[1], tp[2], tp[3]);\n            }\n            while (n < len - 2) {\n                context.bezierCurveTo(tp[n++], tp[n++], tp[n++], tp[n++], tp[n++], tp[n++]);\n            }\n            if (!closed) {\n                context.quadraticCurveTo(tp[len - 2], tp[len - 1], points[length - 2], points[length - 1]);\n            }\n        }\n        else if (bezier) {\n            n = 2;\n            while (n < length) {\n                context.bezierCurveTo(points[n++], points[n++], points[n++], points[n++], points[n++], points[n++]);\n            }\n        }\n        else {\n            for (n = 2; n < length; n += 2) {\n                context.lineTo(points[n], points[n + 1]);\n            }\n        }\n        if (closed) {\n            context.closePath();\n            context.fillStrokeShape(this);\n        }\n        else {\n            context.strokeShape(this);\n        }\n    };\n    Line.prototype.getTensionPoints = function () {\n        return this._getCache('tensionPoints', this._getTensionPoints);\n    };\n    Line.prototype._getTensionPoints = function () {\n        if (this.closed()) {\n            return this._getTensionPointsClosed();\n        }\n        else {\n            return Util_1.Util._expandPoints(this.points(), this.tension());\n        }\n    };\n    Line.prototype._getTensionPointsClosed = function () {\n        var p = this.points(), len = p.length, tension = this.tension(), firstControlPoints = Util_1.Util._getControlPoints(p[len - 2], p[len - 1], p[0], p[1], p[2], p[3], tension), lastControlPoints = Util_1.Util._getControlPoints(p[len - 4], p[len - 3], p[len - 2], p[len - 1], p[0], p[1], tension), middle = Util_1.Util._expandPoints(p, tension), tp = [firstControlPoints[2], firstControlPoints[3]]\n            .concat(middle)\n            .concat([\n            lastControlPoints[0],\n            lastControlPoints[1],\n            p[len - 2],\n            p[len - 1],\n            lastControlPoints[2],\n            lastControlPoints[3],\n            firstControlPoints[0],\n            firstControlPoints[1],\n            p[0],\n            p[1]\n        ]);\n        return tp;\n    };\n    Line.prototype.getWidth = function () {\n        return this.getSelfRect().width;\n    };\n    Line.prototype.getHeight = function () {\n        return this.getSelfRect().height;\n    };\n    Line.prototype.getSelfRect = function () {\n        var points;\n        if (this.tension() !== 0) {\n            points = this._getTensionPoints();\n        }\n        else {\n            points = this.points();\n        }\n        var minX = points[0];\n        var maxX = points[0];\n        var minY = points[1];\n        var maxY = points[1];\n        var x, y;\n        for (var i = 0; i < points.length / 2; i++) {\n            x = points[i * 2];\n            y = points[i * 2 + 1];\n            minX = Math.min(minX, x);\n            maxX = Math.max(maxX, x);\n            minY = Math.min(minY, y);\n            maxY = Math.max(maxY, y);\n        }\n        return {\n            x: Math.round(minX),\n            y: Math.round(minY),\n            width: Math.round(maxX - minX),\n            height: Math.round(maxY - minY)\n        };\n    };\n    return Line;\n}(Shape_1.Shape));\nexports.Line = Line;\nLine.prototype.className = 'Line';\nLine.prototype._attrsAffectingSize = ['points', 'bezier', 'tension'];\nGlobal_1._registerNode(Line);\nFactory_1.Factory.addGetterSetter(Line, 'closed', false);\nFactory_1.Factory.addGetterSetter(Line, 'bezier', false);\nFactory_1.Factory.addGetterSetter(Line, 'tension', 0, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Line, 'points', [], Validators_1.getNumberArrayValidator());\nUtil_1.Collection.mapMethods(Line);\n"]},"metadata":{},"sourceType":"script"}