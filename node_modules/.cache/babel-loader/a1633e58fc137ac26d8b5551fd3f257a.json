{"ast":null,"code":"import _slicedToArray from \"/home/daniel/reatret.net/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/daniel/reatret.net/react-app/src/components/Home/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Container from '@material-ui/core/Container';\nimport kiwi from '../../images/kiwi.png';\nimport trex from '../../images/komodo.png';\nimport komodo from '../../images/trex.png';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport RWIcon from '@material-ui/icons/FastRewind';\nimport FFIcon from '@material-ui/icons/FastForward';\nimport CodeIcon from '@material-ui/icons/Code';\nimport ResumeIcon from '@material-ui/icons/Description';\nimport ContactIcon from '@material-ui/icons/Email';\nimport Typography from '@material-ui/core/Typography';\nimport { createLinks } from '../../utils';\nimport './Home.css';\n\nconst styles = theme => ({\n  root: {\n    marginTop: theme.spacing(16),\n    textAlign: \"center\"\n  },\n  spinningImage: {\n    animation: \"logo-spin infinite 3s linear\",\n    height: \"25vh\",\n    maxWidth: \"90vw\",\n    display: \"flex\",\n    marginBottom: theme.spacing(12)\n  },\n  card: {\n    padding: theme.spacing(1)\n  },\n  centerHolder: {\n    justifyContent: \"center\",\n    display: \"flex\"\n  }\n});\n\nconst LINKS = [{\n  name: \"Github\",\n  link: \"https://github.com/danielloera\",\n  icon: /*#__PURE__*/React.createElement(CodeIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }\n  })\n}, {\n  name: \"Resume\",\n  link: \"https://docs.google.com/document/d/18sWdFkdfeEGWD7KpvNJ7I25CUm_n0n1hrINJsOv3VzA\",\n  icon: /*#__PURE__*/React.createElement(ResumeIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }\n  })\n}, {\n  name: \"Contact\",\n  link: \"mailto:danny.reatret@gmail.com\",\n  icon: /*#__PURE__*/React.createElement(ContactIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }\n  })\n}];\nconst imgs = [kiwi, trex, komodo];\nconst FASTER = 0;\nconst SLOWER = 1;\nconst Links = createLinks(LINKS);\n_c = Links;\n\nfunction spinImgAt(secs) {\n  return {\n    animation: \"logo-spin infinite \".concat(secs, \"s linear\")\n  };\n}\n\nfunction createSnackBar(v, h, message, open, handleClose) {\n  return /*#__PURE__*/React.createElement(Snackbar, {\n    key: h,\n    anchorOrigin: {\n      vertical: v,\n      horizontal: h\n    },\n    open: open,\n    autoHideDuration: 3000,\n    onClose: handleClose,\n    ContentProps: {\n      'aria-describedby': 'message-id'\n    },\n    message: /*#__PURE__*/React.createElement(\"span\", {\n      id: \"message-id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 16\n      }\n    }, message),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction createControl(name, fn) {\n  return [/*#__PURE__*/React.createElement(IconButton, {\n    key: \"\".concat(name, \"1\"),\n    \"aria-label\": \"\".concat(name, \" Slower\"),\n    onClick: fn(SLOWER),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(RWIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    key: \"\".concat(name, \"2\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, name), /*#__PURE__*/React.createElement(IconButton, {\n    key: \"\".concat(name, \"3\"),\n    \"aria-label\": \"\".concat(name, \" Faster\"),\n    onClick: fn(FASTER),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FFIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }))];\n}\n\nconst defaultSpin = 3;\nconst defaultSwap = 3000;\n\nfunction Home(props) {\n  _s();\n\n  const classes = props.classes;\n\n  const _useState = useState(Math.trunc(Math.random() * imgs.length)),\n        _useState2 = _slicedToArray(_useState, 2),\n        imgIdx = _useState2[0],\n        setImgIdx = _useState2[1];\n\n  const _useState3 = useState(defaultSpin),\n        _useState4 = _slicedToArray(_useState3, 2),\n        spinSpeed = _useState4[0],\n        setSpinSpeed = _useState4[1];\n\n  const _useState5 = useState(defaultSwap),\n        _useState6 = _slicedToArray(_useState5, 2),\n        swapSpeed = _useState6[0],\n        setSwapSpeed = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        spinSnack = _useState8[0],\n        setSpinSnack = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        swapSnack = _useState10[0],\n        setSwapSnack = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        spinMsg = _useState12[0],\n        setSpinMsg = _useState12[1];\n\n  const _useState13 = useState(''),\n        _useState14 = _slicedToArray(_useState13, 2),\n        swapMsg = _useState14[0],\n        setSwapMsg = _useState14[1];\n\n  function imgTick() {\n    let newIdx = imgIdx + 1;\n\n    if (newIdx === imgs.length) {\n      newIdx = 0;\n    }\n\n    setImgIdx(newIdx);\n  }\n\n  function reset() {\n    setSpinSpeed(defaultSpin);\n    setSwapSpeed(defaultSwap);\n    setSpinMsg(\"Spinning and swapping every \".concat(defaultSpin, \"s\"));\n    setSpinSnack(true);\n  }\n\n  function spin(type) {\n    return () => {\n      let newSpeed = null;\n\n      if (type === FASTER) {\n        newSpeed = spinSpeed / 2;\n      } else {\n        newSpeed = spinSpeed * 2;\n      }\n\n      setSpinSpeed(newSpeed);\n      setSpinMsg(\"Spinning every \".concat(newSpeed, \"s\"));\n      setSpinSnack(true);\n    };\n  }\n\n  function swap(type) {\n    return () => {\n      let newSpeed = null;\n\n      if (type === FASTER) {\n        newSpeed = swapSpeed / 2;\n      } else {\n        newSpeed = swapSpeed * 2;\n      }\n\n      setSwapSpeed(newSpeed);\n      setSwapMsg(\"Swapping every \".concat(newSpeed / 1000, \"s\"));\n      setSwapSnack(true);\n    };\n  } // Update swap interval on imageChange/speedChange\n\n\n  useEffect(() => {\n    const id = setInterval(imgTick, swapSpeed);\n    return () => clearInterval(id);\n  }, [swapSpeed, imgIdx]);\n  const logo = imgs[imgIdx];\n  const spinStyle = useMemo(() => spinImgAt(spinSpeed), [spinSpeed]);\n  const spinSnackBar = useMemo(() => createSnackBar('bottom', 'left', spinMsg, spinSnack, (e, r) => {\n    if (r === 'timeout') setSpinSnack(false);\n  }), [spinMsg, spinSnack]);\n  const swapSnackBar = useMemo(() => createSnackBar('bottom', 'right', swapMsg, swapSnack, (e, r) => {\n    if (r === 'timeout') setSwapSnack(false);\n  }), [swapMsg, swapSnack]);\n  const spinControl = useMemo(() => createControl(\"Spin\", spin), [spinSpeed]);\n  const swapControl = useMemo(() => createControl(\"Swap\", swap), [swapSpeed]);\n  return /*#__PURE__*/React.createElement(Container, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 5\n    }\n  }, [spinSnackBar, swapSnackBar], /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.centerHolder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: classes.spinningImage,\n    alt: \"logo\",\n    style: spinStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 10,\n    md: 6,\n    className: classes.cardHolder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    elevation: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"p\",\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, \"Hi, I'm Daniel. I love making things.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }), \"You can see some of them on this site or linked below.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }), \"Have fun \", /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 26\n    }\n  }, \"spinning\"), \".\")), /*#__PURE__*/React.createElement(CardActions, {\n    style: {\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, spinControl, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 16\n    }\n  }, \"Reset\"), swapControl))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, Links)));\n}\n\n_s(Home, \"m387qxx6mcZXPoxAxET7MxlkUM8=\");\n\n_c2 = Home;\nHome.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Home);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Links\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"sources":["/home/daniel/reatret.net/react-app/src/components/Home/Home.js"],"names":["React","useState","useEffect","useMemo","withStyles","PropTypes","Container","kiwi","trex","komodo","Snackbar","Card","CardActions","CardContent","Grid","IconButton","Button","RWIcon","FFIcon","CodeIcon","ResumeIcon","ContactIcon","Typography","createLinks","styles","theme","root","marginTop","spacing","textAlign","spinningImage","animation","height","maxWidth","display","marginBottom","card","padding","centerHolder","justifyContent","LINKS","name","link","icon","imgs","FASTER","SLOWER","Links","spinImgAt","secs","createSnackBar","v","h","message","open","handleClose","vertical","horizontal","createControl","fn","defaultSpin","defaultSwap","Home","props","classes","Math","trunc","random","length","imgIdx","setImgIdx","spinSpeed","setSpinSpeed","swapSpeed","setSwapSpeed","spinSnack","setSpinSnack","swapSnack","setSwapSnack","spinMsg","setSpinMsg","swapMsg","setSwapMsg","imgTick","newIdx","reset","spin","type","newSpeed","swap","id","setInterval","clearInterval","logo","spinStyle","spinSnackBar","e","r","swapSnackBar","spinControl","swapControl","cardHolder","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport Container from '@material-ui/core/Container'\nimport kiwi from '../../images/kiwi.png'\nimport trex from '../../images/komodo.png'\nimport komodo from '../../images/trex.png'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Grid from '@material-ui/core/Grid'\nimport IconButton from '@material-ui/core/IconButton'\nimport Button from '@material-ui/core/Button'\nimport RWIcon from '@material-ui/icons/FastRewind'\nimport FFIcon from '@material-ui/icons/FastForward'\nimport CodeIcon from '@material-ui/icons/Code'\nimport ResumeIcon from '@material-ui/icons/Description'\nimport ContactIcon from '@material-ui/icons/Email'\nimport Typography from '@material-ui/core/Typography'\nimport { createLinks } from '../../utils'\nimport './Home.css'\n\nconst styles = (theme) => ({\n  root: {\n    marginTop: theme.spacing(16),\n    textAlign: \"center\"\n  },\n  spinningImage: {\n    animation: \"logo-spin infinite 3s linear\",\n    height: \"25vh\",\n    maxWidth: \"90vw\",\n    display: \"flex\",\n    marginBottom: theme.spacing(12),\n  },\n  card: {\n    padding: theme.spacing(1),\n  },\n  centerHolder: {\n    justifyContent: \"center\",\n    display: \"flex\"\n  },\n})\n\nconst LINKS = [\n  {\n    name: \"Github\",\n    link: \"https://github.com/danielloera\",\n    icon: (<CodeIcon fontSize=\"large\"/>)\n  },\n  {\n    name: \"Resume\",\n    link: \"https://docs.google.com/document/d/18sWdFkdfeEGWD7KpvNJ7I25CUm_n0n1hrINJsOv3VzA\",\n    icon: (<ResumeIcon fontSize=\"large\"/>)\n  },\n  {\n    name: \"Contact\",\n    link: \"mailto:danny.reatret@gmail.com\",\n    icon: (<ContactIcon fontSize=\"large\"/>)\n  },\n]\n\nconst imgs = [kiwi, trex, komodo]\n\nconst FASTER = 0\nconst SLOWER = 1\nconst Links = createLinks(LINKS)\n\nfunction spinImgAt(secs) {\n  return {\n    animation: `logo-spin infinite ${secs}s linear`\n  }\n}\n\nfunction createSnackBar(v, h, message, open, handleClose) {\n  return (\n    <Snackbar key={h}\n      anchorOrigin={{vertical: v, horizontal: h}}\n      open={open}\n      autoHideDuration={3000}\n      onClose={handleClose}\n      ContentProps={{'aria-describedby': 'message-id'}}\n      message={<span id=\"message-id\">{message}</span>}/>\n  )\n}\n\nfunction createControl(name, fn) {\n  return [\n    <IconButton key={`${name}1`}\n      aria-label={`${name} Slower`}\n      onClick={fn(SLOWER)}>\n      <RWIcon/>\n    </IconButton>,\n    <Typography key={`${name}2`}>{name}</Typography>,\n    <IconButton key={`${name}3`}\n      aria-label={`${name} Faster`}\n      onClick={fn(FASTER)}>\n      <FFIcon/>\n    </IconButton>\n  ]\n}\n\nconst defaultSpin = 3\nconst defaultSwap = 3000\n\nfunction Home(props) {\n  const { classes } = props\n  const [imgIdx, setImgIdx] = useState(Math.trunc(Math.random() * imgs.length))\n  const [spinSpeed, setSpinSpeed] = useState(defaultSpin)\n  const [swapSpeed, setSwapSpeed] = useState(defaultSwap)\n  const [spinSnack, setSpinSnack] = useState(false)\n  const [swapSnack, setSwapSnack] = useState(false)\n  const [spinMsg, setSpinMsg] = useState('')\n  const [swapMsg, setSwapMsg] = useState('')\n\n  function imgTick() {\n    let newIdx = imgIdx + 1\n    if (newIdx === imgs.length) {\n      newIdx = 0\n    }\n    setImgIdx(newIdx)\n  }\n\n  function reset() {\n    setSpinSpeed(defaultSpin)\n    setSwapSpeed(defaultSwap)\n    setSpinMsg(`Spinning and swapping every ${defaultSpin}s`)\n    setSpinSnack(true)\n  }\n\n  function spin(type) {\n    return () => {\n      let newSpeed = null\n      if (type === FASTER) {\n        newSpeed = spinSpeed / 2\n      } else {\n        newSpeed = spinSpeed * 2\n      }\n      setSpinSpeed(newSpeed)\n      setSpinMsg(`Spinning every ${newSpeed}s`)\n      setSpinSnack(true)\n    }\n  }\n\n  function swap(type) {\n    return () => {\n      let newSpeed = null\n      if (type === FASTER) {\n        newSpeed = swapSpeed / 2\n      } else {\n        newSpeed = swapSpeed * 2\n      }\n      setSwapSpeed(newSpeed)\n      setSwapMsg(`Swapping every ${newSpeed / 1000}s`)\n      setSwapSnack(true)\n    }\n  }\n\n  // Update swap interval on imageChange/speedChange\n  useEffect(() => {\n    const id = setInterval(imgTick, swapSpeed)\n    return () => clearInterval(id)\n  }, [swapSpeed, imgIdx])\n\n  const logo = imgs[imgIdx]\n  const spinStyle = useMemo(() => spinImgAt(spinSpeed), [spinSpeed])\n  const spinSnackBar = useMemo(() => (\n    createSnackBar('bottom', 'left', spinMsg, spinSnack,\n                   (e, r) => {if(r === 'timeout') setSpinSnack(false)})),\n    [spinMsg, spinSnack])\n  const swapSnackBar = useMemo(() => (\n    createSnackBar('bottom', 'right', swapMsg, swapSnack,\n                   (e, r) => {if(r === 'timeout') setSwapSnack(false)})),\n    [swapMsg, swapSnack])\n  const spinControl = useMemo(() => createControl(\"Spin\", spin), [spinSpeed])\n  const swapControl = useMemo(() => createControl(\"Swap\", swap), [swapSpeed])\n  return (\n    <Container className={classes.root}>\n      {/* Snackbars */}\n      {[spinSnackBar, swapSnackBar]}\n      <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\n        <Grid item xs={12} className={classes.centerHolder}>\n        {/* Spinning Image */}\n        <img src={logo} className={classes.spinningImage} alt=\"logo\" style={spinStyle}/>\n        </Grid>\n        <Grid item xs={12} sm={10} md={6} className={classes.cardHolder}>\n          {/* Control Card */}\n          <Card className={classes.card} elevation={5}>\n            <CardContent>\n              <Typography component=\"p\" variant=\"body1\">\n                Hi, I'm Daniel. I love making things.\n                <br/>\n                You can see some of them on this site or linked below.\n                <br/>\n                Have fun <i>spinning</i>.\n              </Typography>\n            </CardContent>\n            <CardActions style={{justifyContent: 'center'}}>\n               {spinControl}\n               <Button size=\"small\" variant=\"contained\" color=\"secondary\"\n                       onClick={reset}>Reset</Button>\n               {swapControl}\n            </CardActions>\n          </Card>\n        </Grid>\n        <Grid item xs={12}>{Links}</Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nHome.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(Home)\n"]},"metadata":{},"sourceType":"module"}