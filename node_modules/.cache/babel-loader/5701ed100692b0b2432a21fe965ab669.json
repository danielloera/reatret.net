{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/daniel/reatret.net/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/daniel/reatret.net/react-app/src/components/UTTower/UTTower.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  root: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center'\n  },\n  botHolder: {\n    display: 'inline-block',\n    marginTop: theme.spacing(6)\n  },\n  endingText: {\n    marginTop: theme.spacing(5),\n    marginBottom: theme.spacing(10)\n  }\n});\n\nfunction UTTower(props) {\n  _s();\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        width = _useState2[0],\n        setWidth = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        height = _useState4[0],\n        setHeight = _useState4[1];\n\n  function updateDimensions() {\n    const ratio = window.innerWidth / window.innerHeight;\n    const opRatio = window.innerHeight / window.innerWidth;\n    const defaultWidth = window.innerWidth * 0.80;\n    const defaultHeight = window.innerHeight * 0.80;\n    const height = ratio > 1.5 ? window.innerHeight / ratio : window.innerHeight / opRatio;\n    const width = ratio > 1.5 ? window.innerWidth / ratio : window.innerWidth / opRatio;\n    setWidth(Math.min(width, defaultWidth));\n    setHeight(Math.max(height, defaultHeight));\n  }\n\n  useEffect(() => {\n    updateDimensions();\n    window.addEventListener(\"resize\", updateDimensions);\n    return () => window.removeEventListener(\"resize\", updateDimensions);\n  }, []);\n  const classes = props.classes;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.botHolder,\n      elevation: 8,\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        title: \"UT Tower\",\n        allow: \"microphone;\",\n        width: width,\n        height: height,\n        src: \"https://console.dialogflow.com/api-client/demo/embedded/uttower\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.endingText,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"p\",\n        children: [\"This bot was created on \", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://dialogflow.com\",\n          children: \"Dialogflow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), \" \", \"to get lighting updates from the\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://en.wikipedia.org/wiki/Main_Building_(University_of_Texas_at_Austin)\",\n          children: \"Tower in UT Austin.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), \"UT Tower bot is available on\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://assistant.google.com/services/a/uid/0000001deeb5797c?hl=en\",\n          children: \"Google Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), \" \", \" and\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://www.facebook.com/utexastower\",\n          children: \"Facebook Messenger.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UTTower, \"cn9c0ekkDsURdN9TluT2zN4s8KI=\");\n\n_c = UTTower;\nUTTower.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(UTTower);\n\nvar _c;\n\n$RefreshReg$(_c, \"UTTower\");","map":{"version":3,"sources":["/home/daniel/reatret.net/react-app/src/components/UTTower/UTTower.js"],"names":["React","useState","useEffect","PropTypes","withStyles","Paper","Typography","styles","theme","root","alignItems","justifyContent","textAlign","botHolder","display","marginTop","spacing","endingText","marginBottom","UTTower","props","width","setWidth","height","setHeight","updateDimensions","ratio","window","innerWidth","innerHeight","opRatio","defaultWidth","defaultHeight","Math","min","max","addEventListener","removeEventListener","classes","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\nconst styles = (theme) => ({\n  root: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n  },\n  botHolder: {\n    display: 'inline-block',\n    marginTop: theme.spacing(6),\n  },\n  endingText: {\n    marginTop: theme.spacing(5),\n    marginBottom: theme.spacing(10),\n  },\n})\n\nfunction UTTower(props) {\n  const [width, setWidth] = useState(0)\n  const [height, setHeight] = useState(0)\n\n  function updateDimensions() {\n    const ratio = window.innerWidth / window.innerHeight\n    const opRatio = window.innerHeight / window.innerWidth\n    const defaultWidth = window.innerWidth * 0.80\n    const defaultHeight = window.innerHeight * 0.80\n    const height = ratio > 1.5 ? window.innerHeight / ratio : window.innerHeight / opRatio\n    const width = ratio > 1.5 ? window.innerWidth / ratio : window.innerWidth / opRatio\n    setWidth(Math.min(width, defaultWidth))\n    setHeight(Math.max(height, defaultHeight))\n  }\n\n  useEffect(() => {\n    updateDimensions()\n    window.addEventListener(\"resize\", updateDimensions)\n    return () => window.removeEventListener(\"resize\", updateDimensions)\n  }, [])\n\n  const { classes } = props\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.botHolder} elevation={8}>\n        <iframe\n          title=\"UT Tower\"\n          allow=\"microphone;\"\n          width={width}\n          height={height}\n          src=\"https://console.dialogflow.com/api-client/demo/embedded/uttower\">\n        </iframe>\n      </Paper>\n\n      <div className={classes.endingText}>\n        <Typography component=\"p\" >\n          This bot was created on {\" \"}\n          <a href=\"https://dialogflow.com\">Dialogflow</a>\n          {\" \"}to get lighting updates from the{\" \"}\n          <a href=\"https://en.wikipedia.org/wiki/Main_Building_(University_of_Texas_at_Austin)\">Tower in UT Austin.</a>\n          <br/>UT Tower bot is available on{\" \"}\n          <a href=\"https://assistant.google.com/services/a/uid/0000001deeb5797c?hl=en\">Google Assistant</a>\n          {\" \"} and{\" \"}\n          <a href=\"https://www.facebook.com/utexastower\">Facebook Messenger.</a>\n        </Typography>\n      </div>\n    </div>\n  )\n}\n\nUTTower.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(UTTower)\n"]},"metadata":{},"sourceType":"module"}