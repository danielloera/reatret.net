{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/daniel/reatret.net/react-app/src/components/CodeSwitching/LabeledWord.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nconst COLOR = {\n  es: \"#7986cb\",\n  en: \"#f06292\",\n  other: \"#43a047\"\n};\n\nconst styles = theme => ({\n  root: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    justifyContent: \"center\"\n  },\n  labelText: {\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    textAlign: \"center\"\n  }\n});\n\nfunction getMargin(w1, w2) {\n  if (w1 >= w2) {\n    return Math.floor((w1 - w2) / 2);\n  }\n\n  return 0;\n}\n\nfunction LabeledWord(props) {\n  const label = props.label,\n        word = props.word,\n        classes = props.classes;\n  const labelWidth = label.length + 2;\n  const labelMarginLeft = getMargin(word.length, labelWidth);\n  const wordMarginLeft = getMargin(labelWidth + 1, word.length);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 4,\n      style: {\n        backgroundColor: COLOR[label],\n        marginLeft: \"\".concat(labelMarginLeft, \"rem\"),\n        width: \"\".concat(labelWidth, \"rem\")\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        className: classes.labelText,\n        children: label.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      style: {\n        marginLeft: \"\".concat(wordMarginLeft, \"rem\")\n      },\n      children: word\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_c = LabeledWord;\nLabeledWord.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(LabeledWord);\n\nvar _c;\n\n$RefreshReg$(_c, \"LabeledWord\");","map":{"version":3,"sources":["/home/daniel/reatret.net/react-app/src/components/CodeSwitching/LabeledWord.js"],"names":["React","PropTypes","withStyles","Typography","Paper","COLOR","es","en","other","styles","theme","root","marginLeft","spacing","marginRight","justifyContent","labelText","padding","marginBottom","textAlign","getMargin","w1","w2","Math","floor","LabeledWord","props","label","word","classes","labelWidth","length","labelMarginLeft","wordMarginLeft","backgroundColor","width","toUpperCase","propTypes","object","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,MAAMC,KAAK,GAAG;AACZC,EAAAA,EAAE,EAAE,SADQ;AAEZC,EAAAA,EAAE,EAAE,SAFQ;AAGZC,EAAAA,KAAK,EAAE;AAHK,CAAd;;AAMA,MAAMC,MAAM,GAAIC,KAAD,KAAY;AACzBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADR;AAEJC,IAAAA,WAAW,EAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd,CAFT;AAGJE,IAAAA,cAAc,EAAE;AAHZ,GADmB;AAMzBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAEP,KAAK,CAACG,OAAN,CAAc,CAAd,CADA;AAETK,IAAAA,YAAY,EAAER,KAAK,CAACG,OAAN,CAAc,CAAd,CAFL;AAGTM,IAAAA,SAAS,EAAE;AAHF;AANc,CAAZ,CAAf;;AAaA,SAASC,SAAT,CAAmBC,EAAnB,EAAuBC,EAAvB,EAA2B;AACzB,MAAID,EAAE,IAAIC,EAAV,EAAc;AACV,WAAOC,IAAI,CAACC,KAAL,CAAW,CAACH,EAAE,GAAGC,EAAN,IAAY,CAAvB,CAAP;AACH;;AACD,SAAO,CAAP;AACD;;AAED,SAASG,WAAT,CAAqBC,KAArB,EAA4B;AAAA,QAClBC,KADkB,GACOD,KADP,CAClBC,KADkB;AAAA,QACXC,IADW,GACOF,KADP,CACXE,IADW;AAAA,QACLC,OADK,GACOH,KADP,CACLG,OADK;AAE1B,QAAMC,UAAU,GAAGH,KAAK,CAACI,MAAN,GAAe,CAAlC;AACA,QAAMC,eAAe,GAAGZ,SAAS,CAACQ,IAAI,CAACG,MAAN,EAAcD,UAAd,CAAjC;AACA,QAAMG,cAAc,GAAGb,SAAS,CAACU,UAAU,GAAG,CAAd,EAAiBF,IAAI,CAACG,MAAtB,CAAhC;AACA,sBACE;AAAK,IAAA,SAAS,EAAEF,OAAO,CAAClB,IAAxB;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAE,CAAlB;AACO,MAAA,KAAK,EAAE;AACNuB,QAAAA,eAAe,EAAE7B,KAAK,CAACsB,KAAD,CADhB;AAENf,QAAAA,UAAU,YAAKoB,eAAL,QAFJ;AAGNG,QAAAA,KAAK,YAAKL,UAAL;AAHC,OADd;AAAA,6BAME,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAED,OAAO,CAACb,SAA5C;AAAA,kBACGW,KAAK,CAACS,WAAN;AADH;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AACY,MAAA,KAAK,EAAE;AAACxB,QAAAA,UAAU,YAAKqB,cAAL;AAAX,OADnB;AAAA,gBAEGL;AAFH;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;KAvBQH,W;AAyBTA,WAAW,CAACY,SAAZ,GAAwB;AACtBR,EAAAA,OAAO,EAAE5B,SAAS,CAACqC,MAAV,CAAiBC;AADJ,CAAxB;AAIA,eAAerC,UAAU,CAACO,MAAD,CAAV,CAAmBgB,WAAnB,CAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\n\nconst COLOR = {\n  es: \"#7986cb\",\n  en: \"#f06292\",\n  other: \"#43a047\"\n}\n\nconst styles = (theme) => ({\n  root: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    justifyContent: \"center\",\n  },\n  labelText: {\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    textAlign: \"center\",\n  }\n})\n\nfunction getMargin(w1, w2) {\n  if (w1 >= w2) {\n      return Math.floor((w1 - w2) / 2)\n  }\n  return 0\n}\n\nfunction LabeledWord(props) {\n  const { label, word, classes } = props\n  const labelWidth = label.length + 2\n  const labelMarginLeft = getMargin(word.length, labelWidth)\n  const wordMarginLeft = getMargin(labelWidth + 1, word.length)\n  return (\n    <div className={classes.root}>\n      <Paper elevation={4}\n             style={{\n              backgroundColor: COLOR[label],\n              marginLeft: `${labelMarginLeft}rem`,\n              width: `${labelWidth}rem`\n            }}>\n        <Typography variant=\"h6\" className={classes.labelText}>\n          {label.toUpperCase()}\n        </Typography>\n      </Paper>\n      <Typography variant=\"h5\"\n                  style={{marginLeft: `${wordMarginLeft}rem`}}>\n        {word}\n      </Typography>\n    </div>\n  )\n}\n\nLabeledWord.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(LabeledWord)\n"]},"metadata":{},"sourceType":"module"}