{"version":3,"sources":["components/App/404.js","components/App/TempDrawer.js","components/App/NavBar.js","images/kiwi.png","images/komodo.png","images/trex.png","utils.js","components/Home/Home.js","components/PrimeUlam/PrimeUlam.js","components/UTTower/UTTower.js","components/CodeSwitching/LabeledWord.js","components/CodeSwitching/CodeSwitching.js","components/App/App.js","serviceWorker.js","index.js"],"names":["NotFound","props","style","padding","Typography","variant","DRAWER_LIST","text","icon","link","divider","withStyles","list","minWidth","maxWidth","classes","Drawer","open","opened","onClose","toggle","tabIndex","role","onClick","onKeyDown","className","List","map","dItem","Divider","to","textDecoration","color","ListItem","button","ListItemIcon","ListItemText","primary","HideOnScroll","children","trigger","useScrollTrigger","Slide","appear","direction","in","theme","menuButton","marginRight","spacing","useState","openDrawer","setOpenDrawer","AppBar","position","Toolbar","IconButton","aria-label","state","createLinks","links","item","display","textAlign","margin","href","name","LINKS","fontSize","imgs","kiwi","trex","komodo","Links","createSnackBar","v","h","message","handleClose","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","id","createControl","fn","root","marginTop","spinningImage","animation","height","marginBottom","card","centerHolder","justifyContent","Math","trunc","random","length","imgIdx","setImgIdx","spinSpeed","setSpinSpeed","swapSpeed","setSwapSpeed","spinSnack","setSpinSnack","swapSnack","setSwapSnack","spinMsg","setSpinMsg","swapMsg","setSwapMsg","spin","useCallback","type","newSpeed","swap","useEffect","setInterval","newIdx","clearInterval","logo","spinStyle","useMemo","spinSnackBar","e","r","swapSnackBar","spinControl","swapControl","Container","Grid","container","justify","alignItems","xs","src","alt","sm","md","cardHolder","Card","elevation","CardContent","component","CardActions","Button","size","TSlider","Slider","createSliderWithTooltip","RENDER","getSpiralIdx","n","k","ceil","sqrt","t","m","pow","x","y","SLIDER_FIELDS","min","max","createSliders","fields","values","doms","i","field","value","push","sliderField","align","slideLabel","handleStyle","backgroundColor","secondaryColor","borderColor","trackStyle","slider","step","defaultValue","onAfterChange","PrimeUlam","Component","constructor","super","this","board","prevPrimes","backgroundRect","maxPrimeSize","maxStart","spiral","bgColor","shape","shapeSize","start","stageSize","primeSize","primes","notify","msg","layer","handleSlider","bind","makeSpiral","updateDimensions","then","setState","window","innerWidth","innerHeight","componentDidMount","updatePrimes","addEventListener","componentDidUpdate","prevProps","prevState","limit","newLimit","ns","primeThread","threads","spawn","input","done","ps","prevData","a","prevLen","diff","Array","fill","ans","Set","add","send","on","response","data","newBoard","newStart","primeJump","tempArr","num","len","rawHalf","half","floor","idx","spiralize","circles","squares","triangs","has","jx","jy","key","radius","listening","perfectDrawEnabled","width","sides","val","render","numberVars","shapes","batchDraw","title","stage","shadowBlur","ref","controlsLabel","controls","noValidate","autoComplete","cPickers","colorPicker","onChangeComplete","c","hex","FormControl","shapePicker","InputLabel","htmlFor","Select","onChange","event","target","inputProps","MenuItem","endingText","flexWrap","marginLeft","botHolder","setWidth","setHeight","ratio","opRatio","defaultWidth","defaultHeight","removeEventListener","Paper","allow","COLOR","es","en","other","getMargin","w1","w2","labelText","label","word","labelWidth","labelMarginLeft","wordMarginLeft","toUpperCase","DEFAULT_INPUT","labeledWords","overflowX","overflowY","border","borderRadius","buttonHolder","summary","inputText","setInputText","labeledData","setLabeledData","lastLabeled","setLastLabeled","loading","setLoading","isFirstRender","setIsFirstRender","axios","post","LinearProgress","words","labels","getLabeledWords","TextField","fullWidth","onKeyPress","ev","preventDefault","lg","createMuiTheme","typography","palette","main","secondary","flexGrow","Fragment","CssBaseline","exact","path","Home","UTTower","CodeSwitching","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4UAWeA,MARf,SAAkBC,GAChB,OACE,sBAAKC,MAAO,CAACC,QAAS,QAAtB,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,oBAA4C,uBAAK,uBACjD,cAACD,EAAA,EAAD,CAAYC,QAAQ,KAApB,qC,4LCQN,MAAMC,EAAc,CAClB,CACEC,KAAM,OACNC,KAAO,cAAC,IAAD,IACPC,KAAM,IACNC,SAAS,GAEX,CACEH,KAAM,qBACNC,KAAO,cAAC,IAAD,IACPC,KAAM,kBAER,CACEF,KAAM,eACNC,KAAO,cAAC,IAAD,IACPC,KAAM,eAqDKE,kBAjDA,CACbC,KAAM,CACJC,SAAU,oBACVC,SAAU,sBA8CCH,EAvBf,SAAoBV,GAAQ,MAClBc,EAAYd,EAAZc,QACR,OACE,8BACE,cAACC,EAAA,EAAD,CAAQC,KAAMhB,EAAMiB,OAAQC,QAASlB,EAAMmB,QAAO,GAAlD,SACE,qBACEC,SAAU,EACVC,KAAK,SACLC,QAAStB,EAAMmB,QAAO,GACtBI,UAAWvB,EAAMmB,QAAO,GAJ1B,SAKE,qBAAKK,UAAWV,EAAQH,KAAxB,SA3BN,cAACc,EAAA,EAAD,UACGpB,EAAYqB,KAAKC,IAChB,MAAMlB,EAAUkB,EAAMlB,QAAU,cAACmB,EAAA,EAAD,IAAa,KAC7C,OACE,eAAC,IAAD,CAAMC,GAAIF,EAAMnB,KACVP,MAAO,CAAC6B,eAAgB,OAAQC,MAAO,SAD7C,UAEE,eAACC,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,cAACC,EAAA,EAAD,UAAeP,EAAMpB,OACrB,cAAC4B,EAAA,EAAD,CAAcC,QAAST,EAAMrB,UAE9BG,IANwBkB,EAAMrB,sBC5B3C,SAAS+B,EAAarC,GAAQ,MACpBsC,EAAatC,EAAbsC,SACFC,EAAUC,cAChB,OACI,cAACC,EAAA,EAAD,CAAOC,QAAQ,EAAMC,UAAU,OAAOC,IAAKL,EAA3C,SACGD,IA0CM5B,mBArDCmC,IAAD,CACbC,WAAY,CACVC,YAAaF,EAAMG,QAAQ,OAmDhBtC,EAjCf,SAAgBV,GAAQ,MACdc,EAAYd,EAAZc,QADa,EAEemC,oBAAS,GAFxB,mBAEdC,EAFc,KAEFC,EAFE,KAQrB,OACE,cAACd,EAAD,2BAAkBrC,GAAlB,aACE,eAACoD,EAAA,EAAD,CAAQC,SAAS,SAAjB,UACG,eAACC,EAAA,EAAD,WACG,cAACC,EAAA,EAAD,CACE/B,UAAWV,EAAQgC,WACnBU,aAAW,cACXlC,QAAS,IAAM6B,GAAc,GAH/B,SAIE,cAAC,IAAD,MAEF,cAAC,IAAD,CAAMtB,GAAG,IAAI5B,MAAO,CAAC6B,eAAgB,OAAQC,MAAO,SAApD,SACE,cAAC5B,EAAA,EAAD,CAAYC,QAAQ,KAApB,8BAKL,cAAC,EAAD,CAAYa,OAAQiC,EAAY/B,OApBvC,SAAgBsC,GACd,MAAO,IAAMN,EAAcM,e,SCtChB,MAA0B,iCCA1B,MAA0B,mCCA1B,MAA0B,iC,0JCIzC,SAASC,GAAYC,GACnB,OAAOA,EAAMjC,KAAKkC,GAChB,sBACM3D,MAAO,CACL4D,QAAS,eACTC,UAAW,SACXC,OAAQ,OAJhB,SAME,oBAAGC,KAAMJ,EAAKpD,KAAd,UACA,cAAC+C,EAAA,EAAD,CAAYC,aAAYI,EAAKK,KAA7B,SACCL,EAAKrD,OAEN,8BACE,cAACJ,EAAA,EAAD,CAAYC,QAAQ,QAClBH,MAAO,CAAC6B,eAAgB,OAAQC,MAAO,SADzC,SAEC6B,EAAKK,aAbCL,EAAKK,Q,OCiBpB,MAqBMC,GAAQ,CACZ,CACED,KAAM,SACNzD,KAAM,iCACND,KAAO,cAAC,KAAD,CAAY4D,SAAS,WAE9B,CACEF,KAAM,SACNzD,KAAM,kFACND,KAAO,cAAC,KAAD,CAAY4D,SAAS,WAE9B,CACEF,KAAM,UACNzD,KAAM,iCACND,KAAO,cAAC,KAAD,CAAa4D,SAAS,YAI3BC,GAAO,CAACC,EAAMC,EAAMC,GAIpBC,GAAQd,GAAYQ,IAQ1B,SAASO,GAAeC,EAAGC,EAAGC,EAAS5D,EAAM6D,GAC3C,OACE,cAACC,EAAA,EAAD,CACEC,aAAc,CAACC,SAAUN,EAAGO,WAAYN,GACxC3D,KAAMA,EACNkE,iBAAkB,IAClBhE,QAAS2D,EACTM,aAAc,CAAC,mBAAoB,cACnCP,QAAS,sBAAMQ,GAAG,aAAT,SAAuBR,KANnBD,GAUnB,SAASU,GAAcpB,EAAMqB,GAC3B,MAAO,CACL,cAAC/B,EAAA,EAAD,CACEC,aAAA,UAAeS,EAAf,WACA3C,QAASgE,EAzBA,GAuBX,SAGE,cAAC,IAAD,KAHF,UAAoBrB,EAApB,MAKA,cAAC9D,EAAA,EAAD,UAA8B8D,GAA9B,UAAoBA,EAApB,MACA,cAACV,EAAA,EAAD,CACEC,aAAA,UAAeS,EAAf,WACA3C,QAASgE,EAhCA,GA8BX,SAGE,cAAC,KAAD,KAHF,UAAoBrB,EAApB,OAwHWvD,oBA/LCmC,IAAD,CACb0C,KAAM,CACJC,UAAW3C,EAAMG,QAAQ,IACzBc,UAAW,UAEb2B,cAAe,CACbC,UAAW,+BACXC,OAAQ,OACR9E,SAAU,OACVgD,QAAS,OACT+B,aAAc/C,EAAMG,QAAQ,KAE9B6C,KAAM,CACJ3F,QAAS2C,EAAMG,QAAQ,IAEzB8C,aAAc,CACZC,eAAgB,SAChBlC,QAAS,WA8KEnD,EA7Gf,SAAcV,GAAQ,MACZc,EAAYd,EAAZc,QADW,EAESmC,mBAAS+C,KAAKC,MAAMD,KAAKE,SAAW9B,GAAK+B,SAFlD,mBAEZC,EAFY,KAEJC,EAFI,OAGepD,mBANhB,GAGC,mBAGZqD,EAHY,KAGDC,EAHC,OAIetD,mBANhB,KAEC,mBAIZuD,EAJY,KAIDC,EAJC,OAKexD,oBAAS,GALxB,mBAKZyD,EALY,KAKDC,EALC,OAMe1D,oBAAS,GANxB,mBAMZ2D,EANY,KAMDC,EANC,OAOW5D,mBAAS,IAPpB,mBAOZ6D,EAPY,KAOHC,EAPG,OAQW9D,mBAAS,IARpB,mBAQZ+D,EARY,KAQHC,EARG,KAiBbC,EAAOC,uBAAaC,GACjB,KACL,IAAIC,EAAW,KAEbA,EA9DO,IA6DLD,EACSd,EAAY,EAEA,EAAZA,EAEbC,EAAac,GACbN,EAAW,kBAAD,OAAmBM,EAAnB,MACVV,GAAa,KAEd,CAACL,IAEEgB,EAAOH,uBAAaC,GACjB,KACL,IAAIC,EAAW,KAEbA,EA5EO,IA2ELD,EACSZ,EAAY,EAEA,EAAZA,EAEbC,EAAaY,GACbJ,EAAW,kBAAD,OAAmBI,EAAW,IAA9B,MACVR,GAAa,KAEd,CAACL,IAGJe,qBAAU,KAQR,MAAMnC,EAAKoC,aAPX,WACE,IAAIC,EAASrB,EAAS,EAClBqB,IAAWrD,GAAK+B,SAClBsB,EAAS,GAEXpB,EAAUoB,KAEoBjB,GAChC,MAAO,IAAMkB,cAActC,KAC1B,CAACoB,EAAWJ,IAEf,MAAMuB,EAAOvD,GAAKgC,GACZwB,EAAYC,mBAAQ,KA/FnB,CACLnC,UAAU,sBAAD,OA8F+BY,EA9F/B,eA8F2C,CAACA,IACjDwB,EAAeD,mBAAQ,IAC3BpD,GAAe,SAAU,OAAQqC,EAASJ,GAC3B,CAACqB,EAAGC,KAAgB,YAANA,GAAiBrB,GAAa,OAC3D,CAACG,EAASJ,IACNuB,EAAeJ,mBAAQ,IAC3BpD,GAAe,SAAU,QAASuC,EAASJ,GAC5B,CAACmB,EAAGC,KAAgB,YAANA,GAAiBnB,GAAa,OAC3D,CAACG,EAASJ,IACNsB,EAAcL,mBAAQ,IAAMxC,GAAc,OAAQ6B,IAAO,CAACA,IAC1DiB,EAAcN,mBAAQ,IAAMxC,GAAc,OAAQiC,IAAO,CAACA,IAChE,OACE,eAACc,EAAA,EAAD,CAAW5G,UAAWV,EAAQyE,KAA9B,UAEG,CAACuC,EAAcG,GAChB,eAACI,EAAA,EAAD,CAAMC,WAAS,EAACtF,QAAS,EAAGuF,QAAQ,SAASC,WAAW,SAAxD,UACE,cAACH,EAAA,EAAD,CAAMzE,MAAI,EAAC6E,GAAI,GAAIjH,UAAWV,EAAQgF,aAAtC,SAEA,qBAAK4C,IAAKf,EAAMnG,UAAWV,EAAQ2E,cAAekD,IAAI,OAAO1I,MAAO2H,MAEpE,cAACS,EAAA,EAAD,CAAMzE,MAAI,EAAC6E,GAAI,GAAIG,GAAI,GAAIC,GAAI,EAAGrH,UAAWV,EAAQgI,WAArD,SAEE,eAACC,EAAA,EAAD,CAAMvH,UAAWV,EAAQ+E,KAAMmD,UAAW,EAA1C,UACE,cAACC,EAAA,EAAD,UACE,eAAC9I,EAAA,EAAD,CAAY+I,UAAU,IAAI9I,QAAQ,QAAlC,kDAEE,uBAFF,yDAIE,uBAJF,YAKW,yCALX,SAQF,eAAC+I,EAAA,EAAD,CAAalJ,MAAO,CAAC8F,eAAgB,UAArC,UACImC,EACD,cAACkB,EAAA,EAAD,CAAQC,KAAK,QAAQjJ,QAAQ,YAAY2B,MAAM,YACvCT,QApFrB,WACEiF,EAdgB,GAehBE,EAdgB,KAehBM,EAAW,+BAAD,OAhBM,EAgBN,MACVJ,GAAa,IA+EF,mBAECwB,UAIR,cAACE,EAAA,EAAD,CAAMzE,MAAI,EAAC6E,GAAI,GAAf,SAAoBjE,c,iGC3L5B,MAAM8E,GAAUC,KAAOC,wBAAwBD,MAIzCE,GAAS,eAMf,SAASC,GAAaC,GACpB,MAAMC,EAAI5D,KAAK6D,MAAM7D,KAAK8D,KAAKH,GAAK,GAAK,GACzC,IAAII,EAAI,EAAIH,EAAI,EACZI,EAAIhE,KAAKiE,IAAIF,EAAG,GAEpB,OADAA,GAAK,EACDJ,GAAKK,EAAID,EACJ,CAACG,EAAGN,GAAGI,EAAEL,GAAIQ,EAAGP,IAEvBI,GAAKD,EAEHJ,GAAKK,EAAID,EACJ,CAACG,GAAIN,EAAGO,EAAGP,GAAKI,EAAIL,KAE3BK,GAAKD,EAEHJ,GAAKK,EAAID,EACJ,CAACG,EAASF,EAAEL,EAAPC,EAAWO,GAAIP,GAEtB,CAACM,EAAGN,EAAGO,EAAOH,EAAEL,EAAEI,EAAPH,KAiBpB,MAAMQ,GAAgB,CACpB,CACEnG,KAAM,wBACNmB,GAAI,YACJiF,IAAK,EACLC,IAAK,MAEP,CACErG,KAAM,gBACNmB,GAAI,YACJiF,IAAK,EACLC,IAAK,KAEP,CACErG,KAAM,qBACNmB,GAAI,QACJiF,IAAK,EACLC,IAAK,MAIT,SAASC,GAAcC,EAAQC,EAAQ3J,EAASwE,GAC9C,MAAMoF,EAAO,GACb,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAOrE,OAAQwE,IAAK,CACtC,MAAMC,EAAQJ,EAAOG,GACfE,EAAQJ,EAAOE,GACrBD,EAAKI,KACH,sBACEtJ,UAAWV,EAAQiK,YAEnB3F,GAAIwF,EAAM3G,KAHZ,UAII,cAAC9D,EAAA,EAAD,CAAY6K,MAAM,OAAOxJ,UAAWV,EAAQmK,WAAYlJ,MAAM,gBAA9D,mBAAkF6I,EAAM3G,KAAxF,gBAAoG4G,KACpG,cAACvB,GAAD,CACE4B,YAAa,CAACC,gBAAiBC,GAAgBC,YAAaD,IAC5DE,WAAY,CAACH,gBAAiBC,GAAgBC,YAAaD,IAC3D5J,UAAWV,EAAQyK,OACnBlB,IAAKO,EAAMP,IACXC,IAAKM,EAAMN,IACXkB,KAAM,EACNC,aAAcZ,EACda,cAAepG,EAAGsF,EAAMxF,QAXvBwF,EAAM3G,OAejB,OAAOyG,EAGT,MAAMiB,WAAkBC,YAEtBC,YAAY7L,GACV8L,MAAM9L,GAGN+L,KAAKC,MAAQ,KACbD,KAAKE,WAAa,KAClBF,KAAKG,eAAiB,KACtBH,KAAKI,aAJa,IAKlBJ,KAAKK,SANS,EAOdL,KAAKtI,MAAQ,CACX4I,OAAQ,KACRC,QAAS,QACTvK,MAAO,QACPwK,MArGS,EAsGTC,UAAW,EACXC,MAbY,EAcZC,UAAW,EACXC,UAdgB,IAehBC,OAAQ,KACRC,QAAQ,EACRC,IAAK,IAEPf,KAAKgB,MAAQ,KACbhB,KAAKiB,aAAejB,KAAKiB,aAAaC,KAAKlB,MAC3CA,KAAKmB,WAAanB,KAAKmB,WAAWD,KAAKlB,MACvCA,KAAKoB,iBAAmBpB,KAAKoB,iBAAiBF,KAAKlB,MAGrDc,OAAOC,EAAKM,GACVrB,KAAKsB,SAAS,CACZP,IAAKA,EACLD,QAAQ,GACPO,GAGLD,mBACEpB,KAAKsB,SAAS,CACZX,UAAW1G,KAAKC,MAjII,GAiIED,KAAKqE,IAAIiD,OAAOC,WAAYD,OAAOE,eACxDzB,KAAKmB,YAGVO,oBAAqB,MAAD,EACS1B,KAAKtI,MAAzBkJ,EADW,EACXA,UAAWF,EADA,EACAA,MAClBV,KAAK2B,aAAa1H,KAAKiE,IAAI0C,EAAYF,EAAO,IAC9CV,KAAKoB,mBACLG,OAAOK,iBAAiB,SAAU5B,KAAKoB,kBAGzCS,mBAAmBC,EAAWC,GAAY,MAAD,EACD/B,KAAKtI,MAApCkJ,EADgC,EAChCA,UAAWF,EADqB,EACrBA,MAAOD,EADc,EACdA,UACzB,GAAIG,IAAcmB,EAAUnB,UAC1B,GAAIZ,KAAKI,aAAeQ,EAAW,CACjCZ,KAAKI,aAAeQ,EACpB,MAAMoB,EAAQ/H,KAAKiE,IAAI0C,EAAYF,EAAO,GAC1CV,KAAK2B,aAAaK,QAElBhC,KAAKc,OAAOpD,GAAQsC,KAAKmB,YAG7B,GAAIT,GAASA,IAAUqB,EAAUrB,MAAO,CACtC,MAAMuB,EAAWhI,KAAKiE,IAAI8B,KAAKI,aAAeM,EAAO,GACpCzG,KAAKiE,IAAI8B,KAAKI,aAAeJ,KAAKK,SAAU,GAC9C4B,GACbjC,KAAKK,SAAWK,EAChBV,KAAK2B,aAAaM,IAElBjC,KAAKc,OAAOpD,IAASwE,IACnBlC,KAAKmB,YAAW,GAAO,MAIzBV,IAAcsB,EAAUtB,WAC1BT,KAAKc,OAAOpD,GAAQsC,KAAKmB,YAI7BQ,aAAaK,GACX,MAAMG,EAAcC,KAAQC,OAAM,CAACC,EAAOC,KA+BxCA,EAAK,CAACC,GA9BK,SAAqBR,EAAOS,GACrC,IAAIC,EAAI,KACJhC,EAAQ,EACZ,GAAI+B,GAAYA,EAASrI,OAAS4H,EAAO,CACvCU,EAAID,EACJ,MAAME,EAAUF,EAASrI,OACzBsG,EAAQiC,EAER,MAAMC,EAAOZ,EAAQW,EACrB,IAAK,IAAI/D,EAAI,EAAGA,EAAIgE,EAAMhE,IACxB8D,EAAE3D,MAAK,QAGT2D,EAAIG,MAAMb,GACVU,EAAE,IAAK,EACPA,EAAE,IAAK,EACPA,EAAEI,MAAK,EAAM,EAAGd,GAElB,MAAMe,EAAM,IAAIC,IAAI,IACpB,IAAI,IAAIpE,EAAI8B,EAAO9B,EAAI8D,EAAEtI,OAAQwE,IAAK,CAEpC,GADgB8D,EAAE9D,GACL,CACXmE,EAAIE,IAAIrE,GACR,IAAK,IAAIhB,EAAIgB,EAAEA,EAAGhB,EAAIoE,EAAOpE,GAAGgB,EAC9B8D,EAAE9E,IAAK,GAIb,MAAO,CAACiD,OAAQkC,EAAKN,SAAUC,GAEvBF,CAAGF,EAAMN,MAAOM,EAAMpC,iBAElCF,KAAKc,OAzMW,yBA0MhBqB,EAAYe,KAAK,CAAClB,MAAOA,EAAO9B,WAAYF,KAAKE,aAChDiD,GAAG,WAAYC,IACdpD,KAAKE,WAAakD,EAASZ,GAAGa,KAC9BrD,KAAKsB,SAAS,CACZT,OAAQuC,EAASZ,GAAG3B,SAClBqB,IAAOlC,KAAKmB,YAAW,SAI/BA,WAAWmC,EAAUC,GAAS,GAAQ,MAAD,EAEXvD,KAAKtI,MADtBgJ,EAD4B,EAC5BA,MAAOE,EADqB,EACrBA,UAAWD,EADU,EACVA,UAAWF,EADD,EACCA,UAC7BzK,EAF4B,EAE5BA,MAAO6K,EAFqB,EAErBA,OACd,IAAKF,IAAcC,IAAcF,IAC5BD,IAAcI,EACjB,OAAO,KAET,MAAM2C,EAAYvJ,KAAK6D,KAAK6C,EAAYC,GACxC,GAAI0C,EAAU,CACZtD,KAAKC,MAAQ,GACb,IAAK,IAAIrB,EAAI,EAAGA,EAAIgC,EAAWhC,IAAK,CAClC,MAAM6E,EAAUZ,MAAMjC,GACtBZ,KAAKC,MAAMlB,KAAK0E,KAGhBH,GAAYC,IAtMpB,SAAmBtD,EAAOyD,GACxB,MAAMpG,EAAOrD,KAAKiE,IAAI+B,EAAM7F,OAAQ,GAC9BuJ,EAAM1D,EAAM7F,OACZwJ,EAAUD,EAAM,EAChBE,EAAOF,EAAM,IAAM,EACb1J,KAAK6D,KAAK8F,GAAW,EACrB3J,KAAK6J,MAAMF,GACvB,IAAK,IAAIhF,EAAI,EAAGA,GAAKtB,EAAMsB,IAAK,CAC9B,MAAMmF,EAAMpG,GAAaiB,GACzBqB,EAAM8D,EAAI5F,EAAI0F,GAAME,EAAI3F,EAAIyF,GAAQH,EACpCA,GAAO,GA6LLM,CAAUhE,KAAKC,MAAOS,GAExB,MAAMuD,EAAU,GACVC,EAAU,GACVC,EAAU,GAChB,IAAK,IAAIhG,EAAI,EAAGA,EAAIyC,EAAWzC,IAC7B,IAAK,IAAIC,EAAI,EAAGA,EAAIwC,EAAWxC,IAC7B,GAAIyC,EAAOuD,IAAIpE,KAAKC,MAAM9B,GAAGC,IAAK,CAChC,MAAMiG,EAAKlG,EAAIqF,EACTc,EAAKlG,EAAIoF,EACTe,EAAG,UAAMpG,EAAN,YAAWC,GACpB6F,EAAQlF,KAAK,cAAC,KAAD,CAECZ,EAAGkG,EAAIjG,EAAGkG,EACVE,OAAQ/D,EACRqC,KAAM9M,EACNyO,WAAW,EACXC,oBAAoB,GALfH,IAMnBL,EAAQnF,KAAK,cAAC,KAAD,CAECZ,EAAGkG,EAAIjG,EAAGkG,EACVK,MAAOlE,EAAW7G,OAAQ6G,EAC1BqC,KAAM9M,EACNyO,WAAW,EACXC,oBAAoB,GALfH,IAMnBJ,EAAQpF,KAAK,cAAC,KAAD,CAECZ,EAAGkG,EAAIjG,EAAGkG,EACVM,MAAO,EAAGJ,OAAQ/D,EAClBqC,KAAM9M,EACNyO,WAAW,EACXC,oBAAoB,GALfH,IASzBvE,KAAKsB,SAAS,CACVhB,OAAQ,CACN,EAAU2D,EACV,EAAUC,EACV,EAAYC,KAMpBlD,aAAa5H,GACX,OAAQwL,IACN7E,KAAKsB,SAAS,CAAC,CAACjI,GAAKwL,KAIzBC,SAAU,MACD/P,EAAWiL,KAAK/L,MAAhBc,QADA,EAIyBiL,KAAKtI,MAF9BiJ,EAFA,EAEAA,UAAWC,EAFX,EAEWA,UAAWH,EAFtB,EAEsBA,UACtBC,EAHA,EAGAA,MAAOI,EAHP,EAGOA,OAAQC,EAHf,EAGeA,IAAKT,EAHpB,EAGoBA,OACpBtK,EAJA,EAIAA,MAAOuK,EAJP,EAIOA,QAASC,EAJhB,EAIgBA,MACjBuE,EAAa,CAACnE,EAAWH,EAAWC,GACpCsE,EAAS1E,EAASA,EAAOE,GAAS,GAExC,OADIR,KAAKgB,OAAOhB,KAAKgB,MAAMiE,YAEzB,sBAAKxP,UAAWV,EAAQmQ,MAAxB,UACE,cAAC9Q,EAAA,EAAD,CAAY6K,MAAM,SAAS5K,QAAQ,KAAnC,oCACA,cAAC0E,EAAA,EAAD,CACEC,aAAc,CAACC,SAAU,SAAUC,WAAY,QAC/CjE,KAAM6L,EACN3H,iBAAkB,IAClBhE,QAAS,KAAM6K,KAAKsB,SAAS,CAACR,QAAQ,KACtC1H,aAAc,CACZ,mBAAoB,cAEtBP,QAAS,sBAAMQ,GAAG,aAAT,SAAuB0H,MAClC,qBAAKtL,UAAWV,EAAQyE,KAAxB,SACE,eAAC,KAAD,CAAO/D,UAAWV,EAAQoQ,MACnBR,MAAOhE,EACP/G,OAAQ+G,EAFf,UAGE,cAAC,KAAD,UACE,cAAC,KAAD,CAAMxC,EAAG,EAAGC,EAAG,EACTuG,MAAOhE,EAAW/G,OAAQ+G,EAC1BmC,KAAMvC,EAAS6E,WAAY,MAEnC,eAAC,KAAD,CAAWC,IAAMA,GAAOrF,KAAKgB,MAAQqE,EAArC,UACE,cAAC,KAAD,CAAMlH,EAAG,EAAGC,EAAG,EACTuG,MAAOhE,EAAW/G,OAAQ+G,EAC1BmC,KAAMvC,EAAS6E,WAAY,IAChCJ,UAKP,qBAAKvP,UAAWV,EAAQgI,WAAxB,SACA,cAACC,EAAA,EAAD,CAAMvH,UAAWV,EAAQ+E,KAAMmD,UAAW,EAA1C,SACE,eAACC,EAAA,EAAD,WACE,cAAC9I,EAAA,EAAD,CAAYqB,UAAWV,EAAQuQ,cAAejR,QAAQ,KAAtD,sBACA,uBAAMoB,UAAWV,EAAQwQ,SAAUC,YAAU,EAACC,aAAa,MAA3D,UACGjH,GAAcH,GAAe0G,EAAYhQ,EAASiL,KAAKiB,cACxD,sBAAKxL,UAAWV,EAAQ2Q,SAAxB,UACE,uBAAMjQ,UAAWV,EAAQ4Q,YAAzB,UACE,cAACvR,EAAA,EAAD,CAAY6K,MAAM,OAAOjJ,MAAM,gBAA/B,8BACA,cAAC,KAAD,CACEP,UAAWV,EAAQ4Q,YACnB3P,MAAOuK,EACPqF,iBAAmBC,IACZA,GACL7F,KAAKsB,SAAS,CAACf,QAASsF,EAAEC,YAGhC,uBAAMrQ,UAAWV,EAAQ4Q,YAAzB,UACC,cAACvR,EAAA,EAAD,CAAY6K,MAAM,OAAOjJ,MAAM,gBAA/B,yBACA,cAAC,KAAD,CACGP,UAAWV,EAAQ4Q,YACnB3P,MAAOA,EACP4P,iBAAmBC,IACbA,GACJ7F,KAAKsB,SAAS,CAACtL,MAAO6P,EAAEC,KAAM9F,KAAKmB,qBAI7C,eAAC4E,GAAA,EAAD,CAAatQ,UAAWV,EAAQiR,YAAhC,UACE,cAACC,GAAA,EAAD,CAAYC,QAAQ,SAApB,mBACA,eAACC,GAAA,EAAD,CACErH,MAAOkB,KAAKtI,MAAM8I,MAClB4F,SAAWC,IACPrG,KAAKsB,SAAS,CAAC,CAAC+E,EAAMC,OAAOpO,MAAOmO,EAAMC,OAAOxH,SAErDyH,WAAY,CACVrO,KAAM,QACNmB,GAAI,UAPR,UASE,cAACmN,GAAA,EAAD,CAAU1H,MAAO,EAAjB,oBACA,cAAC0H,GAAA,EAAD,CAAU1H,MAAO,EAAjB,oBACA,cAAC0H,GAAA,EAAD,CAAU1H,MAAO,EAAjB,sCAQR,qBAAKrJ,UAAWV,EAAQ0R,WAAxB,SACE,eAACrS,EAAA,EAAD,CAAY+I,UAAU,IAAtB,UACE,wCADF,gDAC6D,uBAD7D,+BAE+B,IAC7B,mBAAGlF,KAAK,8CAAR,kBACC,IAJH,yEAK6C,IAC3C,mBAAGA,KAAK,4CAAR,mBAA6D,uBAN/D,6BAO6B,IAC3B,mBAAGA,KAAK,2CAAR,4BACC,IATH,mBAmFKtD,oBAlECmC,IAAD,CACboO,MAAO,CACLzL,UAAW,MACX1B,UAAW,SACX5D,QAAS2C,EAAMG,QAAQ,IAEzBuC,KAAM,CACJ1B,QAAS,OACT2E,WAAY,SACZzC,eAAgB,SAChBjC,UAAW,UAEboN,MAAO,CACL1L,UAAW,OAEbK,KAAM,CACJL,UAAW,OACXtF,QAAS,OACTU,SAAU,OACVC,SAAU,QAEZiI,WAAY,CACV/C,eAAgB,SAChBlC,QAAS,OACT4O,SAAU,QAEZpB,cAAe,GAEfC,SAAU,CACRzN,QAAS,OACT4O,SAAU,OACV1M,eAAgB,SAChB2M,WAAY7P,EAAMG,QAAQ,GAC1BD,YAAaF,EAAMG,QAAQ,IAE7B+H,YAAa,CACX2F,MAAO,OACP3M,OAAQlB,EAAMG,QAAQ,IAExB0O,YAAa,CACXlM,UAAW3C,EAAMG,QAAQ,GACzB0P,WAAY7P,EAAMG,QAAQ,GAC1BD,YAAaF,EAAMG,QAAQ,GAC3BnC,SAAU,SAEZ4Q,SAAU,CACR5N,QAAS,OACT2B,UAAW3C,EAAMG,QAAQ,IAE3BiI,WAAY,CACVrF,aAAc/C,EAAMG,QAAQ,IAE9B+O,YAAa,CACXvM,UAAW3C,EAAMG,QAAQ,IAE3BwP,WAAY,CACVhN,UAAW3C,EAAMG,QAAQ,GACzB4C,aAAc,OACd1F,QAAS2C,EAAMG,QAAQ,OAQZtC,CAAmBiL,I,UCzYnBjL,oBAtECmC,IAAD,CACb0C,KAAM,CACJiD,WAAY,SACZzC,eAAgB,SAChBjC,UAAW,UAEb6O,UAAW,CACT9O,QAAS,eACT2B,UAAW3C,EAAMG,QAAQ,IAE3BwP,WAAY,CACVhN,UAAW3C,EAAMG,QAAQ,GACzB4C,aAAc/C,EAAMG,QAAQ,QA0DjBtC,EAtDf,SAAiBV,GAAQ,MAAD,EACIiD,mBAAS,GADb,mBACfyN,EADe,KACRkC,EADQ,OAEM3P,mBAAS,GAFf,mBAEf0C,EAFe,KAEPkN,EAFO,KAItB,SAAS1F,IACP,MAAM2F,EAAQxF,OAAOC,WAAaD,OAAOE,YACnCuF,EAAUzF,OAAOE,YAAcF,OAAOC,WACtCyF,EAAmC,GAApB1F,OAAOC,WACtB0F,EAAqC,GAArB3F,OAAOE,YACvB7H,EAASmN,EAAQ,IAAMxF,OAAOE,YAAcsF,EAAQxF,OAAOE,YAAcuF,EACzErC,EAAQoC,EAAQ,IAAMxF,OAAOC,WAAauF,EAAQxF,OAAOC,WAAawF,EAC5EH,EAAS5M,KAAKqE,IAAIqG,EAAOsC,IACzBH,EAAU7M,KAAKsE,IAAI3E,EAAQsN,IAG7B1L,qBAAU,KACR4F,IACAG,OAAOK,iBAAiB,SAAUR,GAC3B,IAAMG,OAAO4F,oBAAoB,SAAU/F,KACjD,IAnBmB,MAqBdrM,EAAYd,EAAZc,QACR,OACE,sBAAKU,UAAWV,EAAQyE,KAAxB,UACE,cAAC4N,GAAA,EAAD,CAAO3R,UAAWV,EAAQ6R,UAAW3J,UAAW,EAAhD,SACE,wBACEiI,MAAM,WACNmC,MAAM,cACN1C,MAAOA,EACP/K,OAAQA,EACR+C,IAAI,sEAIR,qBAAKlH,UAAWV,EAAQ0R,WAAxB,SACE,eAACrS,EAAA,EAAD,CAAY+I,UAAU,IAAtB,qCAC2B,IACzB,mBAAGlF,KAAK,yBAAR,wBACC,IAHH,mCAGwC,IACtC,mBAAGA,KAAK,8EAAR,iCACA,uBALF,+BAKoC,IAClC,mBAAGA,KAAK,qEAAR,8BACC,IAPH,OAOY,IACV,mBAAGA,KAAK,uCAAR,4C,yCC3DV,MAAMqP,GAAQ,CACZC,GAAI,UACJC,GAAI,UACJC,MAAO,WAgBT,SAASC,GAAUC,EAAIC,GACrB,OAAID,GAAMC,EACC3N,KAAK6J,OAAO6D,EAAKC,GAAM,GAE3B,EAgCMjT,oBAjDCmC,IAAD,CACb0C,KAAM,CACJmN,WAAY7P,EAAMG,QAAQ,GAC1BD,YAAaF,EAAMG,QAAQ,GAC3B+C,eAAgB,UAElB6N,UAAW,CACT1T,QAAS2C,EAAMG,QAAQ,GACvB4C,aAAc/C,EAAMG,QAAQ,GAC5Bc,UAAW,aAwCApD,EA7Bf,SAAqBV,GAAQ,MACnB6T,EAAyB7T,EAAzB6T,MAAOC,EAAkB9T,EAAlB8T,KAAMhT,EAAYd,EAAZc,QACfiT,EAAaF,EAAM1N,OAAS,EAC5B6N,EAAkBP,GAAUK,EAAK3N,OAAQ4N,GACzCE,EAAiBR,GAAUM,EAAa,EAAGD,EAAK3N,QACtD,OACE,sBAAK3E,UAAWV,EAAQyE,KAAxB,UACE,cAAC4N,GAAA,EAAD,CAAOnK,UAAW,EACX/I,MAAO,CACNkL,gBAAiBkI,GAAMQ,GACvBnB,WAAW,GAAD,OAAKsB,EAAL,OACVtD,MAAM,GAAD,OAAKqD,EAAL,QAJb,SAME,cAAC5T,EAAA,EAAD,CAAYC,QAAQ,KAAKoB,UAAWV,EAAQ8S,UAA5C,SACGC,EAAMK,kBAGX,cAAC/T,EAAA,EAAD,CAAYC,QAAQ,KACRH,MAAO,CAACyS,WAAW,GAAD,OAAKuB,EAAL,QAD9B,SAEGH,U,0CClCT,MAYMtP,GAAQd,GAZA,CACZ,CACEO,KAAM,cACNzD,KAAM,2CACND,KAAO,cAAC,KAAD,CAAU4D,SAAS,WAE5B,CACEF,KAAM,cACNzD,KAAM,qFACND,KAAO,cAAC,KAAD,CAAW4D,SAAS,aAKzBgQ,GAAgB,4CAsIPzT,oBAnICmC,IAAD,CACb0C,KAAM,CACJC,UAAW3C,EAAMG,QAAQ,IAE3BoR,aAAc,CACZvQ,QAAS,OACT2E,WAAY,SACZ6L,UAAW,OACXC,UAAW,SACXC,OAAQ,oBACRC,aAAc,MACdtU,QAAS2C,EAAMG,QAAQ,IAEzByR,aAAc,CACZ5Q,QAAS,OACTkC,eAAgB,UAElB2O,QAAS,CACP5Q,UAAW,SACX5D,QAAS2C,EAAMG,QAAQ,IAEzBW,MAAO,CACLE,QAAS,OACTkC,eAAgB,aA4GLrF,EAxGf,SAAuBV,GAAQ,MAAD,EACMiD,mBAASkR,IADf,mBACrBQ,EADqB,KACVC,EADU,OAEU3R,mBAAS,MAFnB,mBAErB4R,EAFqB,KAERC,EAFQ,OAGU7R,mBAAS,MAHnB,mBAGrB8R,EAHqB,KAGRC,EAHQ,OAIE/R,oBAAS,GAJX,mBAIrBgS,EAJqB,KAIZC,EAJY,OAKcjS,oBAAS,GALvB,mBAKrBkS,EALqB,KAKNC,EALM,KAOtBxB,EAAYzM,uBAAY,KACvBwN,GAAaI,IAAgBJ,IAClCK,EAAeL,GACfO,GAAW,GACXG,KAAMC,KAxCM,sCAwCQ,CAAChV,KAAMqU,IAAYvH,MAAM+B,IAC3C2F,EAAe3F,EAASC,MACxB8F,GAAW,SAEZ,CAACP,EAAWI,IAGfxN,qBAAU,KACJ4N,IACFvB,IACAwB,GAAiB,MAElB,CAACxB,EAAWuB,IAvBa,MAyBpBrU,EAAYd,EAAZc,QACFsT,EAAevM,mBAAQ,IAYvBoN,EAAgB,cAACM,GAAA,EAAD,IACb,qBAAK/T,UAAWV,EAAQsT,aAAxB,SAZP,WACA,IAAKS,GAAeA,EAAY1O,OAAS,EAAG,OAAO,KACjD,MAAMiO,EAAe,GACrB,IAAK,IAAIzJ,EAAI,EAAGA,EAAIkK,EAAYW,MAAMrP,OAAQwE,IAC5CyJ,EAAatJ,KACX,cAAC,GAAD,CACagJ,KAAMe,EAAYW,MAAM7K,GACxBkJ,MAAOgB,EAAYY,OAAO9K,IAFrBA,IAItB,OAAOyJ,EAGqCsB,MAC7C,CAACT,EAASJ,EAAa/T,EAAQsT,eAClC,OACE,eAAChM,EAAA,EAAD,CAAW5G,UAAWV,EAAQyE,KAA9B,UACC,cAACT,EAAA,EAAD,CACCC,aAAc,CAACC,SAAU,SAAUC,WAAY,QAC/CjE,KAAMiU,EACN9P,aAAc,CAAC,mBAAoB,cACnCP,QAAQ,yBACR,eAACyD,EAAA,EAAD,CAAMC,WAAS,EAACtF,QAAS,EAAGuF,QAAQ,SAASC,WAAW,SAAxD,UACE,eAACH,EAAA,EAAD,CAAMzE,MAAI,EAAC6E,GAAI,GAAf,UACE,cAACtI,EAAA,EAAD,CAAY6K,MAAM,SAAS5K,QAAQ,KAAnC,oDACA,eAACD,EAAA,EAAD,CAAY6K,MAAM,SAAS5K,QAAQ,YAAnC,eAAkD,IAChD,mBAAG4D,KAAK,4BAAR,6BADF,wBAMF,cAACqE,EAAA,EAAD,CAAMzE,MAAI,EAAC6E,GAAI,GAAII,GAAI,GAAvB,SACE,cAAC8M,GAAA,EAAD,CACE9B,MAAM,aAAapI,aAAc0I,GAAe/T,QAAQ,WACxD2D,OAAO,SAAS6R,WAAS,EACzBzD,SAAWpK,GAAM6M,EAAa7M,EAAEsK,OAAOxH,OACvCgL,WAAaC,IACI,UAAXA,EAAGxF,MACLwF,EAAGC,iBACHnC,UAKR,cAACvL,EAAA,EAAD,CAAMzE,MAAI,EAAC6E,GAAI,EAAGI,GAAI,EAAGrH,UAAWV,EAAQ2T,aAA5C,SACE,cAACrL,EAAA,EAAD,CAAQhJ,QAAQ,YAAY2B,MAAM,YAAYT,QAASsS,EAAvD,qBAIF,cAACvL,EAAA,EAAD,CAAMzE,MAAI,EAAC6E,GAAI,GAAf,SACG2L,IAEH,cAAC/L,EAAA,EAAD,CAAMzE,MAAI,EAAC6E,GAAI,GAAII,GAAI,GAAImN,GAAI,EAA/B,SACE,cAAC7C,GAAA,EAAD,CAAO3R,UAAWV,EAAQ4T,QAAS1L,UAAW,EAA9C,SACE,eAAC7I,EAAA,EAAD,CAAY+I,UAAU,IAAG9I,QAAQ,QAAjC,oDAC0C,IACxC,mBAAG4D,KAAK,uCAAR,4BAFF,kXAYJ,cAACqE,EAAA,EAAD,CAAMzE,MAAI,EAAC6E,GAAI,GAAIjH,UAAWV,EAAQ6C,MAAtC,SACGa,cC/IX,MAQM4G,GAAiB,UACjBvI,GAAQoT,YACZ,CACEC,WAAY,CACV/R,SAAU,IAEZgS,QAAS,CACP/O,KAAM,OACNhF,QAAS,CACPgU,KAVa,WAYfC,UAAW,CACTD,KAAMhL,OA0BC1K,oBA9CCmC,IAAD,CACX0C,KAAM,CACJ+Q,SAAU,MA4CD5V,EApBf,SAAaV,GAAQ,MACXc,EAAYd,EAAZc,QACR,OACE,cAAC,IAAMyV,SAAP,UACE,eAAC,IAAD,CAAkB1T,MAAOA,GAAzB,UACE,cAAC2T,EAAA,EAAD,IACA,cAAC,EAAD,IACA,eAAC,IAAD,CAAQhV,UAAWV,EAAQyE,KAA3B,UACE,cAAC,IAAD,CAAOkR,OAAK,EAACC,KAAK,IAAIxN,UAAWyN,KACjC,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,aAAaxN,UAAWyC,KAC1C,cAAC,IAAD,CAAO8K,OAAK,EAACC,KAAK,WAAWxN,UAAW0N,KACxC,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,iBAAiBxN,UAAW2N,KAC9C,cAAC,IAAD,CAAO3N,UAAWnJ,eCrCR+W,QACW,cAA7BxJ,OAAOyJ,SAASC,UAEe,UAA7B1J,OAAOyJ,SAASC,UAEhB1J,OAAOyJ,SAASC,SAASC,MACvB,2DCXNC,IAASrG,OACP,cAAC,IAAD,UACC,cAAC,GAAD,MAEFsG,SAASC,eAAe,SDsHnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnK,MAAKoK,IACjCA,EAAaC,kB","file":"static/js/main.04792777.chunk.js","sourcesContent":["import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nfunction NotFound(props) {\n  return (\n    <div style={{padding: '10vw'}}>\n      <Typography variant=\"h1\">404 :(</Typography><br/><br/>\n      <Typography variant=\"h2\">nothing to see here</Typography>\n    </div>)\n}\n\nexport default NotFound\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport SpiralIcon from '@material-ui/icons/ScatterPlot'\nimport HomeIcon from '@material-ui/icons/Home'\nimport CodeSwitchIcon from '@material-ui/icons/Language'\n\n// List of all Drawer Items\nconst DRAWER_LIST = [\n  {\n    text: \"Home\",\n    icon: (<HomeIcon/>),\n    link: \"/\",\n    divider: true\n  },\n  {\n    text: \"Code-Switching RNN\",\n    icon: (<CodeSwitchIcon/>),\n    link: \"/codeswitching\"\n  },\n  {\n    text: \"Ulam Spirals\",\n    icon: (<SpiralIcon/>),\n    link: \"/primeulam\"\n  },\n]\n\nconst styles = {\n  list: {\n    minWidth: 'calc(10ch + 10vw)',\n    maxWidth: 'calc(20ch + 10vw)',\n  }\n}\n\nfunction createList(dList) {\n  return (\n    <List>\n      {DRAWER_LIST.map((dItem) => {\n        const divider = dItem.divider ? <Divider/> : null\n        return (\n          <Link to={dItem.link} key={dItem.text}\n                style={{textDecoration: 'none', color: 'white'}}>\n            <ListItem button>\n              <ListItemIcon>{dItem.icon}</ListItemIcon>\n              <ListItemText primary={dItem.text}/>\n            </ListItem>\n            {divider}\n          </Link>)\n      })}\n    </List>\n  )\n}\n\nfunction TempDrawer(props) {\n  const { classes } = props\n  return (\n    <div>\n      <Drawer open={props.opened} onClose={props.toggle(false)}>\n        <div\n          tabIndex={0}\n          role=\"button\"\n          onClick={props.toggle(false)}\n          onKeyDown={props.toggle(false)}>\n          <div className={classes.list}>\n            {createList(DRAWER_LIST)}\n          </div>\n        </div>\n      </Drawer>\n    </div>\n  )\n}\n\nTempDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(TempDrawer)\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger'\nimport Slide from '@material-ui/core/Slide'\nimport TempDrawer from './TempDrawer'\n\nconst styles = (theme) => ({\n  menuButton: {\n    marginRight: theme.spacing(2),\n  }\n})\n\nfunction HideOnScroll(props) {\n  const { children } = props;\n  const trigger = useScrollTrigger();\n  return (\n      <Slide appear={true} direction=\"down\" in={!trigger}>\n        {children}\n      </Slide>\n    );\n}\n\nHideOnScroll.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nfunction NavBar(props) {\n  const { classes } = props\n  const [openDrawer, setOpenDrawer] = useState(false)\n\n  function toggle(state) {\n    return () => setOpenDrawer(state)\n  }\n\n  return (\n    <HideOnScroll {...props}>\n      <AppBar position=\"sticky\">\n         <Toolbar>\n            <IconButton\n              className={classes.menuButton}\n              aria-label=\"Open drawer\"\n              onClick={() => setOpenDrawer(true)}>\n              <MenuIcon/>\n            </IconButton>\n            <Link to='/' style={{textDecoration: 'none', color: 'white'}}>\n              <Typography variant=\"h5\">\n              reatret.net\n              </Typography>\n            </Link>\n         </Toolbar>\n         <TempDrawer opened={openDrawer} toggle={toggle}/>\n      </AppBar>\n    </HideOnScroll>)\n}\n\nNavBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(NavBar)\n","export default __webpack_public_path__ + \"static/media/kiwi.b06abc58.png\";","export default __webpack_public_path__ + \"static/media/komodo.0a394bc5.png\";","export default __webpack_public_path__ + \"static/media/trex.846cb993.png\";","import React from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\n\nfunction createLinks(links) {\n  return links.map((item) => (\n    <span key={item.name}\n          style={{\n            display: \"inline-block\",\n            textAlign: \"center\",\n            margin: '1vw'\n          }}>\n      <a href={item.link}>\n      <IconButton aria-label={item.name}>\n      {item.icon}\n      </IconButton>\n      <div>\n        <Typography variant=\"body2\"\n          style={{textDecoration: 'none', color: 'white'}}>\n        {item.name}\n        </Typography>\n      </div>\n      </a>\n    </span>)\n  )\n}\n\nexport { createLinks }","import React, { useState, useEffect, useMemo, useCallback } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport Container from '@material-ui/core/Container'\nimport kiwi from '../../images/kiwi.png'\nimport trex from '../../images/komodo.png'\nimport komodo from '../../images/trex.png'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Grid from '@material-ui/core/Grid'\nimport IconButton from '@material-ui/core/IconButton'\nimport Button from '@material-ui/core/Button'\nimport RWIcon from '@material-ui/icons/FastRewind'\nimport FFIcon from '@material-ui/icons/FastForward'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport ResumeIcon from '@material-ui/icons/Description'\nimport ContactIcon from '@material-ui/icons/Email'\nimport Typography from '@material-ui/core/Typography'\nimport { createLinks } from '../../utils'\nimport './Home.css'\n\nconst styles = (theme) => ({\n  root: {\n    marginTop: theme.spacing(16),\n    textAlign: \"center\"\n  },\n  spinningImage: {\n    animation: \"logo-spin infinite 3s linear\",\n    height: \"25vh\",\n    maxWidth: \"90vw\",\n    display: \"flex\",\n    marginBottom: theme.spacing(12),\n  },\n  card: {\n    padding: theme.spacing(1),\n  },\n  centerHolder: {\n    justifyContent: \"center\",\n    display: \"flex\"\n  },\n})\n\nconst LINKS = [\n  {\n    name: \"GitHub\",\n    link: \"https://github.com/danielloera\",\n    icon: (<GitHubIcon fontSize=\"large\"/>)\n  },\n  {\n    name: \"Resume\",\n    link: \"https://docs.google.com/document/d/18sWdFkdfeEGWD7KpvNJ7I25CUm_n0n1hrINJsOv3VzA\",\n    icon: (<ResumeIcon fontSize=\"large\"/>)\n  },\n  {\n    name: \"Contact\",\n    link: \"mailto:danny.reatret@gmail.com\",\n    icon: (<ContactIcon fontSize=\"large\"/>)\n  },\n]\n\nconst imgs = [kiwi, trex, komodo]\n\nconst FASTER = 0\nconst SLOWER = 1\nconst Links = createLinks(LINKS)\n\nfunction spinImgAt(secs) {\n  return {\n    animation: `logo-spin infinite ${secs}s linear`\n  }\n}\n\nfunction createSnackBar(v, h, message, open, handleClose) {\n  return (\n    <Snackbar key={h}\n      anchorOrigin={{vertical: v, horizontal: h}}\n      open={open}\n      autoHideDuration={3000}\n      onClose={handleClose}\n      ContentProps={{'aria-describedby': 'message-id'}}\n      message={<span id=\"message-id\">{message}</span>}/>\n  )\n}\n\nfunction createControl(name, fn) {\n  return [\n    <IconButton key={`${name}1`}\n      aria-label={`${name} Slower`}\n      onClick={fn(SLOWER)}>\n      <RWIcon/>\n    </IconButton>,\n    <Typography key={`${name}2`}>{name}</Typography>,\n    <IconButton key={`${name}3`}\n      aria-label={`${name} Faster`}\n      onClick={fn(FASTER)}>\n      <FFIcon/>\n    </IconButton>\n  ]\n}\n\nconst defaultSpin = 3\nconst defaultSwap = 3000\n\nfunction Home(props) {\n  const { classes } = props\n  const [imgIdx, setImgIdx] = useState(Math.trunc(Math.random() * imgs.length))\n  const [spinSpeed, setSpinSpeed] = useState(defaultSpin)\n  const [swapSpeed, setSwapSpeed] = useState(defaultSwap)\n  const [spinSnack, setSpinSnack] = useState(false)\n  const [swapSnack, setSwapSnack] = useState(false)\n  const [spinMsg, setSpinMsg] = useState('')\n  const [swapMsg, setSwapMsg] = useState('')\n\n  function reset() {\n    setSpinSpeed(defaultSpin)\n    setSwapSpeed(defaultSwap)\n    setSpinMsg(`Spinning and swapping every ${defaultSpin}s`)\n    setSpinSnack(true)\n  }\n\n  const spin = useCallback((type) => {\n    return () => {\n      let newSpeed = null\n      if (type === FASTER) {\n        newSpeed = spinSpeed / 2\n      } else {\n        newSpeed = spinSpeed * 2\n      }\n      setSpinSpeed(newSpeed)\n      setSpinMsg(`Spinning every ${newSpeed}s`)\n      setSpinSnack(true)\n    }\n  }, [spinSpeed])\n\n  const swap = useCallback((type) => {\n    return () => {\n      let newSpeed = null\n      if (type === FASTER) {\n        newSpeed = swapSpeed / 2\n      } else {\n        newSpeed = swapSpeed * 2\n      }\n      setSwapSpeed(newSpeed)\n      setSwapMsg(`Swapping every ${newSpeed / 1000}s`)\n      setSwapSnack(true)\n    }\n  }, [swapSpeed])\n\n  // Update swap interval on imageChange/speedChange\n  useEffect(() => {\n    function imgTick() {\n      let newIdx = imgIdx + 1\n      if (newIdx === imgs.length) {\n        newIdx = 0\n      }\n      setImgIdx(newIdx)\n    }\n    const id = setInterval(imgTick, swapSpeed)\n    return () => clearInterval(id)\n  }, [swapSpeed, imgIdx])\n\n  const logo = imgs[imgIdx]\n  const spinStyle = useMemo(() => spinImgAt(spinSpeed), [spinSpeed])\n  const spinSnackBar = useMemo(() => (\n    createSnackBar('bottom', 'left', spinMsg, spinSnack,\n                   (e, r) => {if(r === 'timeout') setSpinSnack(false)})),\n    [spinMsg, spinSnack])\n  const swapSnackBar = useMemo(() => (\n    createSnackBar('bottom', 'right', swapMsg, swapSnack,\n                   (e, r) => {if(r === 'timeout') setSwapSnack(false)})),\n    [swapMsg, swapSnack])\n  const spinControl = useMemo(() => createControl(\"Spin\", spin), [spin])\n  const swapControl = useMemo(() => createControl(\"Swap\", swap), [swap])\n  return (\n    <Container className={classes.root}>\n      {/* Snackbars */}\n      {[spinSnackBar, swapSnackBar]}\n      <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\n        <Grid item xs={12} className={classes.centerHolder}>\n        {/* Spinning Image */}\n        <img src={logo} className={classes.spinningImage} alt=\"logo\" style={spinStyle}/>\n        </Grid>\n        <Grid item xs={12} sm={10} md={6} className={classes.cardHolder}>\n          {/* Control Card */}\n          <Card className={classes.card} elevation={5}>\n            <CardContent>\n              <Typography component=\"p\" variant=\"body1\">\n                Hi, I'm Daniel. I love making things.\n                <br/>\n                You can see some of them on this site or linked below.\n                <br/>\n                Have fun <i>spinning</i>.\n              </Typography>\n            </CardContent>\n            <CardActions style={{justifyContent: 'center'}}>\n               {spinControl}\n               <Button size=\"small\" variant=\"contained\" color=\"secondary\"\n                       onClick={reset}>Reset</Button>\n               {swapControl}\n            </CardActions>\n          </Card>\n        </Grid>\n        <Grid item xs={12}>{Links}</Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nHome.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(Home)\n","import React, { Component } from 'react'\nimport { secondaryColor } from '../App/App'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Stage, FastLayer, Rect, Circle, RegularPolygon } from 'react-konva'\nimport { HuePicker } from 'react-color'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Select from '@material-ui/core/Select'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport FormControl from '@material-ui/core/FormControl'\nimport Typography from '@material-ui/core/Typography'\nimport threads from 'threads'\nimport Slider from 'rc-slider'\nimport 'rc-slider/assets/index.css'\nconst TSlider = Slider.createSliderWithTooltip(Slider)\n\nconst SCREEN_PERCENTAGE = 0.80\nconst CALC_PRIMES = \"Calculating Primes...\"\nconst RENDER = \"Rendering...\"\n\nconst CIRCLE = 0\nconst SQUARE = 1\nconst TRIANGLE = 2\n\nfunction getSpiralIdx(n) {\n  const k = Math.ceil((Math.sqrt(n) - 1) / 2)\n  let t = 2 * k + 1\n  let m = Math.pow(t, 2)\n  t -= 1\n  if (n >= m - t) {\n    return {x: k-(m-n), y: k}\n  } else {\n    m -= t\n  }\n  if (n >= m - t) {\n    return {x: -k, y: k - (m - n)}\n  } else {\n    m -= t\n  }\n  if (n >= m - t) {\n    return {x: -k + (m-n), y: -k}\n  }\n  return {x: k, y: -k+(m-n-t)}\n}\n\nfunction spiralize(board, num) {\n  const size = Math.pow(board.length, 2)\n  const len = board.length\n  const rawHalf = len / 2\n  const half = len % 2 === 0 ?\n              Math.ceil(rawHalf) - 1:\n              Math.floor(rawHalf)\n  for (let i = 1; i <= size; i++) {\n    const idx = getSpiralIdx(i)\n    board[idx.x + half][idx.y + half] = num\n    num += 1\n  }\n}\n\nconst SLIDER_FIELDS = [\n  {\n    name: \"Grid\\xa0Size\\xa0(NxN)\",\n    id: \"primeSize\",\n    min: 5,\n    max: 1001,\n  },\n  {\n    name: \"Shape\\xa0Size\",\n    id: \"shapeSize\",\n    min: 1,\n    max: 100,\n  },\n  {\n    name: \"Starting\\xa0Number\",\n    id: \"start\",\n    min: 1,\n    max: 500,\n  },\n]\n\nfunction createSliders(fields, values, classes, fn) {\n  const doms = []\n  for (let i = 0; i < fields.length; i++) {\n    const field = fields[i]\n    const value = values[i]\n    doms.push((\n      <div\n        className={classes.sliderField}\n        key={field.name}\n        id={field.name}>\n          <Typography align=\"left\" className={classes.slideLabel} color=\"textSecondary\">{`${field.name}:\\xa0${value}`}</Typography>\n          <TSlider\n            handleStyle={{backgroundColor: secondaryColor, borderColor: secondaryColor}}\n            trackStyle={{backgroundColor: secondaryColor, borderColor: secondaryColor}}\n            className={classes.slider}\n            min={field.min}\n            max={field.max}\n            step={1}\n            defaultValue={value}\n            onAfterChange={fn(field.id)}/>\n      </div>\n    ))\n  }\n  return doms\n}\n\nclass PrimeUlam extends Component {\n\n  constructor(props) {\n    super(props)\n    const start = 1\n    const primeSize = 101\n    this.board = null\n    this.prevPrimes = null\n    this.backgroundRect = null\n    this.maxPrimeSize = primeSize\n    this.maxStart = start\n    this.state = {\n      spiral: null,\n      bgColor: \"white\",\n      color: \"black\",\n      shape: CIRCLE,\n      shapeSize: 5,\n      start: start,\n      stageSize: 0,\n      primeSize: primeSize,\n      primes: null,\n      notify: false,\n      msg: '',\n    }\n    this.layer = null\n    this.handleSlider = this.handleSlider.bind(this)\n    this.makeSpiral = this.makeSpiral.bind(this)\n    this.updateDimensions = this.updateDimensions.bind(this)\n  }\n\n  notify(msg, then) {\n    this.setState({\n      msg: msg,\n      notify: true\n    }, then)\n  }\n\n  updateDimensions() {\n    this.setState({\n      stageSize: Math.trunc(Math.min(window.innerWidth, window.innerHeight) * SCREEN_PERCENTAGE)\n    }, this.makeSpiral)\n  }\n\n  componentDidMount() {\n    const {primeSize, start} = this.state\n    this.updatePrimes(Math.pow(primeSize + start, 2))\n    this.updateDimensions()\n    window.addEventListener(\"resize\", this.updateDimensions)\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {primeSize, start, shapeSize} = this.state\n    if (primeSize !== prevState.primeSize) {\n      if (this.maxPrimeSize < primeSize) {\n        this.maxPrimeSize = primeSize\n        const limit = Math.pow(primeSize + start, 2)\n        this.updatePrimes(limit)\n      } else {\n        this.notify(RENDER, this.makeSpiral)\n      }\n    }\n    if (start && start !== prevState.start) {\n      const newLimit = Math.pow(this.maxPrimeSize + start, 2)\n      const oldLimit = Math.pow(this.maxPrimeSize + this.maxStart, 2)\n      if (oldLimit < newLimit) {\n        this.maxStart = start\n        this.updatePrimes(newLimit)\n      } else {\n        this.notify(RENDER, (ns)=> {\n          this.makeSpiral(false, true)\n        })\n      }\n    }\n    if (shapeSize !== prevState.shapeSize) {\n      this.notify(RENDER, this.makeSpiral)\n    }\n  }\n\n  updatePrimes(limit) {\n    const primeThread = threads.spawn((input, done) => {\n      const ps = function primesSieve(limit, prevData) {\n        let a = null\n        let start = 0\n        if (prevData && prevData.length < limit) {\n          a = prevData\n          const prevLen = prevData.length\n          start = prevLen\n          // Limit MUST be greater then prev data len\n          const diff = limit - prevLen\n          for (let i = 0; i < diff; i++) {\n            a.push(true)\n          }\n        } else {\n          a = Array(limit)\n          a[0] = false\n          a[1] = false\n          a.fill(true, 2, limit)\n        }\n        const ans = new Set([])\n        for(let i = start; i < a.length; i++) {\n          const isPrime = a[i]\n          if (isPrime) {\n            ans.add(i)\n            for (let n = i*i; n < limit; n+=i) {\n              a[n] = false\n            }\n          }\n        }\n        return {primes: ans, prevData: a}\n      }\n      done({ps: ps(input.limit, input.prevPrimes)})\n    })\n    this.notify(CALC_PRIMES)\n    primeThread.send({limit: limit, prevPrimes: this.prevPrimes})\n    .on('message', (response) => {\n      this.prevPrimes = response.ps.data\n      this.setState({\n        primes: response.ps.primes\n      }, (ns)=>{ this.makeSpiral(true) })\n    })\n  }\n\n  makeSpiral(newBoard, newStart=false) {\n    const {start, primeSize, stageSize, shapeSize,\n           color, primes} = this.state\n    if (!stageSize || !primeSize || !start ||\n        !shapeSize || !primes) {\n      return null\n    }\n    const primeJump = Math.ceil(stageSize / primeSize)\n    if (newBoard) {\n      this.board = []\n      for (let i = 0; i < primeSize; i++) {\n        const tempArr = Array(primeSize)\n        this.board.push(tempArr)\n      }\n    }\n    if (newBoard || newStart) {\n      spiralize(this.board, start)\n    }\n    const circles = []\n    const squares = []\n    const triangs = []\n    for (let x = 0; x < primeSize; x++) {\n      for (let y = 0; y < primeSize; y++) {\n        if (primes.has(this.board[x][y])) {\n          const jx = x * primeJump\n          const jy = y * primeJump\n          const key = `${x} ${y}`\n          circles.push(<Circle\n                        key={key}\n                        x={jx} y={jy}\n                        radius={shapeSize}\n                        fill={color}\n                        listening={false}\n                        perfectDrawEnabled={false}/>)\n          squares.push(<Rect\n                        key={key}\n                        x={jx} y={jy}\n                        width={shapeSize} height={shapeSize}\n                        fill={color}\n                        listening={false}\n                        perfectDrawEnabled={false}/>)\n          triangs.push(<RegularPolygon\n                        key={key}\n                        x={jx} y={jy}\n                        sides={3} radius={shapeSize}\n                        fill={color}\n                        listening={false}\n                        perfectDrawEnabled={false}/>)\n        }\n      }\n    }\n    this.setState({\n        spiral: {\n          [CIRCLE]: circles,\n          [SQUARE]: squares,\n          [TRIANGLE]: triangs,\n        }\n      }\n    )\n  }\n\n  handleSlider(id){\n    return (val) => {\n      this.setState({[id]: val})\n    }\n  }\n\n  render() {\n    const {classes} = this.props\n    const {stageSize, primeSize, shapeSize,\n           start, notify, msg, spiral,\n           color, bgColor, shape} = this.state\n    const numberVars = [primeSize, shapeSize, start]\n    const shapes = spiral ? spiral[shape] : []\n    if (this.layer) this.layer.batchDraw()\n    return (\n      <div className={classes.title}>\n        <Typography align=\"center\" variant=\"h5\"> Ulam Spiral Generator</Typography>\n        <Snackbar\n          anchorOrigin={{vertical: \"bottom\", horizontal: \"left\"}}\n          open={notify}\n          autoHideDuration={2000}\n          onClose={()=> {this.setState({notify: false})}}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{msg}</span>}/>\n        <div className={classes.root}>\n          <Stage className={classes.stage}\n                 width={stageSize}\n                 height={stageSize}>\n            <FastLayer>\n              <Rect x={0} y={0}\n                    width={stageSize} height={stageSize}\n                    fill={bgColor} shadowBlur={5}/>\n            </FastLayer>\n            <FastLayer ref={(ref)=> this.layer = ref}>\n              <Rect x={0} y={0}\n                    width={stageSize} height={stageSize}\n                    fill={bgColor} shadowBlur={5}/>\n              {shapes}\n            </FastLayer>\n          </Stage>\n        </div>\n        {/* Controls */}\n        <div className={classes.cardHolder}>\n        <Card className={classes.card} elevation={4}>\n          <CardContent>\n            <Typography className={classes.controlsLabel} variant=\"h6\">Controls</Typography>\n            <form className={classes.controls} noValidate autoComplete=\"off\">\n              {createSliders(SLIDER_FIELDS, numberVars, classes, this.handleSlider)}\n              <div className={classes.cPickers}>\n                <span className={classes.colorPicker}>\n                  <Typography align=\"left\" color=\"textSecondary\">Background Color</Typography>\n                  <HuePicker\n                    className={classes.colorPicker}\n                    color={bgColor}\n                    onChangeComplete={(c) => {\n                      if (!c) return\n                      this.setState({bgColor: c.hex})}\n                  }/>\n                </span>\n                <span className={classes.colorPicker}>\n                 <Typography align=\"left\" color=\"textSecondary\">Shape Color</Typography>\n                 <HuePicker\n                    className={classes.colorPicker}\n                    color={color}\n                    onChangeComplete={(c) => {\n                      if(!c) return\n                      this.setState({color: c.hex}, this.makeSpiral)\n                  }}/>\n                </span>\n              </div>\n            <FormControl className={classes.shapePicker}>\n              <InputLabel htmlFor=\"select\">Shape</InputLabel>\n              <Select\n                value={this.state.shape}\n                onChange={(event)=> {\n                    this.setState({[event.target.name]: event.target.value})\n                  }}\n                inputProps={{\n                  name: 'shape',\n                  id: 'select',\n                }}>\n                <MenuItem value={0}>Circle</MenuItem>\n                <MenuItem value={1}>Square</MenuItem>\n                <MenuItem value={2}>Triangle</MenuItem>\n              </Select>\n            </FormControl>\n            </form>\n          </CardContent>\n        </Card>\n        </div>\n        {/* Bottom Text */}\n        <div className={classes.endingText}>\n          <Typography component=\"p\" >\n            <b>Warning</b>: higher grid sizes may cause some slow down.<br/>\n            This project was inspired by{\" \"}\n            <a href=\"https://www.youtube.com/watch?v=iFuR97YcSLM\">this</a>\n            {\" \"} awesome numberphile video.\n            You can read more about Prime Ulam Spirals{\" \"}\n            <a href=\"https://en.wikipedia.org/wiki/Ulam_spiral\">here.</a><br/>\n            You can also check out the{\" \"}\n            <a href=\"https://gitlab.com/danielloera/primeulam\">python version</a>\n            {\" \"}I made.\n          </Typography>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst styles = (theme) => ({\n  title: {\n    marginTop: '3vh',\n    textAlign: 'center',\n    padding: theme.spacing(2),\n  },\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n  },\n  stage: {\n    marginTop: '3vh',\n  },\n  card: {\n    marginTop: '2rem',\n    padding: '1rem',\n    minWidth: '30vw',\n    maxWidth: '90vw',\n  },\n  cardHolder: {\n    justifyContent: 'center',\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  controlsLabel: {\n  },\n  controls: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n  sliderField: {\n    width: '15ch',\n    margin: theme.spacing(4),\n  },\n  colorPicker: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(4),\n    maxWidth: '15rem',\n  },\n  cPickers: {\n    display: 'flex',\n    marginTop: theme.spacing(3),\n  },\n  slideLabel: {\n    marginBottom: theme.spacing(3)\n  },\n  shapePicker: {\n    marginTop: theme.spacing(4)\n  },\n  endingText: {\n    marginTop: theme.spacing(3),\n    marginBottom: '25vh',\n    padding: theme.spacing(2)\n  }\n})\n\nPrimeUlam.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(PrimeUlam)\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\nconst styles = (theme) => ({\n  root: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n  },\n  botHolder: {\n    display: 'inline-block',\n    marginTop: theme.spacing(6),\n  },\n  endingText: {\n    marginTop: theme.spacing(5),\n    marginBottom: theme.spacing(10),\n  },\n})\n\nfunction UTTower(props) {\n  const [width, setWidth] = useState(0)\n  const [height, setHeight] = useState(0)\n\n  function updateDimensions() {\n    const ratio = window.innerWidth / window.innerHeight\n    const opRatio = window.innerHeight / window.innerWidth\n    const defaultWidth = window.innerWidth * 0.80\n    const defaultHeight = window.innerHeight * 0.80\n    const height = ratio > 1.5 ? window.innerHeight / ratio : window.innerHeight / opRatio\n    const width = ratio > 1.5 ? window.innerWidth / ratio : window.innerWidth / opRatio\n    setWidth(Math.min(width, defaultWidth))\n    setHeight(Math.max(height, defaultHeight))\n  }\n\n  useEffect(() => {\n    updateDimensions()\n    window.addEventListener(\"resize\", updateDimensions)\n    return () => window.removeEventListener(\"resize\", updateDimensions)\n  }, [])\n\n  const { classes } = props\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.botHolder} elevation={8}>\n        <iframe\n          title=\"UT Tower\"\n          allow=\"microphone;\"\n          width={width}\n          height={height}\n          src=\"https://console.dialogflow.com/api-client/demo/embedded/uttower\">\n        </iframe>\n      </Paper>\n\n      <div className={classes.endingText}>\n        <Typography component=\"p\" >\n          This bot was created on {\" \"}\n          <a href=\"https://dialogflow.com\">Dialogflow</a>\n          {\" \"}to get lighting updates from the{\" \"}\n          <a href=\"https://en.wikipedia.org/wiki/Main_Building_(University_of_Texas_at_Austin)\">Tower in UT Austin.</a>\n          <br/>UT Tower bot is available on{\" \"}\n          <a href=\"https://assistant.google.com/services/a/uid/0000001deeb5797c?hl=en\">Google Assistant</a>\n          {\" \"} and{\" \"}\n          <a href=\"https://www.facebook.com/utexastower\">Facebook Messenger.</a>\n        </Typography>\n      </div>\n    </div>\n  )\n}\n\nUTTower.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(UTTower)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\n\nconst COLOR = {\n  es: \"#7986cb\",\n  en: \"#f06292\",\n  other: \"#43a047\"\n}\n\nconst styles = (theme) => ({\n  root: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    justifyContent: \"center\",\n  },\n  labelText: {\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    textAlign: \"center\",\n  }\n})\n\nfunction getMargin(w1, w2) {\n  if (w1 >= w2) {\n      return Math.floor((w1 - w2) / 2)\n  }\n  return 0\n}\n\nfunction LabeledWord(props) {\n  const { label, word, classes } = props\n  const labelWidth = label.length + 2\n  const labelMarginLeft = getMargin(word.length, labelWidth)\n  const wordMarginLeft = getMargin(labelWidth + 1, word.length)\n  return (\n    <div className={classes.root}>\n      <Paper elevation={4}\n             style={{\n              backgroundColor: COLOR[label],\n              marginLeft: `${labelMarginLeft}rem`,\n              width: `${labelWidth}rem`\n            }}>\n        <Typography variant=\"h6\" className={classes.labelText}>\n          {label.toUpperCase()}\n        </Typography>\n      </Paper>\n      <Typography variant=\"h5\"\n                  style={{marginLeft: `${wordMarginLeft}rem`}}>\n        {word}\n      </Typography>\n    </div>\n  )\n}\n\nLabeledWord.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(LabeledWord)\n","import React, { useState, useEffect, useMemo, useCallback } from 'react'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'\nimport axios from 'axios'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Paper from '@material-ui/core/Paper'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport LabeledWord from './LabeledWord'\nimport CodeIcon from '@material-ui/icons/Code'\nimport PaperIcon from '@material-ui/icons/Assignment'\nimport { createLinks } from '../../utils'\n\nconst LINKS = [\n  {\n    name: \"Source Code\",\n    link: \"https://gitlab.com/danielloera/nlp-final\",\n    icon: (<CodeIcon fontSize=\"large\"/>)\n  },\n  {\n    name: \"Project PDF\",\n    link: \"https://drive.google.com/file/d/1PzI02kCVVIAnBfy1202F-1mGGD79N8et/view?usp=sharing\",\n    icon: (<PaperIcon fontSize=\"large\"/>)\n  },\n]\nconst Links = createLinks(LINKS)\n\nconst DEFAULT_INPUT = \"Hola! Me llamo Daniel. What is your name?\"\nconst API_URL = \"https://reatret.net/api/codeswitch/\"\n\nconst styles = (theme) => ({\n  root: {\n    marginTop: theme.spacing(4),\n  },\n  labeledWords: {\n    display: \"flex\",\n    alignItems: \"center\",\n    overflowX: \"auto\",\n    overflowY: \"hidden\",\n    border: \"1px solid dimgray\",\n    borderRadius: \"5px\",\n    padding: theme.spacing(2),\n  },\n  buttonHolder: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  summary: {\n    textAlign: \"center\",\n    padding: theme.spacing(3)\n  },\n  links: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n})\n\nfunction CodeSwitching(props) {\n  const [inputText, setInputText] = useState(DEFAULT_INPUT)\n  const [labeledData, setLabeledData] = useState(null)\n  const [lastLabeled, setLastLabeled] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const [isFirstRender, setIsFirstRender] = useState(true)\n\n  const labelText = useCallback(() => {\n    if (!inputText || lastLabeled === inputText) return\n    setLastLabeled(inputText)\n    setLoading(true)\n    axios.post(API_URL, {text: inputText}).then((response) => {\n      setLabeledData(response.data)\n      setLoading(false)\n    })\n  }, [inputText, lastLabeled]);\n\n  // Label text when the page first loads.\n  useEffect(() => {\n    if (isFirstRender) {\n      labelText()\n      setIsFirstRender(false)\n    }\n  }, [labelText, isFirstRender])\n\n  const { classes } = props\n  const labeledWords = useMemo(() => {\n    function getLabeledWords() {\n    if (!labeledData || labeledData.length < 1) return null\n      const labeledWords = []\n      for (let i = 0; i < labeledData.words.length; i++) {\n        labeledWords.push(\n          <LabeledWord key={i}\n                       word={labeledData.words[i]}\n                       label={labeledData.labels[i]}/>)\n      }\n      return labeledWords\n    }\n    if (loading) return <LinearProgress/>\n    return <div className={classes.labeledWords}>{getLabeledWords()}</div>\n  }, [loading, labeledData, classes.labeledWords])\n  return (\n    <Container className={classes.root}>\n     <Snackbar\n      anchorOrigin={{vertical: 'bottom', horizontal: 'left',}}\n      open={loading}\n      ContentProps={{'aria-describedby': 'message-id'}}\n      message=\"Generating labels...\"/>\n      <Grid container spacing={4} justify=\"center\" alignItems=\"center\">\n        <Grid item xs={12}>\n          <Typography align=\"center\" variant=\"h5\">Spanish-English Code-Switching Labeler</Typography>\n          <Typography align=\"center\" variant=\"subtitle1\">by{\" \"}\n            <a href=\"https://gitlab.com/jmhern\">\n              Jorge Hernandez\n            </a> & Daniel Loera\n          </Typography>\n        </Grid>\n        <Grid item xs={10} md={11}>\n          <TextField\n            label=\"Input Text\" defaultValue={DEFAULT_INPUT} variant=\"outlined\"\n            margin=\"normal\" fullWidth\n            onChange={(e) => setInputText(e.target.value)}\n            onKeyPress={(ev) => {\n              if (ev.key === 'Enter') {\n                ev.preventDefault()\n                labelText()\n              }\n            }}\n            />\n        </Grid>\n        <Grid item xs={2} md={1} className={classes.buttonHolder}>\n          <Button variant=\"contained\" color=\"secondary\" onClick={labelText}>\n            Label\n          </Button>\n        </Grid>\n        <Grid item xs={12}>\n          {labeledWords}\n        </Grid>\n        <Grid item xs={12} md={10} lg={6}>\n          <Paper className={classes.summary} elevation={2}>\n            <Typography component=\"p\"variant=\"body1\">\n              This research project was developed for{\" \"}\n              <a href=\"https://www.cs.utexas.edu/~gdurrett/\">\n                Greg Durrett's\n              </a> Natural Language Processing class. It uses a bidirectional RNN,\n              trained embeddings, and much more to identify language in english-spanish code-switching\n              text. It certainly isn't perfect, but it does a great job with a vast\n              amount of sentence types. You can look at the source code or read more about the details\n              in the research project linked below. Have fun!\n            </Typography>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} className={classes.links}>\n          {Links}\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nCodeSwitching.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(CodeSwitching)\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport { withStyles, MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport NotFound from './404'\nimport NavBar from './NavBar'\nimport Home from '../Home/Home'\nimport PrimeUlam from '../PrimeUlam/PrimeUlam'\nimport UTTower from '../UTTower/UTTower'\nimport CodeSwitching from '../CodeSwitching/CodeSwitching'\n\nconst styles = (theme) => ({\n    root: {\n      flexGrow: 1,\n    }\n  }\n)\n\nconst primaryColor = '#43a047'\nconst secondaryColor = '#ff4081'\nconst theme = createMuiTheme(\n  {\n    typography: {\n      fontSize: 16,\n    },\n    palette: {\n      type: 'dark',\n      primary: {\n        main: primaryColor,\n      },\n      secondary: {\n        main: secondaryColor,\n      }\n    }\n  }\n)\n\nfunction App(props) {\n  const { classes } = props\n  return (\n    <React.Fragment>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline/>\n        <NavBar/>\n        <Switch className={classes.root}>\n          <Route exact path='/' component={Home}/>\n          <Route exact path='/primeulam' component={PrimeUlam}/>\n          <Route exact path='/uttower' component={UTTower}/>\n          <Route exact path='/codeswitching' component={CodeSwitching}/>\n          <Route component={NotFound}/>\n        </Switch>\n      </MuiThemeProvider>\n    </React.Fragment>\n  )\n}\n\nexport { secondaryColor, primaryColor }\nexport default withStyles(styles)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom'\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t(<BrowserRouter>\n\t \t<App/>\n\t </BrowserRouter>),\n\tdocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}