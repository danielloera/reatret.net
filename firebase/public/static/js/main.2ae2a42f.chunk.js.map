{"version":3,"sources":["images/kiwi.png","images/komodo.png","images/trex.png","components/TempDrawer.js","components/NavBar.js","components/Home.js","components/PrimeUlam.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","DRAWER_LIST","text","icon","react_default","a","createElement","Home_default","link","Toys_default","TempDrawer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","open","nextProps","nextState","opened","setState","_this2","classes","sideList","className","list","List_default","map","dItem","react_router_dom","to","key","ListItem_default","button","ListItemIcon_default","ListItemText_default","primary","Divider_default","Drawer_default","onClose","toggle","tabIndex","role","onClick","onKeyDown","React","Component","withStyles","minWidth","maxWidth","NavBar","openDrawer","bind","assertThisInitialized","drawerOpen","shouldShow","lastScroll","handleScroll","_","throttle","window","addEventListener","passive","removeEventListener","evt","scrollY","prevState","barClass","concat","bar","show","hide","AppBar_default","position","color","Toolbar_default","IconButton_default","menuButton","aria-label","Menu_default","style","textDecoration","Typography_default","variant","components_TempDrawer","theme","marginLeft","marginRight","marginBottom","top","transform","transition","LINKS","name","Code_default","fontSize","Description_default","imgs","kiwi","trex","komodo","FASTER","SLOWER","createSnackBar","v","h","message","handleClose","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","id","createControl","fn","FastRewind_default","FastForward_default","Home","defaultSpin","defaultSwap","imgIdx","Math","trunc","random","length","spinSpeed","swapSpeed","swapSnack","spinSnack","swapMsg","spinMsg","imgTick","spin","swap","reset","swapTimer","setInterval","clearInterval","newIdx","newState","type","_this3","newSpeed","_this4","_this5","_this$state","logo","spinStyle","animation","cursor","src","alt","Card_default","card","elevation","CardContent_default","component","CardActions_default","justifyContent","Button_default","size","bottomLinks","item","display","href","padding","marginTop","TSlider","Slider","createSliderWithTooltip","SCREEN_PERCENTAGE","CIRCLE","getSpiralIdx","n","k","ceil","sqrt","t","m","pow","x","y","SLIDER_FIELDS","min","max","PrimeUlam","innerWidth","innerHeight","board","prevPrimes","maxPrimeSize","maxStart","spiral","bgColor","shape","shapeSize","start","stageSize","primeSize","primes","notify","msg","handleSlider","makeSpiral","layer","then","updatePrimes","prevProps","_this$state2","limit","newLimit","primeThread","threads","spawn","input","done","ps","prevData","prevLen","diff","i","push","Array","fill","ans","Set","add","send","on","response","data","ns","newBoard","newStart","arguments","undefined","_this$state3","primeJump","tempArr","num","len","rawHalf","half","floor","idx","spiralize","shapes","ShapeClass","RegularPolygon","Rect","Circle","has","jx","jy","sides","radius","width","height","val","defineProperty","_this$state4","numberVars","batchDraw","title","align","root","ReactKonva","stage","ref","shadowBlur","cardHolder","controlsLabel","controls","noValidate","autoComplete","fields","values","doms","field","value","sliderField","slideLabel","handleStyle","backgroundColor","borderColor","trackStyle","slider","step","defaultValue","onAfterChange","createSliders","cPickers","colorPicker","material_ui_color_picker_lib_default","onChange","c","FormControl_default","shapePicker","InputLabel_default","htmlFor","Select_default","event","target","inputProps","MenuItem_default","endingText","textAlign","spacing","unit","alignItems","flexWrap","createMuiTheme","typography","useNextVariants","palette","main","secondary","App","Fragment","styles","CssBaseline_default","components_NavBar","react_router","exact","path","flexGrow","Boolean","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2ae2a42f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kiwi.a0352b91.png\";","module.exports = __webpack_public_path__ + \"static/media/komodo.93a84db4.png\";","module.exports = __webpack_public_path__ + \"static/media/trex.6e57b2ee.png\";","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport SpiralIcon from '@material-ui/icons/Toys'\nimport HomeIcon from '@material-ui/icons/Home'\n\nconst styles = {\n  list: {\n    minWidth: 'calc(10ch + 10vw)',\n    maxWidth: 'calc(20ch + 10vw)',\n  }\n}\n\n// List of all Drawer Items\nconst DRAWER_LIST = [\n  {\n    text: \"Home\",\n    icon: (<HomeIcon/>),\n    link: \"/\"\n  },\n  {\n    text: \"Ulam Spirals\",\n    icon: (<SpiralIcon/>),\n    link: \"/primeulam\"\n  },\n]\n\nfunction createList(dList) {\n  return (\n    <List>\n      {DRAWER_LIST.map((dItem) => (\n        <Link to={dItem.link} key={dItem.text}>\n          <ListItem button>\n            <ListItemIcon>{dItem.icon}</ListItemIcon>\n            <ListItemText primary={dItem.text}/>\n          </ListItem>\n        </Link>\n      ))}\n    </List>\n  )\n}\n\nclass TempDrawer extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n    }\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (this.state.open !== nextProps.opened) {\n      this.setState({open: nextProps.opened})\n    }\n  }\n\n  toggle(state) {\n    return () => this.setState({\n      open: state\n    })\n  }\n\n  render() {\n    const { classes } = this.props\n\n    const sideList = (\n      <div className={classes.list}>\n        {createList(DRAWER_LIST)}\n        <Divider/>\n      </div>\n    )\n\n    return (\n      <div>\n        <Drawer open={this.state.open} onClose={this.toggle(false)}>\n          <div\n            tabIndex={0}\n            role=\"button\"\n            onClick={this.toggle(false)}\n            onKeyDown={this.toggle(false)}>\n            {sideList}\n          </div>\n        </Drawer>\n      </div>\n    )\n  }\n}\n\nTempDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(TempDrawer)\n","import React, { Component } from 'react'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport TempDrawer from './TempDrawer'\n\nconst HIDE_SPEED = 0.4\n\nconst styles = (theme) => ({\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  bar: {\n    marginBottom: \"0vw\",\n    position: 'sticky',\n    top: 0\n  },\n  show: {\n    transform: 'translateY(0)',\n    transition: `transform ${HIDE_SPEED}s`,\n  },\n  hide: {\n    transform: 'translateY(-110%)',\n    transition: `transform ${HIDE_SPEED}s`,\n  },\n})\n\nclass NavBar extends Component {\n\n  constructor(props) {\n    super(props)\n    this.openDrawer = this.openDrawer.bind(this)\n    this.state = {\n      drawerOpen: false,\n      shouldShow: null\n    }\n    this.lastScroll = null\n    this.handleScroll = _.throttle(this.handleScroll.bind(this), 100)\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll, { passive: true })\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll)\n  }\n\n  handleScroll(evt) {\n    const lastScroll = window.scrollY\n    if (lastScroll === this.lastScroll) {\n      return\n    }\n    const shouldShow = (this.lastScroll !== null) ?  (lastScroll < this.lastScroll) : null\n    if (shouldShow !== this.state.shouldShow) {\n      this.setState((prevState, props) => {\n        return {\n            drawerOpen: false,\n            shouldShow: shouldShow\n          }\n      })\n    }\n    this.lastScroll = lastScroll\n  }\n\n  openDrawer() {\n    this.setState({drawerOpen: true})\n  }\n\n  render() {\n    const {classes} = this.props\n    const barClass = (`${classes.bar} ${\n              this.state.shouldShow === null ? '' : (\n                this.state.shouldShow ? classes.show : classes.hide\n              )\n            }`)\n    return (\n      <AppBar position=\"static\"\n              color=\"primary\"\n              className={barClass}>\n         <Toolbar>\n            <IconButton\n              className={classes.menuButton}\n              aria-label=\"Open drawer\"\n              onClick={this.openDrawer}>\n              <MenuIcon/>\n            </IconButton>\n            <Link to='/' style={{textDecoration: 'none'}}>\n               <Typography variant=\"h5\">\n               reatret.net\n               </Typography>\n            </Link>\n         </Toolbar>\n         <TempDrawer opened={this.state.drawerOpen}/>\n      </AppBar>\n    )\n  }\n}\n\nNavBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(NavBar)\n\n\n\n","import React, { Component } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport kiwi from '../images/kiwi.png'\nimport trex from '../images/komodo.png'\nimport komodo from '../images/trex.png'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport Button from '@material-ui/core/Button'\nimport RWIcon from '@material-ui/icons/FastRewind'\nimport FFIcon from '@material-ui/icons/FastForward'\nimport CodeIcon from '@material-ui/icons/Code'\nimport ResumeIcon from '@material-ui/icons/Description'\nimport Typography from '@material-ui/core/Typography'\nimport './Home.css'\n\nconst styles = {\n  card: {\n    minWidth: \"30vh\",\n    maxWidth: \"90vw\",\n    padding: \".5em\"\n  },\n  bottomLinks: {\n    marginTop: '2vh',\n  }\n}\n\nconst LINKS = [\n  {\n    name: \"Gitlab\",\n    link: \"https://gitlab.com/danielloera\",\n    icon: (<CodeIcon fontSize=\"large\"/>)\n  },\n  {\n    name: \"Resume\",\n    link: \"https://docs.google.com/document/d/18sWdFkdfeEGWD7KpvNJ7I25CUm_n0n1hrINJsOv3VzA\",\n    icon: (<ResumeIcon fontSize=\"large\"/>)\n  },\n]\n\nconst imgs = [kiwi, trex, komodo]\n\nconst FASTER = 0\nconst SLOWER = 1\n\nfunction spinImgAt(secs) {\n  return {\n    animation: `App-logo-spin infinite ${secs}s linear`,\n    cursor: \"pointer\"\n  }\n}\n\nfunction createSnackBar(v, h, message, open, handleClose) {\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: v,\n        horizontal: h,\n      }}\n      open={open}\n      autoHideDuration={3000}\n      onClose={handleClose}\n      ContentProps={{\n        'aria-describedby': 'message-id',\n      }}\n      message={<span id=\"message-id\">{message}</span>}/>\n  )\n}\n\nfunction createControl(name, fn) {\n  return [\n      <IconButton key={`${name}1`}\n        aria-label={`${name} Slower`}\n        onClick={fn(SLOWER)}>\n        <RWIcon/>\n      </IconButton>,\n      <Typography key={`${name}2`}>{name}</Typography>,\n      <IconButton key={`${name}3`}\n        aria-label={`${name} Faster`}\n        onClick={fn(FASTER)}>\n        <FFIcon/>\n      </IconButton>\n  ]\n}\n\nfunction createLinks(links) {\n  return links.map((item) => (\n    <span key={item.name}\n          style={{display: \"inline-block\"}}>\n      <a href={item.link}>\n      <IconButton aria-label={item.name}>\n      {item.icon}\n      </IconButton>\n      <div>\n        <Typography>\n        {item.name}\n        </Typography>\n      </div>\n      </a>\n    </span>)\n  )\n}\n\nclass Home extends Component {\n\n  constructor(props) {\n    super(props)\n    this.defaultSpin = 3\n    this.defaultSwap = 3000\n    this.state = {\n                  imgIdx: Math.trunc(Math.random() * imgs.length),\n                  spinSpeed: this.defaultSpin,\n                  swapSpeed: this.defaultSwap,\n                  swapSnack: false,\n                  spinSnack: false,\n                  swapMsg: '',\n                  spinMsg: ''\n                 }\n    this.imgTick = this.imgTick.bind(this)\n    this.spin = this.spin.bind(this)\n    this.swap = this.swap.bind(this)\n    this.reset = this.reset.bind(this)\n    this.swapTimer = setInterval(this.imgTick, this.state.swapSpeed)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.swapTimer)\n  }\n\n  imgTick() {\n    if (this.state == null) return\n    let newIdx = this.state.imgIdx + 1\n    if (newIdx === imgs.length) {\n      newIdx = 0\n    }\n    this.setState({imgIdx: newIdx})\n  }\n\n\n  reset() {\n    clearInterval(this.swapTimer)\n    this.setState({\n      spinSpeed: this.defaultSpin,\n      swapSpeed: this.defaultSwap,\n      spinMsg: `Spinning and swapping every ${this.defaultSpin}s`,\n      spinSnack: true\n    },\n    (newState)=> {\n      this.swapTimer = setInterval(this.imgTick, this.defaultSwap)\n    })\n  }\n\n  spin(type) {\n    return () => {\n      const {spinSpeed} = this.state\n      let newSpeed = null\n      if (type === FASTER) {\n        newSpeed = spinSpeed / 2\n      } else {\n        newSpeed = spinSpeed * 2\n      }\n      this.setState({\n        spinSpeed: newSpeed,\n        spinMsg: `Spinning every ${newSpeed}s`,\n        spinSnack: true\n      })\n    }\n  }\n\n  swap(type) {\n    return () => {\n      const {swapSpeed} = this.state\n      let newSpeed = null\n      if (type === FASTER) {\n        newSpeed = swapSpeed / 2\n      } else {\n        newSpeed = swapSpeed * 2\n      }\n      clearInterval(this.swapTimer)\n      this.setState(\n        {\n          swapSpeed: newSpeed,\n          swapMsg: `Swapping every ${newSpeed / 1000}s`,\n          swapSnack: true\n        },\n        (newState)=> {this.swapTimer = setInterval(this.imgTick, newSpeed)})\n    }\n  }\n\n  render() {\n    const {classes} = this.props\n    const {imgIdx, spinSpeed, swapMsg,\n           spinMsg, spinSnack, swapSnack} = this.state\n    const logo = imgs[imgIdx]\n    const spinStyle = spinImgAt(spinSpeed)\n    return (\n      <div className=\"Home\">\n        {/* Snackbars */}\n        {createSnackBar('bottom', 'left', spinMsg, spinSnack,\n                        () => {this.setState({spinSnack: false})})}\n        {createSnackBar('bottom', 'right', swapMsg, swapSnack,\n                        () => {this.setState({swapSnack: false})})}\n        {/* Spinning Image */}\n        <img src={logo}\n        className=\"Spinning-Image\"\n        alt=\"logo\"\n        style={spinStyle}/>\n        {/* Control Card */}\n        <Card className={classes.card} elevation={5}>\n          <CardContent>\n            <Typography component=\"p\">\n              Hi, I'm Daniel. I love making things.\n              <br/>\n              You can see some of them on this site or linked below.\n              <br/>\n              Have fun <i>spinning</i>.\n            </Typography>\n          </CardContent>\n          <CardActions style={{justifyContent: 'center'}}>\n             {createControl(\"Spin\", this.spin)}\n             <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={this.reset}>Reset</Button>\n             {createControl(\"Swap\", this.swap)}\n          </CardActions>\n        </Card>\n        {/* Links */}\n        <div className={classes.bottomLinks}>\n        {createLinks(LINKS)}\n        </div>\n      </div>\n    )\n  }\n}\n\nHome.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(Home)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Stage, FastLayer, Rect, Circle, RegularPolygon } from 'react-konva'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Select from '@material-ui/core/Select'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport FormControl from '@material-ui/core/FormControl'\nimport Typography from '@material-ui/core/Typography'\nimport threads from 'threads'\nimport Slider from 'rc-slider'\nimport ColorPicker from 'material-ui-color-picker'\nimport 'rc-slider/assets/index.css'\nconst TSlider = Slider.createSliderWithTooltip(Slider)\n\nconst SCREEN_PERCENTAGE = 0.80\nconst CALC_PRIMES = \"Calculating Primes...\"\n\nconst CIRCLE = 0\nconst SQUARE = 1\nconst TRIANGLE = 2\n\nfunction getSpiralIdx(n) {\n  const k = Math.ceil((Math.sqrt(n) - 1) / 2)\n  let t = 2 * k + 1\n  let m = Math.pow(t, 2)\n  t -= 1\n  if (n >= m - t) {\n    return {x: k-(m-n), y: k}\n  } else {\n    m -= t\n  }\n  if (n >= m - t) {\n    return {x: -k, y: k - (m - n)}\n  } else {\n    m -= t\n  }\n  if (n >= m - t) {\n    return {x: -k + (m-n), y: -k}\n  }\n  return {x: k, y: -k+(m-n-t)}\n}\n\nfunction spiralize(board, num) {\n  const size = Math.pow(board.length, 2)\n  const len = board.length\n  const rawHalf = len / 2\n  const half = len % 2 === 0 ?\n              Math.ceil(rawHalf) - 1:\n              Math.floor(rawHalf)\n  for (let i = 1; i <= size; i++) {\n    const idx = getSpiralIdx(i)\n    board[idx.x + half][idx.y + half] = num\n    num += 1\n  }\n}\n\nconst SLIDER_FIELDS = [\n  {\n    name: \"Grid\\xa0Size\\xa0(NxN)\",\n    id: \"primeSize\",\n    min: 5,\n    max: 1001,\n  },\n  {\n    name: \"Shape\\xa0Size\",\n    id: \"shapeSize\",\n    min: 1,\n    max: 100,\n  },\n  {\n    name: \"Starting\\xa0Number\",\n    id: \"start\",\n    min: 1,\n    max: 500,\n  },\n]\n\nfunction createSliders(fields, values, classes, fn) {\n  const doms = []\n  for (let i = 0; i < fields.length; i++) {\n    const field = fields[i]\n    const value = values[i]\n    doms.push((\n      <div\n        className={classes.sliderField}\n        key={field.name}\n        id={field.name}>\n          <Typography align=\"left\" className={classes.slideLabel} color=\"textSecondary\">{`${field.name}:\\xa0${value}`}</Typography>\n          <TSlider\n            handleStyle={{backgroundColor: '#ff80ab', borderColor: '#ff80ab'}}\n            trackStyle={{backgroundColor: '#ff80ab', borderColor: '#ff80ab'}}\n            className={classes.slider}\n            min={field.min}\n            max={field.max}\n            step={1}\n            defaultValue={value}\n            onAfterChange={fn(field.id)}/>\n      </div>\n    ))\n  }\n  return doms\n}\n\nclass PrimeUlam extends Component {\n\n  constructor(props) {\n    super(props)\n    const size = Math.trunc(Math.min(window.innerWidth, window.innerHeight) * SCREEN_PERCENTAGE)\n    const start = 1\n    const primeSize = 101\n    this.board = null\n    this.prevPrimes = null\n    this.maxPrimeSize = primeSize\n    this.maxStart = start\n    this.state = {\n      spiral: null,\n      bgColor: \"white\",\n      color: \"black\",\n      shape: CIRCLE,\n      shapeSize: 5,\n      start: start,\n      stageSize: size,\n      primeSize: primeSize,\n      primes: null,\n      notify: false,\n      msg: '',\n    }\n    this.handleSlider = this.handleSlider.bind(this)\n    this.makeSpiral = this.makeSpiral.bind(this)\n    this.layer = null\n  }\n\n  notify(msg, then) {\n    this.setState({\n      msg: msg,\n      notify: true\n    }, then)\n  }\n\n  componentDidMount() {\n    const {primeSize, start} = this.state\n    this.updatePrimes(Math.pow(primeSize + start, 2))\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {primeSize, start, shapeSize} = this.state\n    if (primeSize !== prevState.primeSize) {\n      if (this.maxPrimeSize < primeSize) {\n        this.maxPrimeSize = primeSize\n        const limit = Math.pow(primeSize + start, 2)\n        this.updatePrimes(limit)\n      } else {\n        this.makeSpiral()\n      }\n    }\n    if (start && start !== prevState.start) {\n      const newLimit = Math.pow(this.maxPrimeSize + start, 2)\n      const oldLimit = Math.pow(this.maxPrimeSize + this.maxStart, 2)\n      if (oldLimit < newLimit) {\n        this.maxStart = start\n        this.updatePrimes(newLimit)\n      } else {\n        this.makeSpiral(false, true)\n      }\n    }\n    if (shapeSize !== prevState.shapeSize) {\n      this.makeSpiral()\n    }\n  }\n\n  updatePrimes(limit) {\n    const primeThread = threads.spawn((input, done) => {\n      const ps = function primesSieve(limit, prevData) {\n        let a = null\n        let start = 0\n        if (prevData && prevData.length < limit) {\n          a = prevData\n          const prevLen = prevData.length\n          start = prevLen\n          // Limit MUST be greater then prev data len\n          const diff = limit - prevLen\n          for (let i = 0; i < diff; i++) {\n            a.push(true)\n          }\n        } else {\n          a = Array(limit)\n          a[0] = false\n          a[1] = false\n          a.fill(true, 2, limit)\n        }\n        const ans = new Set([])\n        for(let i = start; i < a.length; i++) {\n          const isPrime = a[i]\n          if (isPrime) {\n            ans.add(i)\n            for (let n = i*i; n < limit; n+=i) {\n              a[n] = false\n            }\n          }\n        }\n        return {primes: ans, prevData: a}\n      }\n      done({ps: ps(input.limit, input.prevPrimes)})\n    })\n    this.notify(CALC_PRIMES)\n    primeThread.send({limit: limit, prevPrimes: this.prevPrimes})\n    .on('message', (response) => {\n      this.prevPrimes = response.ps.data\n      this.setState({\n        primes: response.ps.primes\n      }, (ns)=>{ this.makeSpiral(true) })\n    })\n  }\n\n  makeSpiral(newBoard, newStart=false) {\n    const {start, primeSize, stageSize, shapeSize,\n           shape, color, primes} = this.state\n    if (!stageSize || !primeSize || !start ||\n        !shapeSize) {\n      return null\n    }\n    const primeJump = Math.ceil(stageSize / primeSize)\n    if (newBoard) {\n      this.board = []\n      for (let i = 0; i < primeSize; i++) {\n        const tempArr = Array(primeSize)\n        tempArr.fill(null, 0, primeSize)\n        this.board.push(tempArr)\n      }\n    }\n    if (newBoard || newStart) {\n      spiralize(this.board, start)\n    }\n    const shapes = []\n    let ShapeClass = null\n    switch (true) {\n      case shape === TRIANGLE:\n        ShapeClass = RegularPolygon\n        break\n      case shape === SQUARE:\n        ShapeClass = Rect\n        break\n      default:\n        ShapeClass = Circle\n    }\n    for (let x = 0; x < primeSize; x++) {\n      for (let y = 0; y < primeSize; y++) {\n        if (primes.has(this.board[x][y])) {\n          const jx = x * primeJump\n          const jy = y * primeJump\n          const key = `${x} ${y}`\n          shapes.push((<ShapeClass\n                          key={key}\n                          x={jx} y={jy}\n                          sides={3} radius={shapeSize}\n                          width={shapeSize} height={shapeSize}\n                          fill={color}/>))\n        }\n      }\n    }\n    this.setState({spiral: shapes})\n  }\n\n  handleSlider(id){\n    return (val) => {\n      this.setState({[id]: val})\n    }\n  }\n\n  render() {\n    const {classes} = this.props\n    const {stageSize, primeSize, shapeSize,\n           start, notify, msg, spiral,\n           color, bgColor} = this.state\n    const numberVars = [primeSize, shapeSize, start]\n    if (this.layer) this.layer.batchDraw()\n    return (\n      <div className={classes.title}>\n        <Typography align=\"center\" variant=\"h5\"> Ulam Spiral Generator</Typography>\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\",\n          }}\n        open={notify}\n        autoHideDuration={2000}\n        onClose={()=> {this.setState({notify: false})}}\n        ContentProps={{\n          'aria-describedby': 'message-id',\n        }}\n        message={<span id=\"message-id\">{msg}</span>}/>\n        <div className={classes.root}>\n          <Stage className={classes.stage}\n                 width={stageSize}\n                 height={stageSize}>\n            <FastLayer ref={(ref)=> this.layer = ref}>\n              {/* Background */}\n              <Rect x={0} y={0} width={stageSize} height={stageSize}\n                    fill={this.state.bgColor} shadowBlur={5}/>\n              {/* Spiral Shapes */}\n              {spiral}\n            </FastLayer>\n          </Stage>\n        </div>\n        {/* Controls */}\n        <div className={classes.cardHolder}>\n        <Card className={classes.card} elevation={4}>\n          <CardContent>\n            <Typography className={classes.controlsLabel} variant=\"h6\">Controls</Typography>\n            <form className={classes.controls} noValidate autoComplete=\"off\">\n              {createSliders(SLIDER_FIELDS, numberVars, classes, this.handleSlider)}\n              <div className={classes.cPickers}>\n                <span className={classes.colorPicker}>\n                  <Typography align=\"left\" color=\"textSecondary\">Background Color</Typography>\n                  <ColorPicker\n                    className={classes.colorPicker}\n                    name='bgColor'\n                    defaultValue={bgColor}\n                    onChange={(c) => {\n                      if (!c) return\n                      this.setState({bgColor: c})}\n                  }/>\n                </span>\n                <span className={classes.colorPicker}>\n                 <Typography align=\"left\" color=\"textSecondary\">Shape Color</Typography>\n                 <ColorPicker\n                    name='color'\n                    defaultValue={color}\n                    onChange={(c) => {\n                        if(!c) return\n                        this.setState({color: c}, this.makeSpiral)\n                  }}/>\n                </span>\n            </div>\n            <FormControl className={classes.shapePicker}>\n              <InputLabel htmlFor=\"select\">Shape</InputLabel>\n              <Select\n                value={this.state.shape}\n                onChange={(event)=> {\n                    this.setState({[event.target.name]: event.target.value},\n                      this.makeSpiral)\n                  }}\n                inputProps={{\n                  name: 'shape',\n                  id: 'select',\n                }}>\n                <MenuItem value={0}>Circle</MenuItem>\n                <MenuItem value={1}>Square</MenuItem>\n                <MenuItem value={2}>Triangle</MenuItem>\n              </Select>\n            </FormControl>\n            </form>\n          </CardContent>\n        </Card>\n        </div>\n        {/* Bottom Text */}\n        <div className={classes.endingText}>\n          <Typography component=\"p\" >\n            This project was inspired by{\" \"}\n            <a href=\"https://www.youtube.com/watch?v=iFuR97YcSLM\">this</a>\n            {\" \"} awesome numberphile video.\n            You can read more about Prime Ulam Spirals{\" \"}\n            <a href=\"https://en.wikipedia.org/wiki/Ulam_spiral\">here.</a><br/>\n            You can also check out the{\" \"}\n            <a href=\"https://gitlab.com/danielloera/primeulam\">python version</a>\n            {\" \"}I made.\n          </Typography>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst styles = (theme) => ({\n  title: {\n    marginTop: '3vh',\n    textAlign: 'center',\n    padding: theme.spacing.unit*2,\n  },\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n  },\n  stage: {\n    marginTop: '3vh',\n  },\n  card: {\n    marginTop: '2rem',\n    padding: '1rem',\n    minWidth: '30vw',\n    maxWidth: '90vw',\n  },\n  cardHolder: {\n    justifyContent: 'center',\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  controlsLabel: {\n  },\n  controls: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    marginLeft: theme.spacing.unit*3,\n    marginRight: theme.spacing.unit*3,\n  },\n  sliderField: {\n    width: '15ch',\n    marginTop: theme.spacing.unit*3,\n    marginLeft: theme.spacing.unit*3,\n    marginRight: theme.spacing.unit,\n  },\n  colorPicker: {\n    marginLeft: theme.spacing.unit*2,\n    marginRight: theme.spacing.unit*2,\n    maxWidth: '15rem',\n  },\n  cPickers: {\n    display: 'flex',\n    marginTop: theme.spacing.unit*3,\n  },\n  slideLabel: {\n    marginBottom: theme.spacing.unit*3\n  },\n  shapePicker: {\n    marginTop: theme.spacing.unit*4\n  },\n  endingText: {\n    marginTop: '7vh',\n    marginBottom: '25vh',\n    padding: theme.spacing.unit*2\n  }\n})\n\nPrimeUlam.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(PrimeUlam)\n","import React, { Component } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport { withStyles, MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport NavBar from './NavBar'\nimport Home from './Home'\nimport PrimeUlam from './PrimeUlam'\nimport './App.css'\n\nconst styles = (theme) => ({\n    root: {\n      flexGrow: 1,\n    }\n  }\n)\n\nconst theme = createMuiTheme(\n  {\n  typography: {\n    useNextVariants: true,\n    fontSize: 16,\n  },\n  palette: {\n    type: 'dark',\n    primary: {\n        main: '#43a047',\n      },\n    secondary: {\n        main: '#ff80ab',\n      }\n    }\n  }\n)\n\nclass App extends Component {\n\n  render() {\n    const {classes} = this.props\n    return (\n      <React.Fragment>\n        <MuiThemeProvider theme={theme}>\n          <CssBaseline/>\n          <NavBar/>\n            <Switch className={classes.root}>\n              <Route exact path='/' component={Home}/>\n              <Route exact path='/primeulam' component={PrimeUlam}/>\n            </Switch>\n        </MuiThemeProvider>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default withStyles(styles)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom'\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t(<BrowserRouter>\n\t \t<App/>\n\t </BrowserRouter>),\n\tdocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}