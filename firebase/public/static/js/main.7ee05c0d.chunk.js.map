{"version":3,"sources":["components/Home.js","components/TempDrawer.js","components/NavBar.js","components/App.js","serviceWorker.js","index.js","images/kiwi.png","images/komodo.png","images/trex.png"],"names":["LINKS","name","link","icon","react_default","a","createElement","Code_default","fontSize","Description_default","imgs","kiwi","trex","komodo","FASTER","SLOWER","createSnackBar","v","h","message","open","handleClose","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","aria-describedby","id","createControl","fn","IconButton_default","key","concat","aria-label","onClick","FastRewind_default","Typography_default","FastForward_default","Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","defaultSpin","defaultSwap","state","imgIdx","Math","trunc","random","length","spinSpeed","swapSpeed","swapSnack","spinSnack","swapMsg","spinMsg","imgTick","bind","assertThisInitialized","spin","swap","reset","swapTimer","setInterval","newIdx","setState","_this2","clearInterval","newState","type","_this3","newSpeed","_this4","_this5","classes","_this$state","logo","spinStyle","animation","cursor","className","src","alt","style","Card_default","card","elevation","CardContent_default","component","CardActions_default","justifyContent","Button_default","size","variant","color","map","item","display","href","Component","withStyles","minWidth","maxWidth","DRAWER_LIST","text","InsertEmoticon_default","TempDrawer","nextProps","nextState","opened","sideList","list","List_default","dItem","react_router_dom","to","ListItem_default","button","ListItemIcon_default","ListItemText_default","primary","Divider_default","Drawer_default","toggle","tabIndex","role","onKeyDown","React","width","NavBar","openDrawer","drawerOpen","shouldShow","lastScroll","handleScroll","_","throttle","window","addEventListener","passive","removeEventListener","evt","scrollY","prevState","barClass","bar","show","hide","AppBar_default","position","Toolbar_default","menuButton","Menu_default","textDecoration","components_TempDrawer","theme","marginLeft","marginRight","marginBottom","transform","transition","createMuiTheme","typography","useNextVariants","palette","main","secondary","App","Fragment","styles","CssBaseline_default","components_NavBar","react_router","root","exact","path","flexGrow","Boolean","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.7ee05c0d.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport kiwi from '../images/kiwi.png'\nimport trex from '../images/komodo.png'\nimport komodo from '../images/trex.png'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport Button from '@material-ui/core/Button'\nimport RWIcon from '@material-ui/icons/FastRewind'\nimport FFIcon from '@material-ui/icons/FastForward'\nimport CodeIcon from '@material-ui/icons/Code'\nimport ResumeIcon from '@material-ui/icons/Description'\nimport Typography from '@material-ui/core/Typography'\nimport './Home.css'\n\nconst styles = {\n  card: {\n    minWidth: \"30vh\",\n    maxWidth: \"100vw\",\n  }\n}\n\nconst LINKS = [\n  {\n    name: \"Gitlab\",\n    link: \"https://gitlab.com/danielloera\",\n    icon: (<CodeIcon fontSize=\"large\"/>)\n  },\n  {\n    name: \"Resume\",\n    link: \"https://docs.google.com/document/d/18sWdFkdfeEGWD7KpvNJ7I25CUm_n0n1hrINJsOv3VzA\",\n    icon: (<ResumeIcon fontSize=\"large\"/>)\n  },\n]\n\nconst imgs = [kiwi, trex, komodo]\n\nconst FASTER = 0\nconst SLOWER = 1\n\nfunction spinImgAt(secs) {\n  return {\n    animation: `App-logo-spin infinite ${secs}s linear`,\n    cursor: \"pointer\"\n  }\n}\n\nfunction createSnackBar(v, h, message, open, handleClose) {\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: v,\n        horizontal: h,\n      }}\n      open={open}\n      autoHideDuration={3000}\n      onClose={handleClose}\n      ContentProps={{\n        'aria-describedby': 'message-id',\n      }}\n      message={<span id=\"message-id\">{message}</span>}/>\n  )\n}\n\nfunction createControl(name, fn) {\n  return [\n      <IconButton key={`${name}1`}\n        aria-label={`${name} Slower`}\n        onClick={fn(SLOWER)}>\n        <RWIcon/>\n      </IconButton>,\n      <Typography key={`${name}2`}>{name}</Typography>,\n      <IconButton key={`${name}3`}\n        aria-label={`${name} Faster`}\n        onClick={fn(FASTER)}>\n        <FFIcon/>\n      </IconButton>\n  ]\n}\n\nfunction createLinks(links) {\n  return links.map((item) => (\n    <span key={item.name}\n          style={{display: \"inline-block\"}}>\n      <a href={item.link}>\n      <IconButton aria-label={item.name}>\n      {item.icon}\n      </IconButton>\n      <div>\n        <Typography>\n        {item.name}\n        </Typography>\n      </div>\n      </a>\n    </span>)\n  )\n}\n\nclass Home extends Component {\n\n  constructor(props) {\n    super(props)\n    this.defaultSpin = 3\n    this.defaultSwap = 3000\n    this.state = {\n                  imgIdx: Math.trunc(Math.random() * imgs.length),\n                  spinSpeed: this.defaultSpin,\n                  swapSpeed: this.defaultSwap,\n                  swapSnack: false,\n                  spinSnack: false,\n                  swapMsg: '',\n                  spinMsg: ''\n                 }\n    this.imgTick = this.imgTick.bind(this)\n    this.spin = this.spin.bind(this)\n    this.swap = this.swap.bind(this)\n    this.reset = this.reset.bind(this)\n    this.swapTimer = setInterval(this.imgTick, this.state.swapSpeed)\n  }\n\n  imgTick() {\n    if (this.state == null) return\n    let newIdx = this.state.imgIdx + 1\n    if (newIdx === imgs.length) {\n      newIdx = 0\n    }\n    this.setState({imgIdx: newIdx})\n  }\n\n  reset() {\n    clearInterval(this.swapTimer)\n    this.setState({\n      spinSpeed: this.defaultSpin,\n      swapSpeed: this.defaultSwap,\n      spinMsg: `Spinning and swapping every ${this.defaultSpin}s`,\n      spinSnack: true\n    },\n    (newState)=> {\n      this.swapTimer = setInterval(this.imgTick, this.defaultSwap)\n    })\n  }\n\n  spin(type) {\n    return () => {\n      const {spinSpeed} = this.state\n      let newSpeed = null\n      if (type === FASTER) {\n        newSpeed = spinSpeed / 2\n      } else {\n        newSpeed = spinSpeed * 2\n      }\n      this.setState({\n        spinSpeed: newSpeed,\n        spinMsg: `Spinning every ${newSpeed}s`,\n        spinSnack: true\n      })\n    }\n  }\n\n  swap(type) {\n    return () => {\n      const {swapSpeed} = this.state\n      let newSpeed = null\n      if (type === FASTER) {\n        newSpeed = swapSpeed / 2\n      } else {\n        newSpeed = swapSpeed * 2\n      }\n      clearInterval(this.swapTimer)\n      this.setState(\n        {\n          swapSpeed: newSpeed,\n          swapMsg: `Swapping every ${newSpeed / 1000}s`,\n          swapSnack: true\n        },\n        (newState)=> {this.swapTimer = setInterval(this.imgTick, newSpeed)})\n    }\n  }\n\n  render() {\n    const {classes} = this.props\n    const {imgIdx, spinSpeed, swapMsg,\n           spinMsg, spinSnack, swapSnack} = this.state\n    const logo = imgs[imgIdx]\n    const spinStyle = spinImgAt(spinSpeed)\n    return (\n      <div className=\"Home\">\n        {/* Snackbars */}\n        {createSnackBar('bottom', 'left', spinMsg, spinSnack,\n                        () => {this.setState({spinSnack: false})})}\n        {createSnackBar('bottom', 'right', swapMsg, swapSnack,\n                        () => {this.setState({swapSnack: false})})}\n        {/* Spinning Image */}\n        <img src={logo}\n        className=\"Spinning-Image\"\n        alt=\"logo\"\n        style={spinStyle}/>\n        {/* Control Card */}\n        <Card className={classes.card} elevation={5}>\n          <CardContent>\n            <Typography component=\"p\">\n              Hi, I'm Daniel. I love making things.\n              <br/>\n              You can see some of them on this site or linked below.\n              <br/>\n              Have fun <i>spinning</i>.\n            </Typography>\n          </CardContent>\n          <CardActions style={{justifyContent: 'center'}}>\n             {createControl(\"Spin\", this.spin)}\n             <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={this.reset}>Reset</Button>\n             {createControl(\"Swap\", this.swap)}\n          </CardActions>\n        </Card>\n        {/* Links */}\n        <div>\n        {createLinks(LINKS)}\n        </div>\n      </div>\n    )\n  }\n}\n\nHome.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(Home)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport SmileIcon from '@material-ui/icons/InsertEmoticon'\n\nconst styles = {\n  list: {\n    width: 250,\n  }\n}\n\n// List of all Drawer Items\nconst DRAWER_LIST = [\n  {\n    text: \"More coming soon...\",\n    icon: (<SmileIcon/>),\n    link: \"/\"\n  },\n]\n\nfunction createList(dList) {\n  return (\n    <List>\n      {DRAWER_LIST.map((dItem) => (\n        <Link to={dItem.link} key={dItem.text}>\n          <ListItem button>\n            <ListItemIcon>{dItem.icon}</ListItemIcon>\n            <ListItemText primary={dItem.text}/>\n          </ListItem>\n        </Link>\n      ))}\n    </List>\n  )\n}\n\nclass TempDrawer extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n    }\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (this.state.open !== nextProps.opened) {\n      this.setState({open: nextProps.opened})\n    }\n  }\n\n  toggle(state) {\n    return () => this.setState({\n      open: state\n    })\n  }\n\n  render() {\n    const { classes } = this.props\n\n    const sideList = (\n      <div className={classes.list}>\n        {createList(DRAWER_LIST)}\n        <Divider/>\n      </div>\n    )\n\n    return (\n      <div>\n        <Drawer open={this.state.open} onClose={this.toggle(false)}>\n          <div\n            tabIndex={0}\n            role=\"button\"\n            onClick={this.toggle(false)}\n            onKeyDown={this.toggle(false)}>\n            {sideList}\n          </div>\n        </Drawer>\n      </div>\n    )\n  }\n}\n\nTempDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(TempDrawer)\n","import React, { Component } from 'react'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport TempDrawer from './TempDrawer'\n\nconst styles = (theme) => ({\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  bar: {\n    marginBottom: \"0vw\",\n  },\n  show: {\n    transform: 'translateY(0)',\n    transition: 'transform .5s',\n  },\n  hide: {\n    transform: 'translateY(-110%)',\n    transition: 'transform .5s',\n  },\n})\n\nclass NavBar extends Component {\n\n  constructor(props) {\n    super(props)\n    this.openDrawer = this.openDrawer.bind(this)\n    this.state = {\n      drawerOpen: false,\n      shouldShow: null\n    }\n    this.lastScroll = null\n    this.handleScroll = _.throttle(this.handleScroll.bind(this), 100)\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll, { passive: true })\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll)\n  }\n\n  handleScroll(evt) {\n    const lastScroll = window.scrollY\n    if (lastScroll === this.lastScroll) {\n      return\n    }\n    const shouldShow = (this.lastScroll !== null) ?  (lastScroll < this.lastScroll) : null\n    if (shouldShow !== this.state.shouldShow) {\n      this.setState((prevState, props) => {\n        return {\n            drawerOpen: false,\n            shouldShow: shouldShow\n          }\n      })\n    }\n    this.lastScroll = lastScroll\n  }\n\n  openDrawer() {\n    this.setState({drawerOpen: true})\n  }\n\n  render() {\n    const {classes} = this.props\n    const barClass = (`${classes.bar} ${\n              this.state.shouldShow === null ? '' : (\n                this.state.shouldShow ? classes.show : classes.hide\n              )\n            }`)\n    return (\n      <AppBar position=\"static\"\n              color=\"primary\"\n              className={barClass}>\n         <Toolbar>\n            <IconButton\n              className={classes.menuButton}\n              aria-label=\"Open drawer\"\n              onClick={this.openDrawer}>\n              <MenuIcon/>\n            </IconButton>\n            <Link to='/' style={{textDecoration: 'none'}}>\n               <Typography variant=\"h5\">\n               reatret.net\n               </Typography>\n            </Link>\n         </Toolbar>\n         <TempDrawer opened={this.state.drawerOpen}/>\n      </AppBar>\n    )\n  }\n}\n\nNavBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(NavBar)\n\n\n\n","import React, { Component } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport { withStyles, MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Home from './Home'\nimport NavBar from './NavBar'\n\nconst styles = (theme) => ({\n    root: {\n      flexGrow: 1,\n    }\n  }\n)\n\nconst theme = createMuiTheme(\n  {\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    type: 'dark',\n    primary: {\n        main: '#43a047',\n      },\n    secondary: {\n        main: '#ff80ab',\n      }\n    }\n  }\n)\n\nclass App extends Component {\n\n  render() {\n    const {classes} = this.props\n    return (\n      <React.Fragment>\n        <MuiThemeProvider theme={theme}>\n          <CssBaseline/>\n          <NavBar/>\n            <Switch className={classes.root}>\n              <Route exact path='/' component={Home}/>\n            </Switch>\n        </MuiThemeProvider>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default withStyles(styles)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom'\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t(<BrowserRouter>\n\t \t<App/>\n\t </BrowserRouter>),\n\tdocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/kiwi.a0352b91.png\";","module.exports = __webpack_public_path__ + \"static/media/komodo.93a84db4.png\";","module.exports = __webpack_public_path__ + \"static/media/trex.6e57b2ee.png\";"],"sourceRoot":""}